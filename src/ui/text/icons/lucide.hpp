#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct Lucide
    {
        constexpr static inline std::string_view FileName{ "lucide.ttf" };

        constexpr static inline u16 IconMin{ 0xe038 };
        constexpr static inline u16 IconMax_16{ 0xe5e3 };
        constexpr static inline u16 IconMax{ 0xe5e3 };

        constexpr static inline std::string_view AArrowDown{ "\xee\x96\x89" };                       // U+e589
        constexpr static inline std::string_view AArrowUp{ "\xee\x96\x8a" };                         // U+e58a
        constexpr static inline std::string_view ALargeSmall{ "\xee\x96\x8b" };                      // U+e58b
        constexpr static inline std::string_view Accessibility{ "\xee\x8a\x96" };                    // U+e296
        constexpr static inline std::string_view Activity{ "\xee\x80\xb8" };                         // U+e038
        constexpr static inline std::string_view AirVent{ "\xee\x8d\x90" };                          // U+e350
        constexpr static inline std::string_view Airplay{ "\xee\x80\xb9" };                          // U+e039
        constexpr static inline std::string_view AlarmClockCheck{ "\xee\x87\xaa" };                  // U+e1ea
        constexpr static inline std::string_view AlarmClockMinus{ "\xee\x87\xab" };                  // U+e1eb
        constexpr static inline std::string_view AlarmClockOff{ "\xee\x88\xba" };                    // U+e23a
        constexpr static inline std::string_view AlarmClockPlus{ "\xee\x87\xac" };                   // U+e1ec
        constexpr static inline std::string_view AlarmClock{ "\xee\x80\xba" };                       // U+e03a
        constexpr static inline std::string_view AlarmSmoke{ "\xee\x95\xbf" };                       // U+e57f
        constexpr static inline std::string_view Album{ "\xee\x80\xbb" };                            // U+e03b
        constexpr static inline std::string_view AlignCenterHorizontal{ "\xee\x89\xab" };            // U+e26b
        constexpr static inline std::string_view AlignCenterVertical{ "\xee\x89\xac" };              // U+e26c
        constexpr static inline std::string_view AlignCenter{ "\xee\x80\xbc" };                      // U+e03c
        constexpr static inline std::string_view AlignEndHorizontal{ "\xee\x89\xad" };               // U+e26d
        constexpr static inline std::string_view AlignEndVertical{ "\xee\x89\xae" };                 // U+e26e
        constexpr static inline std::string_view AlignHorizontalDistributeCenter{ "\xee\x80\xbd" };  // U+e03d
        constexpr static inline std::string_view AlignHorizontalDistributeEnd{ "\xee\x80\xbe" };     // U+e03e
        constexpr static inline std::string_view AlignHorizontalDistributeStart{ "\xee\x80\xbf" };   // U+e03f
        constexpr static inline std::string_view AlignHorizontalJustifyCenter{ "\xee\x89\xb1" };     // U+e271
        constexpr static inline std::string_view AlignHorizontalJustifyEnd{ "\xee\x89\xb2" };        // U+e272
        constexpr static inline std::string_view AlignHorizontalJustifyStart{ "\xee\x89\xb3" };      // U+e273
        constexpr static inline std::string_view AlignHorizontalSpaceAround{ "\xee\x89\xb4" };       // U+e274
        constexpr static inline std::string_view AlignHorizontalSpaceBetween{ "\xee\x89\xb5" };      // U+e275
        constexpr static inline std::string_view AlignJustify{ "\xee\x81\x80" };                     // U+e040
        constexpr static inline std::string_view AlignLeft{ "\xee\x81\x81" };                        // U+e041
        constexpr static inline std::string_view AlignRight{ "\xee\x81\x82" };                       // U+e042
        constexpr static inline std::string_view AlignStartHorizontal{ "\xee\x89\xaf" };             // U+e26f
        constexpr static inline std::string_view AlignStartVertical{ "\xee\x89\xb0" };               // U+e270
        constexpr static inline std::string_view AlignVerticalDistributeCenter{ "\xee\x89\xbd" };    // U+e27d
        constexpr static inline std::string_view AlignVerticalDistributeEnd{ "\xee\x89\xbe" };       // U+e27e
        constexpr static inline std::string_view AlignVerticalDistributeStart{ "\xee\x89\xbf" };     // U+e27f
        constexpr static inline std::string_view AlignVerticalJustifyCenter{ "\xee\x89\xb6" };       // U+e276
        constexpr static inline std::string_view AlignVerticalJustifyEnd{ "\xee\x89\xb7" };          // U+e277
        constexpr static inline std::string_view AlignVerticalJustifyStart{ "\xee\x89\xb8" };        // U+e278
        constexpr static inline std::string_view AlignVerticalSpaceAround{ "\xee\x89\xb9" };         // U+e279
        constexpr static inline std::string_view AlignVerticalSpaceBetween{ "\xee\x89\xba" };        // U+e27a
        constexpr static inline std::string_view Ambulance{ "\xee\x96\xbf" };                        // U+e5bf
        constexpr static inline std::string_view Ampersand{ "\xee\x92\xa0" };                        // U+e4a0
        constexpr static inline std::string_view Ampersands{ "\xee\x92\xa1" };                       // U+e4a1
        constexpr static inline std::string_view Anchor{ "\xee\x81\x83" };                           // U+e043
        constexpr static inline std::string_view Angry{ "\xee\x8b\xbb" };                            // U+e2fb
        constexpr static inline std::string_view Annoyed{ "\xee\x8b\xbc" };                          // U+e2fc
        constexpr static inline std::string_view Antenna{ "\xee\x93\xa6" };                          // U+e4e6
        constexpr static inline std::string_view Anvil{ "\xee\x96\x84" };                            // U+e584
        constexpr static inline std::string_view Aperture{ "\xee\x81\x84" };                         // U+e044
        constexpr static inline std::string_view AppWindowMac{ "\xee\x97\x96" };                     // U+e5d6
        constexpr static inline std::string_view AppWindow{ "\xee\x90\xaa" };                        // U+e42a
        constexpr static inline std::string_view Apple{ "\xee\x8d\x91" };                            // U+e351
        constexpr static inline std::string_view ArchiveRestore{ "\xee\x8b\x8c" };                   // U+e2cc
        constexpr static inline std::string_view ArchiveX{ "\xee\x94\x90" };                         // U+e510
        constexpr static inline std::string_view Archive{ "\xee\x81\x85" };                          // U+e045
        constexpr static inline std::string_view AreaChart{ "\xee\x93\x97" };                        // U+e4d7
        constexpr static inline std::string_view Armchair{ "\xee\x8a\xbf" };                         // U+e2bf
        constexpr static inline std::string_view ArrowBigDownDash{ "\xee\x90\xa1" };                 // U+e421
        constexpr static inline std::string_view ArrowBigDown{ "\xee\x87\x9f" };                     // U+e1df
        constexpr static inline std::string_view ArrowBigLeftDash{ "\xee\x90\xa2" };                 // U+e422
        constexpr static inline std::string_view ArrowBigLeft{ "\xee\x87\xa0" };                     // U+e1e0
        constexpr static inline std::string_view ArrowBigRightDash{ "\xee\x90\xa3" };                // U+e423
        constexpr static inline std::string_view ArrowBigRight{ "\xee\x87\xa1" };                    // U+e1e1
        constexpr static inline std::string_view ArrowBigUpDash{ "\xee\x90\xa4" };                   // U+e424
        constexpr static inline std::string_view ArrowBigUp{ "\xee\x87\xa2" };                       // U+e1e2
        constexpr static inline std::string_view ArrowDown_0_1{ "\xee\x90\x97" };                    // U+e417
        constexpr static inline std::string_view ArrowDown_1_0{ "\xee\x90\x98" };                    // U+e418
        constexpr static inline std::string_view ArrowDownAZ{ "\xee\x90\x99" };                      // U+e419
        constexpr static inline std::string_view ArrowDownFromLine{ "\xee\x91\x98" };                // U+e458
        constexpr static inline std::string_view ArrowDownLeft{ "\xee\x81\x87" };                    // U+e047
        constexpr static inline std::string_view ArrowDownNarrowWide{ "\xee\x81\x88" };              // U+e048
        constexpr static inline std::string_view ArrowDownRight{ "\xee\x81\x89" };                   // U+e049
        constexpr static inline std::string_view ArrowDownToDot{ "\xee\x91\x91" };                   // U+e451
        constexpr static inline std::string_view ArrowDownToLine{ "\xee\x91\x99" };                  // U+e459
        constexpr static inline std::string_view ArrowDownUp{ "\xee\x81\x8a" };                      // U+e04a
        constexpr static inline std::string_view ArrowDownWideNarrow{ "\xee\x81\x8b" };              // U+e04b
        constexpr static inline std::string_view ArrowDownZA{ "\xee\x90\x9a" };                      // U+e41a
        constexpr static inline std::string_view ArrowDown{ "\xee\x81\x86" };                        // U+e046
        constexpr static inline std::string_view ArrowLeftFromLine{ "\xee\x91\x9a" };                // U+e45a
        constexpr static inline std::string_view ArrowLeftRight{ "\xee\x89\x89" };                   // U+e249
        constexpr static inline std::string_view ArrowLeftToLine{ "\xee\x91\x9b" };                  // U+e45b
        constexpr static inline std::string_view ArrowLeft{ "\xee\x81\x8c" };                        // U+e04c
        constexpr static inline std::string_view ArrowRightFromLine{ "\xee\x91\x9c" };               // U+e45c
        constexpr static inline std::string_view ArrowRightLeft{ "\xee\x90\x9b" };                   // U+e41b
        constexpr static inline std::string_view ArrowRightToLine{ "\xee\x91\x9d" };                 // U+e45d
        constexpr static inline std::string_view ArrowRight{ "\xee\x81\x8d" };                       // U+e04d
        constexpr static inline std::string_view ArrowUp_0_1{ "\xee\x90\x9c" };                      // U+e41c
        constexpr static inline std::string_view ArrowUp_1_0{ "\xee\x90\x9d" };                      // U+e41d
        constexpr static inline std::string_view ArrowUpAZ{ "\xee\x90\x9e" };                        // U+e41e
        constexpr static inline std::string_view ArrowUpDown{ "\xee\x8e\x80" };                      // U+e380
        constexpr static inline std::string_view ArrowUpFromDot{ "\xee\x91\x92" };                   // U+e452
        constexpr static inline std::string_view ArrowUpFromLine{ "\xee\x91\x9e" };                  // U+e45e
        constexpr static inline std::string_view ArrowUpLeft{ "\xee\x81\x8f" };                      // U+e04f
        constexpr static inline std::string_view ArrowUpNarrowWide{ "\xee\x81\x90" };                // U+e050
        constexpr static inline std::string_view ArrowUpRight{ "\xee\x81\x91" };                     // U+e051
        constexpr static inline std::string_view ArrowUpToLine{ "\xee\x91\x9f" };                    // U+e45f
        constexpr static inline std::string_view ArrowUpWideNarrow{ "\xee\x90\x9f" };                // U+e41f
        constexpr static inline std::string_view ArrowUpZA{ "\xee\x90\xa0" };                        // U+e420
        constexpr static inline std::string_view ArrowUp{ "\xee\x81\x8e" };                          // U+e04e
        constexpr static inline std::string_view ArrowsUpFromLine{ "\xee\x93\x98" };                 // U+e4d8
        constexpr static inline std::string_view Asterisk{ "\xee\x87\xad" };                         // U+e1ed
        constexpr static inline std::string_view AtSign{ "\xee\x81\x92" };                           // U+e052
        constexpr static inline std::string_view Atom{ "\xee\x8f\x9a" };                             // U+e3da
        constexpr static inline std::string_view AudioLines{ "\xee\x95\x9e" };                       // U+e55e
        constexpr static inline std::string_view AudioWaveform{ "\xee\x95\x9f" };                    // U+e55f
        constexpr static inline std::string_view Award{ "\xee\x81\x93" };                            // U+e053
        constexpr static inline std::string_view Axe{ "\xee\x81\x94" };                              // U+e054
        constexpr static inline std::string_view Axis_3d{ "\xee\x8b\xbd" };                          // U+e2fd
        constexpr static inline std::string_view Baby{ "\xee\x8b\x8d" };                             // U+e2cd
        constexpr static inline std::string_view Backpack{ "\xee\x8b\x87" };                         // U+e2c7
        constexpr static inline std::string_view BadgeAlert{ "\xee\x91\xb9" };                       // U+e479
        constexpr static inline std::string_view BadgeCent{ "\xee\x94\x93" };                        // U+e513
        constexpr static inline std::string_view BadgeCheck{ "\xee\x89\x80" };                       // U+e240
        constexpr static inline std::string_view BadgeDollarSign{ "\xee\x91\xba" };                  // U+e47a
        constexpr static inline std::string_view BadgeEuro{ "\xee\x94\x94" };                        // U+e514
        constexpr static inline std::string_view BadgeHelp{ "\xee\x91\xbb" };                        // U+e47b
        constexpr static inline std::string_view BadgeIndianRupee{ "\xee\x94\x95" };                 // U+e515
        constexpr static inline std::string_view BadgeInfo{ "\xee\x91\xbc" };                        // U+e47c
        constexpr static inline std::string_view BadgeJapaneseYen{ "\xee\x94\x96" };                 // U+e516
        constexpr static inline std::string_view BadgeMinus{ "\xee\x91\xbd" };                       // U+e47d
        constexpr static inline std::string_view BadgePercent{ "\xee\x91\xbe" };                     // U+e47e
        constexpr static inline std::string_view BadgePlus{ "\xee\x91\xbf" };                        // U+e47f
        constexpr static inline std::string_view BadgePoundSterling{ "\xee\x94\x97" };               // U+e517
        constexpr static inline std::string_view BadgeRussianRuble{ "\xee\x94\x98" };                // U+e518
        constexpr static inline std::string_view BadgeSwissFranc{ "\xee\x94\x99" };                  // U+e519
        constexpr static inline std::string_view BadgeX{ "\xee\x92\x80" };                           // U+e480
        constexpr static inline std::string_view Badge{ "\xee\x91\xb8" };                            // U+e478
        constexpr static inline std::string_view BaggageClaim{ "\xee\x8b\x88" };                     // U+e2c8
        constexpr static inline std::string_view Ban{ "\xee\x81\x95" };                              // U+e055
        constexpr static inline std::string_view Banana{ "\xee\x8d\x92" };                           // U+e352
        constexpr static inline std::string_view Banknote{ "\xee\x81\x96" };                         // U+e056
        constexpr static inline std::string_view BarChart_2{ "\xee\x81\x98" };                       // U+e058
        constexpr static inline std::string_view BarChart_3{ "\xee\x8a\xa1" };                       // U+e2a1
        constexpr static inline std::string_view BarChart_4{ "\xee\x8a\xa2" };                       // U+e2a2
        constexpr static inline std::string_view BarChartBig{ "\xee\x92\xab" };                      // U+e4ab
        constexpr static inline std::string_view BarChartHorizontalBig{ "\xee\x92\xac" };            // U+e4ac
        constexpr static inline std::string_view BarChartHorizontal{ "\xee\x8a\xa3" };               // U+e2a3
        constexpr static inline std::string_view BarChart{ "\xee\x81\x97" };                         // U+e057
        constexpr static inline std::string_view Barcode{ "\xee\x94\xb7" };                          // U+e537
        constexpr static inline std::string_view Baseline{ "\xee\x8a\x84" };                         // U+e284
        constexpr static inline std::string_view Bath{ "\xee\x8a\xaa" };                             // U+e2aa
        constexpr static inline std::string_view BatteryCharging{ "\xee\x81\x9a" };                  // U+e05a
        constexpr static inline std::string_view BatteryFull{ "\xee\x81\x9b" };                      // U+e05b
        constexpr static inline std::string_view BatteryLow{ "\xee\x81\x9c" };                       // U+e05c
        constexpr static inline std::string_view BatteryMedium{ "\xee\x81\x9d" };                    // U+e05d
        constexpr static inline std::string_view BatteryWarning{ "\xee\x8e\xaf" };                   // U+e3af
        constexpr static inline std::string_view Battery{ "\xee\x81\x99" };                          // U+e059
        constexpr static inline std::string_view Beaker{ "\xee\x81\x9e" };                           // U+e05e
        constexpr static inline std::string_view BeanOff{ "\xee\x8e\x93" };                          // U+e393
        constexpr static inline std::string_view Bean{ "\xee\x8e\x92" };                             // U+e392
        constexpr static inline std::string_view BedDouble{ "\xee\x8b\x81" };                        // U+e2c1
        constexpr static inline std::string_view BedSingle{ "\xee\x8b\x82" };                        // U+e2c2
        constexpr static inline std::string_view Bed{ "\xee\x8b\x80" };                              // U+e2c0
        constexpr static inline std::string_view Beef{ "\xee\x8e\xa8" };                             // U+e3a8
        constexpr static inline std::string_view BeerOff{ "\xee\x97\x9d" };                          // U+e5dd
        constexpr static inline std::string_view Beer{ "\xee\x8b\x8e" };                             // U+e2ce
        constexpr static inline std::string_view BellDot{ "\xee\x90\xaf" };                          // U+e42f
        constexpr static inline std::string_view BellElectric{ "\xee\x96\x80" };                     // U+e580
        constexpr static inline std::string_view BellMinus{ "\xee\x87\xae" };                        // U+e1ee
        constexpr static inline std::string_view BellOff{ "\xee\x81\xa0" };                          // U+e060
        constexpr static inline std::string_view BellPlus{ "\xee\x87\xaf" };                         // U+e1ef
        constexpr static inline std::string_view BellRing{ "\xee\x88\xa3" };                         // U+e223
        constexpr static inline std::string_view Bell{ "\xee\x81\x9f" };                             // U+e05f
        constexpr static inline std::string_view BetweenHorizontalEnd{ "\xee\x96\x95" };             // U+e595
        constexpr static inline std::string_view BetweenHorizontalStart{ "\xee\x96\x96" };           // U+e596
        constexpr static inline std::string_view BetweenVerticalEnd{ "\xee\x96\x97" };               // U+e597
        constexpr static inline std::string_view BetweenVerticalStart{ "\xee\x96\x98" };             // U+e598
        constexpr static inline std::string_view Bike{ "\xee\x87\x90" };                             // U+e1d0
        constexpr static inline std::string_view Binary{ "\xee\x87\xb0" };                           // U+e1f0
        constexpr static inline std::string_view Biohazard{ "\xee\x91\x85" };                        // U+e445
        constexpr static inline std::string_view Bird{ "\xee\x8f\x88" };                             // U+e3c8
        constexpr static inline std::string_view Bitcoin{ "\xee\x81\xa1" };                          // U+e061
        constexpr static inline std::string_view Blend{ "\xee\x96\xa0" };                            // U+e5a0
        constexpr static inline std::string_view Blinds{ "\xee\x8f\x83" };                           // U+e3c3
        constexpr static inline std::string_view Blocks{ "\xee\x93\xbe" };                           // U+e4fe
        constexpr static inline std::string_view BluetoothConnected{ "\xee\x86\xb6" };               // U+e1b6
        constexpr static inline std::string_view BluetoothOff{ "\xee\x86\xb7" };                     // U+e1b7
        constexpr static inline std::string_view BluetoothSearching{ "\xee\x86\xb8" };               // U+e1b8
        constexpr static inline std::string_view Bluetooth{ "\xee\x81\xa2" };                        // U+e062
        constexpr static inline std::string_view Bold{ "\xee\x81\xa3" };                             // U+e063
        constexpr static inline std::string_view Bolt{ "\xee\x96\x90" };                             // U+e590
        constexpr static inline std::string_view Bomb{ "\xee\x8b\xbe" };                             // U+e2fe
        constexpr static inline std::string_view Bone{ "\xee\x8d\x9b" };                             // U+e35b
        constexpr static inline std::string_view BookA{ "\xee\x95\x88" };                            // U+e548
        constexpr static inline std::string_view BookAudio{ "\xee\x95\x89" };                        // U+e549
        constexpr static inline std::string_view BookCheck{ "\xee\x95\x8a" };                        // U+e54a
        constexpr static inline std::string_view BookCopy{ "\xee\x8f\xb0" };                         // U+e3f0
        constexpr static inline std::string_view BookDashed{ "\xee\x8f\xb1" };                       // U+e3f1
        constexpr static inline std::string_view BookDown{ "\xee\x8f\xb2" };                         // U+e3f2
        constexpr static inline std::string_view BookHeadphones{ "\xee\x95\x8b" };                   // U+e54b
        constexpr static inline std::string_view BookHeart{ "\xee\x95\x8c" };                        // U+e54c
        constexpr static inline std::string_view BookImage{ "\xee\x95\x8d" };                        // U+e54d
        constexpr static inline std::string_view BookKey{ "\xee\x8f\xb3" };                          // U+e3f3
        constexpr static inline std::string_view BookLock{ "\xee\x8f\xb4" };                         // U+e3f4
        constexpr static inline std::string_view BookMarked{ "\xee\x8f\xb5" };                       // U+e3f5
        constexpr static inline std::string_view BookMinus{ "\xee\x8f\xb6" };                        // U+e3f6
        constexpr static inline std::string_view BookOpenCheck{ "\xee\x8e\x84" };                    // U+e384
        constexpr static inline std::string_view BookOpenText{ "\xee\x95\x8e" };                     // U+e54e
        constexpr static inline std::string_view BookOpen{ "\xee\x81\xa5" };                         // U+e065
        constexpr static inline std::string_view BookPlus{ "\xee\x8f\xb7" };                         // U+e3f7
        constexpr static inline std::string_view BookText{ "\xee\x95\x8f" };                         // U+e54f
        constexpr static inline std::string_view BookType{ "\xee\x95\x90" };                         // U+e550
        constexpr static inline std::string_view BookUp_2{ "\xee\x92\xaa" };                         // U+e4aa
        constexpr static inline std::string_view BookUp{ "\xee\x8f\xb8" };                           // U+e3f8
        constexpr static inline std::string_view BookUser{ "\xee\x95\x91" };                         // U+e551
        constexpr static inline std::string_view BookX{ "\xee\x8f\xb9" };                            // U+e3f9
        constexpr static inline std::string_view Book{ "\xee\x81\xa4" };                             // U+e064
        constexpr static inline std::string_view BookmarkCheck{ "\xee\x94\xa3" };                    // U+e523
        constexpr static inline std::string_view BookmarkMinus{ "\xee\x88\xbb" };                    // U+e23b
        constexpr static inline std::string_view BookmarkPlus{ "\xee\x88\xbc" };                     // U+e23c
        constexpr static inline std::string_view BookmarkX{ "\xee\x94\xa4" };                        // U+e524
        constexpr static inline std::string_view Bookmark{ "\xee\x81\xa6" };                         // U+e066
        constexpr static inline std::string_view BoomBox{ "\xee\x93\xb2" };                          // U+e4f2
        constexpr static inline std::string_view BotMessageSquare{ "\xee\x97\x92" };                 // U+e5d2
        constexpr static inline std::string_view Bot{ "\xee\x86\xb9" };                              // U+e1b9
        constexpr static inline std::string_view BoxSelect{ "\xee\x86\xba" };                        // U+e1ba
        constexpr static inline std::string_view Box{ "\xee\x81\xa7" };                              // U+e067
        constexpr static inline std::string_view Boxes{ "\xee\x8b\x8f" };                            // U+e2cf
        constexpr static inline std::string_view Braces{ "\xee\x8d\xad" };                           // U+e36d
        constexpr static inline std::string_view Brackets{ "\xee\x91\x87" };                         // U+e447
        constexpr static inline std::string_view BrainCircuit{ "\xee\x8f\x8a" };                     // U+e3ca
        constexpr static inline std::string_view BrainCog{ "\xee\x8f\x8b" };                         // U+e3cb
        constexpr static inline std::string_view Brain{ "\xee\x8f\x89" };                            // U+e3c9
        constexpr static inline std::string_view BrickWall{ "\xee\x96\x85" };                        // U+e585
        constexpr static inline std::string_view BriefcaseBusiness{ "\xee\x97\x99" };                // U+e5d9
        constexpr static inline std::string_view BriefcaseMedical{ "\xee\x97\x9a" };                 // U+e5da
        constexpr static inline std::string_view Briefcase{ "\xee\x81\xa8" };                        // U+e068
        constexpr static inline std::string_view BringToFront{ "\xee\x93\xb3" };                     // U+e4f3
        constexpr static inline std::string_view Brush{ "\xee\x87\x91" };                            // U+e1d1
        constexpr static inline std::string_view BugOff{ "\xee\x94\x91" };                           // U+e511
        constexpr static inline std::string_view BugPlay{ "\xee\x94\x92" };                          // U+e512
        constexpr static inline std::string_view Bug{ "\xee\x88\x8a" };                              // U+e20a
        constexpr static inline std::string_view Building_2{ "\xee\x8a\x8f" };                       // U+e28f
        constexpr static inline std::string_view Building{ "\xee\x87\x8a" };                         // U+e1ca
        constexpr static inline std::string_view BusFront{ "\xee\x93\xbf" };                         // U+e4ff
        constexpr static inline std::string_view Bus{ "\xee\x87\x92" };                              // U+e1d2
        constexpr static inline std::string_view CableCar{ "\xee\x94\x80" };                         // U+e500
        constexpr static inline std::string_view Cable{ "\xee\x93\xa7" };                            // U+e4e7
        constexpr static inline std::string_view CakeSlice{ "\xee\x92\xbd" };                        // U+e4bd
        constexpr static inline std::string_view Cake{ "\xee\x8d\x87" };                             // U+e347
        constexpr static inline std::string_view Calculator{ "\xee\x86\xbb" };                       // U+e1bb
        constexpr static inline std::string_view CalendarCheck_2{ "\xee\x8a\xb7" };                  // U+e2b7
        constexpr static inline std::string_view CalendarCheck{ "\xee\x8a\xb6" };                    // U+e2b6
        constexpr static inline std::string_view CalendarClock{ "\xee\x8c\x83" };                    // U+e303
        constexpr static inline std::string_view CalendarDays{ "\xee\x8a\xb8" };                     // U+e2b8
        constexpr static inline std::string_view CalendarFold{ "\xee\x96\xb8" };                     // U+e5b8
        constexpr static inline std::string_view CalendarHeart{ "\xee\x8c\x84" };                    // U+e304
        constexpr static inline std::string_view CalendarMinus_2{ "\xee\x96\xb9" };                  // U+e5b9
        constexpr static inline std::string_view CalendarMinus{ "\xee\x8a\xb9" };                    // U+e2b9
        constexpr static inline std::string_view CalendarOff{ "\xee\x8a\xba" };                      // U+e2ba
        constexpr static inline std::string_view CalendarPlus_2{ "\xee\x96\xba" };                   // U+e5ba
        constexpr static inline std::string_view CalendarPlus{ "\xee\x8a\xbb" };                     // U+e2bb
        constexpr static inline std::string_view CalendarRange{ "\xee\x8a\xbc" };                    // U+e2bc
        constexpr static inline std::string_view CalendarSearch{ "\xee\x8c\x85" };                   // U+e305
        constexpr static inline std::string_view CalendarX_2{ "\xee\x8a\xbe" };                      // U+e2be
        constexpr static inline std::string_view CalendarX{ "\xee\x8a\xbd" };                        // U+e2bd
        constexpr static inline std::string_view Calendar{ "\xee\x81\xa9" };                         // U+e069
        constexpr static inline std::string_view CameraOff{ "\xee\x81\xab" };                        // U+e06b
        constexpr static inline std::string_view Camera{ "\xee\x81\xaa" };                           // U+e06a
        constexpr static inline std::string_view CandlestickChart{ "\xee\x92\xad" };                 // U+e4ad
        constexpr static inline std::string_view CandyCane{ "\xee\x92\xbe" };                        // U+e4be
        constexpr static inline std::string_view CandyOff{ "\xee\x8e\x95" };                         // U+e395
        constexpr static inline std::string_view Candy{ "\xee\x8e\x94" };                            // U+e394
        constexpr static inline std::string_view Cannabis{ "\xee\x97\x98" };                         // U+e5d8
        constexpr static inline std::string_view CaptionsOff{ "\xee\x97\x85" };                      // U+e5c5
        constexpr static inline std::string_view Captions{ "\xee\x8e\xa7" };                         // U+e3a7
        constexpr static inline std::string_view CarFront{ "\xee\x94\x81" };                         // U+e501
        constexpr static inline std::string_view CarTaxiFront{ "\xee\x94\x82" };                     // U+e502
        constexpr static inline std::string_view Car{ "\xee\x87\x93" };                              // U+e1d3
        constexpr static inline std::string_view Caravan{ "\xee\x94\xbd" };                          // U+e53d
        constexpr static inline std::string_view Carrot{ "\xee\x89\x99" };                           // U+e259
        constexpr static inline std::string_view CaseLower{ "\xee\x8f\x9b" };                        // U+e3db
        constexpr static inline std::string_view CaseSensitive{ "\xee\x8f\x9c" };                    // U+e3dc
        constexpr static inline std::string_view CaseUpper{ "\xee\x8f\x9d" };                        // U+e3dd
        constexpr static inline std::string_view CassetteTape{ "\xee\x93\x8e" };                     // U+e4ce
        constexpr static inline std::string_view Cast{ "\xee\x81\xac" };                             // U+e06c
        constexpr static inline std::string_view Castle{ "\xee\x8f\xa3" };                           // U+e3e3
        constexpr static inline std::string_view Cat{ "\xee\x8e\x8f" };                              // U+e38f
        constexpr static inline std::string_view Cctv{ "\xee\x96\x81" };                             // U+e581
        constexpr static inline std::string_view CheckCheck{ "\xee\x8e\x91" };                       // U+e391
        constexpr static inline std::string_view Check{ "\xee\x81\xad" };                            // U+e06d
        constexpr static inline std::string_view ChefHat{ "\xee\x8a\xab" };                          // U+e2ab
        constexpr static inline std::string_view Cherry{ "\xee\x8d\x93" };                           // U+e353
        constexpr static inline std::string_view ChevronDown{ "\xee\x81\xae" };                      // U+e06e
        constexpr static inline std::string_view ChevronFirst{ "\xee\x89\x82" };                     // U+e242
        constexpr static inline std::string_view ChevronLast{ "\xee\x89\x83" };                      // U+e243
        constexpr static inline std::string_view ChevronLeft{ "\xee\x81\xaf" };                      // U+e06f
        constexpr static inline std::string_view ChevronRight{ "\xee\x81\xb0" };                     // U+e070
        constexpr static inline std::string_view ChevronUp{ "\xee\x81\xb1" };                        // U+e071
        constexpr static inline std::string_view ChevronsDownUp{ "\xee\x88\xa7" };                   // U+e227
        constexpr static inline std::string_view ChevronsDown{ "\xee\x81\xb2" };                     // U+e072
        constexpr static inline std::string_view ChevronsLeftRight{ "\xee\x8a\x92" };                // U+e292
        constexpr static inline std::string_view ChevronsLeft{ "\xee\x81\xb3" };                     // U+e073
        constexpr static inline std::string_view ChevronsRightLeft{ "\xee\x8a\x93" };                // U+e293
        constexpr static inline std::string_view ChevronsRight{ "\xee\x81\xb4" };                    // U+e074
        constexpr static inline std::string_view ChevronsUpDown{ "\xee\x88\x90" };                   // U+e210
        constexpr static inline std::string_view ChevronsUp{ "\xee\x81\xb5" };                       // U+e075
        constexpr static inline std::string_view Chrome{ "\xee\x81\xb6" };                           // U+e076
        constexpr static inline std::string_view Church{ "\xee\x8f\xa4" };                           // U+e3e4
        constexpr static inline std::string_view CigaretteOff{ "\xee\x8b\x86" };                     // U+e2c6
        constexpr static inline std::string_view Cigarette{ "\xee\x8b\x85" };                        // U+e2c5
        constexpr static inline std::string_view CircleAlert{ "\xee\x81\xb8" };                      // U+e078
        constexpr static inline std::string_view CircleArrowDown{ "\xee\x81\xb9" };                  // U+e079
        constexpr static inline std::string_view CircleArrowLeft{ "\xee\x81\xba" };                  // U+e07a
        constexpr static inline std::string_view CircleArrowOutDownLeft{ "\xee\x8f\xbb" };           // U+e3fb
        constexpr static inline std::string_view CircleArrowOutDownRight{ "\xee\x8f\xbc" };          // U+e3fc
        constexpr static inline std::string_view CircleArrowOutUpLeft{ "\xee\x8f\xbd" };             // U+e3fd
        constexpr static inline std::string_view CircleArrowOutUpRight{ "\xee\x8f\xbe" };            // U+e3fe
        constexpr static inline std::string_view CircleArrowRight{ "\xee\x81\xbb" };                 // U+e07b
        constexpr static inline std::string_view CircleArrowUp{ "\xee\x81\xbc" };                    // U+e07c
        constexpr static inline std::string_view CircleCheckBig{ "\xee\x81\xbd" };                   // U+e07d
        constexpr static inline std::string_view CircleCheck{ "\xee\x88\xa5" };                      // U+e225
        constexpr static inline std::string_view CircleChevronDown{ "\xee\x93\xa1" };                // U+e4e1
        constexpr static inline std::string_view CircleChevronLeft{ "\xee\x93\xa2" };                // U+e4e2
        constexpr static inline std::string_view CircleChevronRight{ "\xee\x93\xa3" };               // U+e4e3
        constexpr static inline std::string_view CircleChevronUp{ "\xee\x93\xa4" };                  // U+e4e4
        constexpr static inline std::string_view CircleDashed{ "\xee\x92\xb4" };                     // U+e4b4
        constexpr static inline std::string_view CircleDivide{ "\xee\x81\xbe" };                     // U+e07e
        constexpr static inline std::string_view CircleDollarSign{ "\xee\x92\x81" };                 // U+e481
        constexpr static inline std::string_view CircleDotDashed{ "\xee\x92\xb5" };                  // U+e4b5
        constexpr static inline std::string_view CircleDot{ "\xee\x8d\x88" };                        // U+e348
        constexpr static inline std::string_view CircleEllipsis{ "\xee\x8d\x89" };                   // U+e349
        constexpr static inline std::string_view CircleEqual{ "\xee\x90\x84" };                      // U+e404
        constexpr static inline std::string_view CircleFadingPlus{ "\xee\x97\x80" };                 // U+e5c0
        constexpr static inline std::string_view CircleGauge{ "\xee\x93\xa5" };                      // U+e4e5
        constexpr static inline std::string_view CircleHelp{ "\xee\x81\xbf" };                       // U+e07f
        constexpr static inline std::string_view CircleMinus{ "\xee\x82\x80" };                      // U+e080
        constexpr static inline std::string_view CircleOff{ "\xee\x90\x85" };                        // U+e405
        constexpr static inline std::string_view CircleParkingOff{ "\xee\x8f\x8d" };                 // U+e3cd
        constexpr static inline std::string_view CircleParking{ "\xee\x8f\x8c" };                    // U+e3cc
        constexpr static inline std::string_view CirclePause{ "\xee\x82\x81" };                      // U+e081
        constexpr static inline std::string_view CirclePercent{ "\xee\x94\x9e" };                    // U+e51e
        constexpr static inline std::string_view CirclePlay{ "\xee\x82\x82" };                       // U+e082
        constexpr static inline std::string_view CirclePlus{ "\xee\x82\x83" };                       // U+e083
        constexpr static inline std::string_view CirclePower{ "\xee\x95\x94" };                      // U+e554
        constexpr static inline std::string_view CircleSlash_2{ "\xee\x88\x92" };                    // U+e212
        constexpr static inline std::string_view CircleSlash{ "\xee\x90\x86" };                      // U+e406
        constexpr static inline std::string_view CircleStop{ "\xee\x82\x84" };                       // U+e084
        constexpr static inline std::string_view CircleUserRound{ "\xee\x91\xa6" };                  // U+e466
        constexpr static inline std::string_view CircleUser{ "\xee\x91\xa5" };                       // U+e465
        constexpr static inline std::string_view CircleX{ "\xee\x82\x85" };                          // U+e085
        constexpr static inline std::string_view Circle{ "\xee\x81\xb7" };                           // U+e077
        constexpr static inline std::string_view CircuitBoard{ "\xee\x90\x87" };                     // U+e407
        constexpr static inline std::string_view Citrus{ "\xee\x8d\xb8" };                           // U+e378
        constexpr static inline std::string_view Clapperboard{ "\xee\x8a\x9a" };                     // U+e29a
        constexpr static inline std::string_view ClipboardCheck{ "\xee\x88\x98" };                   // U+e218
        constexpr static inline std::string_view ClipboardCopy{ "\xee\x88\xa4" };                    // U+e224
        constexpr static inline std::string_view ClipboardList{ "\xee\x82\x87" };                    // U+e087
        constexpr static inline std::string_view ClipboardMinus{ "\xee\x97\x82" };                   // U+e5c2
        constexpr static inline std::string_view ClipboardPaste{ "\xee\x8f\xab" };                   // U+e3eb
        constexpr static inline std::string_view ClipboardPenLine{ "\xee\x8c\x87" };                 // U+e307
        constexpr static inline std::string_view ClipboardPen{ "\xee\x8c\x86" };                     // U+e306
        constexpr static inline std::string_view ClipboardPlus{ "\xee\x97\x83" };                    // U+e5c3
        constexpr static inline std::string_view ClipboardType{ "\xee\x8c\x88" };                    // U+e308
        constexpr static inline std::string_view ClipboardX{ "\xee\x88\xa1" };                       // U+e221
        constexpr static inline std::string_view Clipboard{ "\xee\x82\x86" };                        // U+e086
        constexpr static inline std::string_view Clock_1{ "\xee\x89\x8a" };                          // U+e24a
        constexpr static inline std::string_view Clock_10{ "\xee\x89\x8b" };                         // U+e24b
        constexpr static inline std::string_view Clock_11{ "\xee\x89\x8c" };                         // U+e24c
        constexpr static inline std::string_view Clock_12{ "\xee\x89\x8d" };                         // U+e24d
        constexpr static inline std::string_view Clock_2{ "\xee\x89\x8e" };                          // U+e24e
        constexpr static inline std::string_view Clock_3{ "\xee\x89\x8f" };                          // U+e24f
        constexpr static inline std::string_view Clock_4{ "\xee\x89\x90" };                          // U+e250
        constexpr static inline std::string_view Clock_5{ "\xee\x89\x91" };                          // U+e251
        constexpr static inline std::string_view Clock_6{ "\xee\x89\x92" };                          // U+e252
        constexpr static inline std::string_view Clock_7{ "\xee\x89\x93" };                          // U+e253
        constexpr static inline std::string_view Clock_8{ "\xee\x89\x94" };                          // U+e254
        constexpr static inline std::string_view Clock_9{ "\xee\x89\x95" };                          // U+e255
        constexpr static inline std::string_view Clock{ "\xee\x82\x88" };                            // U+e088
        constexpr static inline std::string_view CloudCog{ "\xee\x8c\x89" };                         // U+e309
        constexpr static inline std::string_view CloudDownload{ "\xee\x82\x8a" };                    // U+e08a
        constexpr static inline std::string_view CloudDrizzle{ "\xee\x82\x8b" };                     // U+e08b
        constexpr static inline std::string_view CloudFog{ "\xee\x88\x93" };                         // U+e213
        constexpr static inline std::string_view CloudHail{ "\xee\x82\x8c" };                        // U+e08c
        constexpr static inline std::string_view CloudLightning{ "\xee\x82\x8d" };                   // U+e08d
        constexpr static inline std::string_view CloudMoonRain{ "\xee\x8b\xb9" };                    // U+e2f9
        constexpr static inline std::string_view CloudMoon{ "\xee\x88\x94" };                        // U+e214
        constexpr static inline std::string_view CloudOff{ "\xee\x82\x8e" };                         // U+e08e
        constexpr static inline std::string_view CloudRainWind{ "\xee\x82\x90" };                    // U+e090
        constexpr static inline std::string_view CloudRain{ "\xee\x82\x8f" };                        // U+e08f
        constexpr static inline std::string_view CloudSnow{ "\xee\x82\x91" };                        // U+e091
        constexpr static inline std::string_view CloudSunRain{ "\xee\x8b\xba" };                     // U+e2fa
        constexpr static inline std::string_view CloudSun{ "\xee\x88\x95" };                         // U+e215
        constexpr static inline std::string_view CloudUpload{ "\xee\x82\x92" };                      // U+e092
        constexpr static inline std::string_view Cloud{ "\xee\x82\x89" };                            // U+e089
        constexpr static inline std::string_view Cloudy{ "\xee\x88\x96" };                           // U+e216
        constexpr static inline std::string_view Clover{ "\xee\x82\x93" };                           // U+e093
        constexpr static inline std::string_view Club{ "\xee\x92\x9a" };                             // U+e49a
        constexpr static inline std::string_view CodeXml{ "\xee\x88\x84" };                          // U+e204
        constexpr static inline std::string_view Code{ "\xee\x82\x94" };                             // U+e094
        constexpr static inline std::string_view Codepen{ "\xee\x82\x95" };                          // U+e095
        constexpr static inline std::string_view Codesandbox{ "\xee\x82\x96" };                      // U+e096
        constexpr static inline std::string_view Coffee{ "\xee\x82\x97" };                           // U+e097
        constexpr static inline std::string_view Cog{ "\xee\x8c\x8a" };                              // U+e30a
        constexpr static inline std::string_view Coins{ "\xee\x82\x98" };                            // U+e098
        constexpr static inline std::string_view Columns_2{ "\xee\x82\x99" };                        // U+e099
        constexpr static inline std::string_view Columns_3{ "\xee\x82\x9a" };                        // U+e09a
        constexpr static inline std::string_view Columns_4{ "\xee\x96\x8d" };                        // U+e58d
        constexpr static inline std::string_view Combine{ "\xee\x91\x90" };                          // U+e450
        constexpr static inline std::string_view Command{ "\xee\x82\x9b" };                          // U+e09b
        constexpr static inline std::string_view Compass{ "\xee\x82\x9c" };                          // U+e09c
        constexpr static inline std::string_view Component{ "\xee\x8a\xac" };                        // U+e2ac
        constexpr static inline std::string_view Computer{ "\xee\x93\xa8" };                         // U+e4e8
        constexpr static inline std::string_view ConciergeBell{ "\xee\x8d\xbb" };                    // U+e37b
        constexpr static inline std::string_view Cone{ "\xee\x94\xa7" };                             // U+e527
        constexpr static inline std::string_view Construction{ "\xee\x8e\xb7" };                     // U+e3b7
        constexpr static inline std::string_view ContactRound{ "\xee\x91\xa7" };                     // U+e467
        constexpr static inline std::string_view Contact{ "\xee\x82\x9d" };                          // U+e09d
        constexpr static inline std::string_view Container{ "\xee\x93\x99" };                        // U+e4d9
        constexpr static inline std::string_view Contrast{ "\xee\x82\x9e" };                         // U+e09e
        constexpr static inline std::string_view Cookie{ "\xee\x89\xaa" };                           // U+e26a
        constexpr static inline std::string_view CookingPot{ "\xee\x96\x88" };                       // U+e588
        constexpr static inline std::string_view CopyCheck{ "\xee\x8f\xbf" };                        // U+e3ff
        constexpr static inline std::string_view CopyMinus{ "\xee\x90\x80" };                        // U+e400
        constexpr static inline std::string_view CopyPlus{ "\xee\x90\x81" };                         // U+e401
        constexpr static inline std::string_view CopySlash{ "\xee\x90\x82" };                        // U+e402
        constexpr static inline std::string_view CopyX{ "\xee\x90\x83" };                            // U+e403
        constexpr static inline std::string_view Copy{ "\xee\x82\x9f" };                             // U+e09f
        constexpr static inline std::string_view Copyleft{ "\xee\x82\xa0" };                         // U+e0a0
        constexpr static inline std::string_view Copyright{ "\xee\x82\xa1" };                        // U+e0a1
        constexpr static inline std::string_view CornerDownLeft{ "\xee\x82\xa2" };                   // U+e0a2
        constexpr static inline std::string_view CornerDownRight{ "\xee\x82\xa3" };                  // U+e0a3
        constexpr static inline std::string_view CornerLeftDown{ "\xee\x82\xa4" };                   // U+e0a4
        constexpr static inline std::string_view CornerLeftUp{ "\xee\x82\xa5" };                     // U+e0a5
        constexpr static inline std::string_view CornerRightDown{ "\xee\x82\xa6" };                  // U+e0a6
        constexpr static inline std::string_view CornerRightUp{ "\xee\x82\xa7" };                    // U+e0a7
        constexpr static inline std::string_view CornerUpLeft{ "\xee\x82\xa8" };                     // U+e0a8
        constexpr static inline std::string_view CornerUpRight{ "\xee\x82\xa9" };                    // U+e0a9
        constexpr static inline std::string_view Cpu{ "\xee\x82\xaa" };                              // U+e0aa
        constexpr static inline std::string_view CreativeCommons{ "\xee\x8e\xb5" };                  // U+e3b5
        constexpr static inline std::string_view CreditCard{ "\xee\x82\xab" };                       // U+e0ab
        constexpr static inline std::string_view Croissant{ "\xee\x8a\xad" };                        // U+e2ad
        constexpr static inline std::string_view Crop{ "\xee\x82\xac" };                             // U+e0ac
        constexpr static inline std::string_view Cross{ "\xee\x87\xa3" };                            // U+e1e3
        constexpr static inline std::string_view Crosshair{ "\xee\x82\xad" };                        // U+e0ad
        constexpr static inline std::string_view Crown{ "\xee\x87\x94" };                            // U+e1d4
        constexpr static inline std::string_view Cuboid{ "\xee\x94\xa8" };                           // U+e528
        constexpr static inline std::string_view CupSoda{ "\xee\x8b\x90" };                          // U+e2d0
        constexpr static inline std::string_view Currency{ "\xee\x88\xaf" };                         // U+e22f
        constexpr static inline std::string_view Cylinder{ "\xee\x94\xa9" };                         // U+e529
        constexpr static inline std::string_view DatabaseBackup{ "\xee\x8e\xae" };                   // U+e3ae
        constexpr static inline std::string_view DatabaseZap{ "\xee\x94\x8f" };                      // U+e50f
        constexpr static inline std::string_view Database{ "\xee\x82\xae" };                         // U+e0ae
        constexpr static inline std::string_view Delete{ "\xee\x82\xaf" };                           // U+e0af
        constexpr static inline std::string_view Dessert{ "\xee\x92\xbf" };                          // U+e4bf
        constexpr static inline std::string_view Diameter{ "\xee\x94\xaa" };                         // U+e52a
        constexpr static inline std::string_view DiamondPercent{ "\xee\x94\x9f" };                   // U+e51f
        constexpr static inline std::string_view Diamond{ "\xee\x8b\x91" };                          // U+e2d1
        constexpr static inline std::string_view Dice_1{ "\xee\x8a\x86" };                           // U+e286
        constexpr static inline std::string_view Dice_2{ "\xee\x8a\x87" };                           // U+e287
        constexpr static inline std::string_view Dice_3{ "\xee\x8a\x88" };                           // U+e288
        constexpr static inline std::string_view Dice_4{ "\xee\x8a\x89" };                           // U+e289
        constexpr static inline std::string_view Dice_5{ "\xee\x8a\x8a" };                           // U+e28a
        constexpr static inline std::string_view Dice_6{ "\xee\x8a\x8b" };                           // U+e28b
        constexpr static inline std::string_view Dices{ "\xee\x8b\x84" };                            // U+e2c4
        constexpr static inline std::string_view Diff{ "\xee\x8c\x8b" };                             // U+e30b
        constexpr static inline std::string_view Disc_2{ "\xee\x8f\xba" };                           // U+e3fa
        constexpr static inline std::string_view Disc_3{ "\xee\x92\x98" };                           // U+e498
        constexpr static inline std::string_view DiscAlbum{ "\xee\x95\xa0" };                        // U+e560
        constexpr static inline std::string_view Disc{ "\xee\x82\xb0" };                             // U+e0b0
        constexpr static inline std::string_view Divide{ "\xee\x82\xb1" };                           // U+e0b1
        constexpr static inline std::string_view DnaOff{ "\xee\x8e\x97" };                           // U+e397
        constexpr static inline std::string_view Dna{ "\xee\x8e\x96" };                              // U+e396
        constexpr static inline std::string_view Dock{ "\xee\x97\x97" };                             // U+e5d7
        constexpr static inline std::string_view Dog{ "\xee\x8e\x90" };                              // U+e390
        constexpr static inline std::string_view DollarSign{ "\xee\x82\xb2" };                       // U+e0b2
        constexpr static inline std::string_view Donut{ "\xee\x93\x80" };                            // U+e4c0
        constexpr static inline std::string_view DoorClosed{ "\xee\x8f\x98" };                       // U+e3d8
        constexpr static inline std::string_view DoorOpen{ "\xee\x8f\x99" };                         // U+e3d9
        constexpr static inline std::string_view Dot{ "\xee\x91\x93" };                              // U+e453
        constexpr static inline std::string_view Download{ "\xee\x82\xb3" };                         // U+e0b3
        constexpr static inline std::string_view DraftingCompass{ "\xee\x94\xab" };                  // U+e52b
        constexpr static inline std::string_view Drama{ "\xee\x94\xa5" };                            // U+e525
        constexpr static inline std::string_view Dribbble{ "\xee\x82\xb4" };                         // U+e0b4
        constexpr static inline std::string_view Drill{ "\xee\x96\x91" };                            // U+e591
        constexpr static inline std::string_view Droplet{ "\xee\x82\xb5" };                          // U+e0b5
        constexpr static inline std::string_view Droplets{ "\xee\x82\xb6" };                         // U+e0b6
        constexpr static inline std::string_view Drum{ "\xee\x95\xa1" };                             // U+e561
        constexpr static inline std::string_view Drumstick{ "\xee\x89\x9a" };                        // U+e25a
        constexpr static inline std::string_view Dumbbell{ "\xee\x8e\xa4" };                         // U+e3a4
        constexpr static inline std::string_view EarOff{ "\xee\x8e\x86" };                           // U+e386
        constexpr static inline std::string_view Ear{ "\xee\x8e\x85" };                              // U+e385
        constexpr static inline std::string_view EarthLock{ "\xee\x97\x90" };                        // U+e5d0
        constexpr static inline std::string_view Earth{ "\xee\x87\xb1" };                            // U+e1f1
        constexpr static inline std::string_view Eclipse{ "\xee\x96\xa1" };                          // U+e5a1
        constexpr static inline std::string_view EggFried{ "\xee\x8d\x94" };                         // U+e354
        constexpr static inline std::string_view EggOff{ "\xee\x8e\x98" };                           // U+e398
        constexpr static inline std::string_view Egg{ "\xee\x89\x9c" };                              // U+e25c
        constexpr static inline std::string_view EllipsisVertical{ "\xee\x82\xb8" };                 // U+e0b8
        constexpr static inline std::string_view Ellipsis{ "\xee\x82\xb7" };                         // U+e0b7
        constexpr static inline std::string_view EqualNot{ "\xee\x86\xbd" };                         // U+e1bd
        constexpr static inline std::string_view Equal{ "\xee\x86\xbc" };                            // U+e1bc
        constexpr static inline std::string_view Eraser{ "\xee\x8a\x8e" };                           // U+e28e
        constexpr static inline std::string_view Euro{ "\xee\x82\xb9" };                             // U+e0b9
        constexpr static inline std::string_view Expand{ "\xee\x88\x99" };                           // U+e219
        constexpr static inline std::string_view ExternalLink{ "\xee\x82\xba" };                     // U+e0ba
        constexpr static inline std::string_view EyeOff{ "\xee\x82\xbc" };                           // U+e0bc
        constexpr static inline std::string_view Eye{ "\xee\x82\xbb" };                              // U+e0bb
        constexpr static inline std::string_view Facebook{ "\xee\x82\xbd" };                         // U+e0bd
        constexpr static inline std::string_view Factory{ "\xee\x8a\x9e" };                          // U+e29e
        constexpr static inline std::string_view Fan{ "\xee\x8d\xbc" };                              // U+e37c
        constexpr static inline std::string_view FastForward{ "\xee\x82\xbe" };                      // U+e0be
        constexpr static inline std::string_view Feather{ "\xee\x82\xbf" };                          // U+e0bf
        constexpr static inline std::string_view Fence{ "\xee\x96\x86" };                            // U+e586
        constexpr static inline std::string_view FerrisWheel{ "\xee\x92\x83" };                      // U+e483
        constexpr static inline std::string_view Figma{ "\xee\x83\x80" };                            // U+e0c0
        constexpr static inline std::string_view FileArchive{ "\xee\x8c\x8c" };                      // U+e30c
        constexpr static inline std::string_view FileAudio_2{ "\xee\x8c\x8e" };                      // U+e30e
        constexpr static inline std::string_view FileAudio{ "\xee\x8c\x8d" };                        // U+e30d
        constexpr static inline std::string_view FileAxis_3d{ "\xee\x8c\x8f" };                      // U+e30f
        constexpr static inline std::string_view FileBadge_2{ "\xee\x8c\x91" };                      // U+e311
        constexpr static inline std::string_view FileBadge{ "\xee\x8c\x90" };                        // U+e310
        constexpr static inline std::string_view FileBarChart_2{ "\xee\x8c\x93" };                   // U+e313
        constexpr static inline std::string_view FileBarChart{ "\xee\x8c\x92" };                     // U+e312
        constexpr static inline std::string_view FileBox{ "\xee\x8c\x94" };                          // U+e314
        constexpr static inline std::string_view FileCheck_2{ "\xee\x83\x83" };                      // U+e0c3
        constexpr static inline std::string_view FileCheck{ "\xee\x83\x82" };                        // U+e0c2
        constexpr static inline std::string_view FileClock{ "\xee\x8c\x95" };                        // U+e315
        constexpr static inline std::string_view FileCode_2{ "\xee\x91\xa2" };                       // U+e462
        constexpr static inline std::string_view FileCode{ "\xee\x83\x84" };                         // U+e0c4
        constexpr static inline std::string_view FileCog{ "\xee\x8c\x96" };                          // U+e316
        constexpr static inline std::string_view FileDiff{ "\xee\x8c\x97" };                         // U+e317
        constexpr static inline std::string_view FileDigit{ "\xee\x83\x85" };                        // U+e0c5
        constexpr static inline std::string_view FileDown{ "\xee\x8c\x98" };                         // U+e318
        constexpr static inline std::string_view FileHeart{ "\xee\x8c\x99" };                        // U+e319
        constexpr static inline std::string_view FileImage{ "\xee\x8c\x9a" };                        // U+e31a
        constexpr static inline std::string_view FileInput{ "\xee\x83\x86" };                        // U+e0c6
        constexpr static inline std::string_view FileJson_2{ "\xee\x8d\xaf" };                       // U+e36f
        constexpr static inline std::string_view FileJson{ "\xee\x8d\xae" };                         // U+e36e
        constexpr static inline std::string_view FileKey_2{ "\xee\x8c\x9c" };                        // U+e31c
        constexpr static inline std::string_view FileKey{ "\xee\x8c\x9b" };                          // U+e31b
        constexpr static inline std::string_view FileLineChart{ "\xee\x8c\x9d" };                    // U+e31d
        constexpr static inline std::string_view FileLock_2{ "\xee\x8c\x9f" };                       // U+e31f
        constexpr static inline std::string_view FileLock{ "\xee\x8c\x9e" };                         // U+e31e
        constexpr static inline std::string_view FileMinus_2{ "\xee\x83\x88" };                      // U+e0c8
        constexpr static inline std::string_view FileMinus{ "\xee\x83\x87" };                        // U+e0c7
        constexpr static inline std::string_view FileMusic{ "\xee\x95\xa2" };                        // U+e562
        constexpr static inline std::string_view FileOutput{ "\xee\x83\x89" };                       // U+e0c9
        constexpr static inline std::string_view FilePenLine{ "\xee\x8c\xa1" };                      // U+e321
        constexpr static inline std::string_view FilePen{ "\xee\x8c\xa0" };                          // U+e320
        constexpr static inline std::string_view FilePieChart{ "\xee\x8c\xa2" };                     // U+e322
        constexpr static inline std::string_view FilePlus_2{ "\xee\x83\x8b" };                       // U+e0cb
        constexpr static inline std::string_view FilePlus{ "\xee\x83\x8a" };                         // U+e0ca
        constexpr static inline std::string_view FileQuestion{ "\xee\x8c\xa3" };                     // U+e323
        constexpr static inline std::string_view FileScan{ "\xee\x8c\xa4" };                         // U+e324
        constexpr static inline std::string_view FileSearch_2{ "\xee\x8c\xa5" };                     // U+e325
        constexpr static inline std::string_view FileSearch{ "\xee\x83\x8c" };                       // U+e0cc
        constexpr static inline std::string_view FileSliders{ "\xee\x96\xa4" };                      // U+e5a4
        constexpr static inline std::string_view FileSpreadsheet{ "\xee\x8c\xa6" };                  // U+e326
        constexpr static inline std::string_view FileStack{ "\xee\x92\xa5" };                        // U+e4a5
        constexpr static inline std::string_view FileSymlink{ "\xee\x8c\xa7" };                      // U+e327
        constexpr static inline std::string_view FileTerminal{ "\xee\x8c\xa8" };                     // U+e328
        constexpr static inline std::string_view FileText{ "\xee\x83\x8d" };                         // U+e0cd
        constexpr static inline std::string_view FileType_2{ "\xee\x8d\xb0" };                       // U+e370
        constexpr static inline std::string_view FileType{ "\xee\x8c\xa9" };                         // U+e329
        constexpr static inline std::string_view FileUp{ "\xee\x8c\xaa" };                           // U+e32a
        constexpr static inline std::string_view FileVideo_2{ "\xee\x8c\xac" };                      // U+e32c
        constexpr static inline std::string_view FileVideo{ "\xee\x8c\xab" };                        // U+e32b
        constexpr static inline std::string_view FileVolume_2{ "\xee\x8c\xae" };                     // U+e32e
        constexpr static inline std::string_view FileVolume{ "\xee\x8c\xad" };                       // U+e32d
        constexpr static inline std::string_view FileWarning{ "\xee\x8c\xaf" };                      // U+e32f
        constexpr static inline std::string_view FileX_2{ "\xee\x83\x8f" };                          // U+e0cf
        constexpr static inline std::string_view FileX{ "\xee\x83\x8e" };                            // U+e0ce
        constexpr static inline std::string_view File{ "\xee\x83\x81" };                             // U+e0c1
        constexpr static inline std::string_view Files{ "\xee\x83\x90" };                            // U+e0d0
        constexpr static inline std::string_view Film{ "\xee\x83\x91" };                             // U+e0d1
        constexpr static inline std::string_view FilterX{ "\xee\x8e\xb8" };                          // U+e3b8
        constexpr static inline std::string_view Filter{ "\xee\x83\x92" };                           // U+e0d2
        constexpr static inline std::string_view Fingerprint{ "\xee\x8b\x8a" };                      // U+e2ca
        constexpr static inline std::string_view FireExtinguisher{ "\xee\x96\x82" };                 // U+e582
        constexpr static inline std::string_view FishOff{ "\xee\x8e\xb3" };                          // U+e3b3
        constexpr static inline std::string_view FishSymbol{ "\xee\x93\xb8" };                       // U+e4f8
        constexpr static inline std::string_view Fish{ "\xee\x8e\xa9" };                             // U+e3a9
        constexpr static inline std::string_view FlagOff{ "\xee\x8a\x91" };                          // U+e291
        constexpr static inline std::string_view FlagTriangleLeft{ "\xee\x88\xb6" };                 // U+e236
        constexpr static inline std::string_view FlagTriangleRight{ "\xee\x88\xb7" };                // U+e237
        constexpr static inline std::string_view Flag{ "\xee\x83\x93" };                             // U+e0d3
        constexpr static inline std::string_view FlameKindling{ "\xee\x94\xbe" };                    // U+e53e
        constexpr static inline std::string_view Flame{ "\xee\x83\x94" };                            // U+e0d4
        constexpr static inline std::string_view FlashlightOff{ "\xee\x83\x96" };                    // U+e0d6
        constexpr static inline std::string_view Flashlight{ "\xee\x83\x95" };                       // U+e0d5
        constexpr static inline std::string_view FlaskConicalOff{ "\xee\x8e\x99" };                  // U+e399
        constexpr static inline std::string_view FlaskConical{ "\xee\x83\x97" };                     // U+e0d7
        constexpr static inline std::string_view FlaskRound{ "\xee\x83\x98" };                       // U+e0d8
        constexpr static inline std::string_view FlipHorizontal_2{ "\xee\x8d\xa1" };                 // U+e361
        constexpr static inline std::string_view FlipHorizontal{ "\xee\x8d\xa0" };                   // U+e360
        constexpr static inline std::string_view FlipVertical_2{ "\xee\x8d\xa3" };                   // U+e363
        constexpr static inline std::string_view FlipVertical{ "\xee\x8d\xa2" };                     // U+e362
        constexpr static inline std::string_view Flower_2{ "\xee\x8b\x93" };                         // U+e2d3
        constexpr static inline std::string_view Flower{ "\xee\x8b\x92" };                           // U+e2d2
        constexpr static inline std::string_view Focus{ "\xee\x8a\x9d" };                            // U+e29d
        constexpr static inline std::string_view FoldHorizontal{ "\xee\x90\xbf" };                   // U+e43f
        constexpr static inline std::string_view FoldVertical{ "\xee\x91\x80" };                     // U+e440
        constexpr static inline std::string_view FolderArchive{ "\xee\x8c\xb0" };                    // U+e330
        constexpr static inline std::string_view FolderCheck{ "\xee\x8c\xb1" };                      // U+e331
        constexpr static inline std::string_view FolderClock{ "\xee\x8c\xb2" };                      // U+e332
        constexpr static inline std::string_view FolderClosed{ "\xee\x8c\xb3" };                     // U+e333
        constexpr static inline std::string_view FolderCog{ "\xee\x8c\xb4" };                        // U+e334
        constexpr static inline std::string_view FolderDot{ "\xee\x93\x88" };                        // U+e4c8
        constexpr static inline std::string_view FolderDown{ "\xee\x8c\xb5" };                       // U+e335
        constexpr static inline std::string_view FolderGit_2{ "\xee\x90\x8e" };                      // U+e40e
        constexpr static inline std::string_view FolderGit{ "\xee\x90\x8d" };                        // U+e40d
        constexpr static inline std::string_view FolderHeart{ "\xee\x8c\xb6" };                      // U+e336
        constexpr static inline std::string_view FolderInput{ "\xee\x8c\xb7" };                      // U+e337
        constexpr static inline std::string_view FolderKanban{ "\xee\x93\x89" };                     // U+e4c9
        constexpr static inline std::string_view FolderKey{ "\xee\x8c\xb8" };                        // U+e338
        constexpr static inline std::string_view FolderLock{ "\xee\x8c\xb9" };                       // U+e339
        constexpr static inline std::string_view FolderMinus{ "\xee\x83\x9a" };                      // U+e0da
        constexpr static inline std::string_view FolderOpenDot{ "\xee\x93\x8a" };                    // U+e4ca
        constexpr static inline std::string_view FolderOpen{ "\xee\x89\x86" };                       // U+e246
        constexpr static inline std::string_view FolderOutput{ "\xee\x8c\xba" };                     // U+e33a
        constexpr static inline std::string_view FolderPen{ "\xee\x8c\xbb" };                        // U+e33b
        constexpr static inline std::string_view FolderPlus{ "\xee\x83\x9b" };                       // U+e0db
        constexpr static inline std::string_view FolderRoot{ "\xee\x93\x8b" };                       // U+e4cb
        constexpr static inline std::string_view FolderSearch_2{ "\xee\x8c\xbd" };                   // U+e33d
        constexpr static inline std::string_view FolderSearch{ "\xee\x8c\xbc" };                     // U+e33c
        constexpr static inline std::string_view FolderSymlink{ "\xee\x8c\xbe" };                    // U+e33e
        constexpr static inline std::string_view FolderSync{ "\xee\x93\x8c" };                       // U+e4cc
        constexpr static inline std::string_view FolderTree{ "\xee\x8c\xbf" };                       // U+e33f
        constexpr static inline std::string_view FolderUp{ "\xee\x8d\x80" };                         // U+e340
        constexpr static inline std::string_view FolderX{ "\xee\x8d\x81" };                          // U+e341
        constexpr static inline std::string_view Folder{ "\xee\x83\x99" };                           // U+e0d9
        constexpr static inline std::string_view Folders{ "\xee\x8d\x82" };                          // U+e342
        constexpr static inline std::string_view Footprints{ "\xee\x8e\xbc" };                       // U+e3bc
        constexpr static inline std::string_view Forklift{ "\xee\x8f\x84" };                         // U+e3c4
        constexpr static inline std::string_view Forward{ "\xee\x88\xa8" };                          // U+e228
        constexpr static inline std::string_view Frame{ "\xee\x8a\x90" };                            // U+e290
        constexpr static inline std::string_view Framer{ "\xee\x83\x9c" };                           // U+e0dc
        constexpr static inline std::string_view Frown{ "\xee\x83\x9d" };                            // U+e0dd
        constexpr static inline std::string_view Fuel{ "\xee\x8a\xae" };                             // U+e2ae
        constexpr static inline std::string_view Fullscreen{ "\xee\x94\xb8" };                       // U+e538
        constexpr static inline std::string_view GalleryHorizontalEnd{ "\xee\x93\x93" };             // U+e4d3
        constexpr static inline std::string_view GalleryHorizontal{ "\xee\x93\x92" };                // U+e4d2
        constexpr static inline std::string_view GalleryThumbnails{ "\xee\x93\x94" };                // U+e4d4
        constexpr static inline std::string_view GalleryVerticalEnd{ "\xee\x93\x96" };               // U+e4d6
        constexpr static inline std::string_view GalleryVertical{ "\xee\x93\x95" };                  // U+e4d5
        constexpr static inline std::string_view Gamepad_2{ "\xee\x83\x9f" };                        // U+e0df
        constexpr static inline std::string_view Gamepad{ "\xee\x83\x9e" };                          // U+e0de
        constexpr static inline std::string_view GanttChart{ "\xee\x93\x8d" };                       // U+e4cd
        constexpr static inline std::string_view Gauge{ "\xee\x86\xbe" };                            // U+e1be
        constexpr static inline std::string_view Gavel{ "\xee\x83\xa0" };                            // U+e0e0
        constexpr static inline std::string_view Gem{ "\xee\x89\x81" };                              // U+e241
        constexpr static inline std::string_view Ghost{ "\xee\x88\x8c" };                            // U+e20c
        constexpr static inline std::string_view Gift{ "\xee\x83\xa1" };                             // U+e0e1
        constexpr static inline std::string_view GitBranchPlus{ "\xee\x87\xb2" };                    // U+e1f2
        constexpr static inline std::string_view GitBranch{ "\xee\x83\xa2" };                        // U+e0e2
        constexpr static inline std::string_view GitCommitHorizontal{ "\xee\x83\xa3" };              // U+e0e3
        constexpr static inline std::string_view GitCommitVertical{ "\xee\x95\x96" };                // U+e556
        constexpr static inline std::string_view GitCompareArrows{ "\xee\x95\x97" };                 // U+e557
        constexpr static inline std::string_view GitCompare{ "\xee\x8d\x9c" };                       // U+e35c
        constexpr static inline std::string_view GitFork{ "\xee\x8a\x8c" };                          // U+e28c
        constexpr static inline std::string_view GitGraph{ "\xee\x95\x98" };                         // U+e558
        constexpr static inline std::string_view GitMerge{ "\xee\x83\xa4" };                         // U+e0e4
        constexpr static inline std::string_view GitPullRequestArrow{ "\xee\x95\x99" };              // U+e559
        constexpr static inline std::string_view GitPullRequestClosed{ "\xee\x8d\x9d" };             // U+e35d
        constexpr static inline std::string_view GitPullRequestCreateArrow{ "\xee\x95\x9b" };        // U+e55b
        constexpr static inline std::string_view GitPullRequestCreate{ "\xee\x95\x9a" };             // U+e55a
        constexpr static inline std::string_view GitPullRequestDraft{ "\xee\x8d\x9e" };              // U+e35e
        constexpr static inline std::string_view GitPullRequest{ "\xee\x83\xa5" };                   // U+e0e5
        constexpr static inline std::string_view Github{ "\xee\x83\xa6" };                           // U+e0e6
        constexpr static inline std::string_view Gitlab{ "\xee\x83\xa7" };                           // U+e0e7
        constexpr static inline std::string_view GlassWater{ "\xee\x8b\x94" };                       // U+e2d4
        constexpr static inline std::string_view Glasses{ "\xee\x88\x8b" };                          // U+e20b
        constexpr static inline std::string_view GlobeLock{ "\xee\x97\x91" };                        // U+e5d1
        constexpr static inline std::string_view Globe{ "\xee\x83\xa8" };                            // U+e0e8
        constexpr static inline std::string_view Goal{ "\xee\x92\xa9" };                             // U+e4a9
        constexpr static inline std::string_view Grab{ "\xee\x87\xa4" };                             // U+e1e4
        constexpr static inline std::string_view GraduationCap{ "\xee\x88\xb3" };                    // U+e233
        constexpr static inline std::string_view Grape{ "\xee\x8d\x95" };                            // U+e355
        constexpr static inline std::string_view Grid_2x2{ "\xee\x94\x83" };                         // U+e503
        constexpr static inline std::string_view Grid_3x3{ "\xee\x83\xa9" };                         // U+e0e9
        constexpr static inline std::string_view GripHorizontal{ "\xee\x83\xaa" };                   // U+e0ea
        constexpr static inline std::string_view GripVertical{ "\xee\x83\xab" };                     // U+e0eb
        constexpr static inline std::string_view Grip{ "\xee\x8e\xb4" };                             // U+e3b4
        constexpr static inline std::string_view Group{ "\xee\x91\xa8" };                            // U+e468
        constexpr static inline std::string_view Guitar{ "\xee\x95\xa3" };                           // U+e563
        constexpr static inline std::string_view Ham{ "\xee\x97\x9b" };                              // U+e5db
        constexpr static inline std::string_view Hammer{ "\xee\x83\xac" };                           // U+e0ec
        constexpr static inline std::string_view HandCoins{ "\xee\x96\xbc" };                        // U+e5bc
        constexpr static inline std::string_view HandHeart{ "\xee\x96\xbd" };                        // U+e5bd
        constexpr static inline std::string_view HandHelping{ "\xee\x8e\xbb" };                      // U+e3bb
        constexpr static inline std::string_view HandMetal{ "\xee\x88\xab" };                        // U+e22b
        constexpr static inline std::string_view HandPlatter{ "\xee\x96\xbe" };                      // U+e5be
        constexpr static inline std::string_view Hand{ "\xee\x87\x95" };                             // U+e1d5
        constexpr static inline std::string_view Handshake{ "\xee\x97\x84" };                        // U+e5c4
        constexpr static inline std::string_view HardDriveDownload{ "\xee\x93\xa9" };                // U+e4e9
        constexpr static inline std::string_view HardDriveUpload{ "\xee\x93\xaa" };                  // U+e4ea
        constexpr static inline std::string_view HardDrive{ "\xee\x83\xad" };                        // U+e0ed
        constexpr static inline std::string_view HardHat{ "\xee\x83\xae" };                          // U+e0ee
        constexpr static inline std::string_view Hash{ "\xee\x83\xaf" };                             // U+e0ef
        constexpr static inline std::string_view Haze{ "\xee\x83\xb0" };                             // U+e0f0
        constexpr static inline std::string_view HdmiPort{ "\xee\x93\xab" };                         // U+e4eb
        constexpr static inline std::string_view Heading_1{ "\xee\x8e\x88" };                        // U+e388
        constexpr static inline std::string_view Heading_2{ "\xee\x8e\x89" };                        // U+e389
        constexpr static inline std::string_view Heading_3{ "\xee\x8e\x8a" };                        // U+e38a
        constexpr static inline std::string_view Heading_4{ "\xee\x8e\x8b" };                        // U+e38b
        constexpr static inline std::string_view Heading_5{ "\xee\x8e\x8c" };                        // U+e38c
        constexpr static inline std::string_view Heading_6{ "\xee\x8e\x8d" };                        // U+e38d
        constexpr static inline std::string_view Heading{ "\xee\x8e\x87" };                          // U+e387
        constexpr static inline std::string_view Headphones{ "\xee\x83\xb1" };                       // U+e0f1
        constexpr static inline std::string_view Headset{ "\xee\x97\x81" };                          // U+e5c1
        constexpr static inline std::string_view HeartCrack{ "\xee\x8b\x95" };                       // U+e2d5
        constexpr static inline std::string_view HeartHandshake{ "\xee\x8b\x96" };                   // U+e2d6
        constexpr static inline std::string_view HeartOff{ "\xee\x8a\x94" };                         // U+e294
        constexpr static inline std::string_view HeartPulse{ "\xee\x8d\xb1" };                       // U+e371
        constexpr static inline std::string_view Heart{ "\xee\x83\xb2" };                            // U+e0f2
        constexpr static inline std::string_view Heater{ "\xee\x96\x92" };                           // U+e592
        constexpr static inline std::string_view Hexagon{ "\xee\x83\xb3" };                          // U+e0f3
        constexpr static inline std::string_view Highlighter{ "\xee\x83\xb4" };                      // U+e0f4
        constexpr static inline std::string_view History{ "\xee\x87\xb3" };                          // U+e1f3
        constexpr static inline std::string_view Home{ "\xee\x83\xb5" };                             // U+e0f5
        constexpr static inline std::string_view HopOff{ "\xee\x8e\x9b" };                           // U+e39b
        constexpr static inline std::string_view Hop{ "\xee\x8e\x9a" };                              // U+e39a
        constexpr static inline std::string_view Hospital{ "\xee\x97\x9c" };                         // U+e5dc
        constexpr static inline std::string_view Hotel{ "\xee\x8f\xa5" };                            // U+e3e5
        constexpr static inline std::string_view Hourglass{ "\xee\x8a\x95" };                        // U+e295
        constexpr static inline std::string_view IceCreamBowl{ "\xee\x8e\xaa" };                     // U+e3aa
        constexpr static inline std::string_view IceCreamCone{ "\xee\x8d\x96" };                     // U+e356
        constexpr static inline std::string_view ImageDown{ "\xee\x95\x80" };                        // U+e540
        constexpr static inline std::string_view ImageMinus{ "\xee\x87\xb4" };                       // U+e1f4
        constexpr static inline std::string_view ImageOff{ "\xee\x86\xbf" };                         // U+e1bf
        constexpr static inline std::string_view ImagePlay{ "\xee\x97\xa3" };                        // U+e5e3
        constexpr static inline std::string_view ImagePlus{ "\xee\x87\xb5" };                        // U+e1f5
        constexpr static inline std::string_view ImageUp{ "\xee\x97\x8f" };                          // U+e5cf
        constexpr static inline std::string_view Image{ "\xee\x83\xb6" };                            // U+e0f6
        constexpr static inline std::string_view Images{ "\xee\x97\x88" };                           // U+e5c8
        constexpr static inline std::string_view Import{ "\xee\x88\xae" };                           // U+e22e
        constexpr static inline std::string_view Inbox{ "\xee\x83\xb7" };                            // U+e0f7
        constexpr static inline std::string_view IndentDecrease{ "\xee\x83\xb8" };                   // U+e0f8
        constexpr static inline std::string_view IndentIncrease{ "\xee\x83\xb9" };                   // U+e0f9
        constexpr static inline std::string_view IndianRupee{ "\xee\x83\xba" };                      // U+e0fa
        constexpr static inline std::string_view Infinity{ "\xee\x87\xa5" };                         // U+e1e5
        constexpr static inline std::string_view Info{ "\xee\x83\xbb" };                             // U+e0fb
        constexpr static inline std::string_view InspectionPanel{ "\xee\x96\x87" };                  // U+e587
        constexpr static inline std::string_view Instagram{ "\xee\x83\xbc" };                        // U+e0fc
        constexpr static inline std::string_view Italic{ "\xee\x83\xbd" };                           // U+e0fd
        constexpr static inline std::string_view IterationCcw{ "\xee\x90\xa7" };                     // U+e427
        constexpr static inline std::string_view IterationCw{ "\xee\x90\xa8" };                      // U+e428
        constexpr static inline std::string_view JapaneseYen{ "\xee\x83\xbe" };                      // U+e0fe
        constexpr static inline std::string_view Joystick{ "\xee\x8d\x98" };                         // U+e358
        constexpr static inline std::string_view Kanban{ "\xee\x93\xa0" };                           // U+e4e0
        constexpr static inline std::string_view KeyRound{ "\xee\x92\xa7" };                         // U+e4a7
        constexpr static inline std::string_view KeySquare{ "\xee\x92\xa8" };                        // U+e4a8
        constexpr static inline std::string_view Key{ "\xee\x83\xbf" };                              // U+e0ff
        constexpr static inline std::string_view KeyboardMusic{ "\xee\x95\xa4" };                    // U+e564
        constexpr static inline std::string_view KeyboardOff{ "\xee\x97\xa2" };                      // U+e5e2
        constexpr static inline std::string_view Keyboard{ "\xee\x8a\x83" };                         // U+e283
        constexpr static inline std::string_view LampCeiling{ "\xee\x8b\x98" };                      // U+e2d8
        constexpr static inline std::string_view LampDesk{ "\xee\x8b\x99" };                         // U+e2d9
        constexpr static inline std::string_view LampFloor{ "\xee\x8b\x9a" };                        // U+e2da
        constexpr static inline std::string_view LampWallDown{ "\xee\x8b\x9b" };                     // U+e2db
        constexpr static inline std::string_view LampWallUp{ "\xee\x8b\x9c" };                       // U+e2dc
        constexpr static inline std::string_view Lamp{ "\xee\x8b\x97" };                             // U+e2d7
        constexpr static inline std::string_view LandPlot{ "\xee\x94\xac" };                         // U+e52c
        constexpr static inline std::string_view Landmark{ "\xee\x88\xb9" };                         // U+e239
        constexpr static inline std::string_view Languages{ "\xee\x84\x80" };                        // U+e100
        constexpr static inline std::string_view LaptopMinimal{ "\xee\x87\x96" };                    // U+e1d6
        constexpr static inline std::string_view Laptop{ "\xee\x87\x8b" };                           // U+e1cb
        constexpr static inline std::string_view LassoSelect{ "\xee\x87\x8d" };                      // U+e1cd
        constexpr static inline std::string_view Lasso{ "\xee\x87\x8c" };                            // U+e1cc
        constexpr static inline std::string_view Laugh{ "\xee\x8b\xbf" };                            // U+e2ff
        constexpr static inline std::string_view Layers_2{ "\xee\x94\xad" };                         // U+e52d
        constexpr static inline std::string_view Layers_3{ "\xee\x94\xae" };                         // U+e52e
        constexpr static inline std::string_view Layers{ "\xee\x84\x81" };                           // U+e101
        constexpr static inline std::string_view LayoutDashboard{ "\xee\x87\x80" };                  // U+e1c0
        constexpr static inline std::string_view LayoutGrid{ "\xee\x84\x82" };                       // U+e102
        constexpr static inline std::string_view LayoutList{ "\xee\x87\x97" };                       // U+e1d7
        constexpr static inline std::string_view LayoutPanelLeft{ "\xee\x91\xb4" };                  // U+e474
        constexpr static inline std::string_view LayoutPanelTop{ "\xee\x91\xb5" };                   // U+e475
        constexpr static inline std::string_view LayoutTemplate{ "\xee\x88\x85" };                   // U+e205
        constexpr static inline std::string_view Leaf{ "\xee\x8b\x9d" };                             // U+e2dd
        constexpr static inline std::string_view LeafyGreen{ "\xee\x91\xb3" };                       // U+e473
        constexpr static inline std::string_view LibraryBig{ "\xee\x95\x92" };                       // U+e552
        constexpr static inline std::string_view Library{ "\xee\x84\x83" };                          // U+e103
        constexpr static inline std::string_view LifeBuoy{ "\xee\x84\x84" };                         // U+e104
        constexpr static inline std::string_view Ligature{ "\xee\x90\xbe" };                         // U+e43e
        constexpr static inline std::string_view LightbulbOff{ "\xee\x88\x86" };                     // U+e206
        constexpr static inline std::string_view Lightbulb{ "\xee\x87\x81" };                        // U+e1c1
        constexpr static inline std::string_view LineChart{ "\xee\x8a\xa4" };                        // U+e2a4
        constexpr static inline std::string_view Link_2Off{ "\xee\x84\x87" };                        // U+e107
        constexpr static inline std::string_view Link_2{ "\xee\x84\x86" };                           // U+e106
        constexpr static inline std::string_view Link{ "\xee\x84\x85" };                             // U+e105
        constexpr static inline std::string_view Linkedin{ "\xee\x84\x88" };                         // U+e108
        constexpr static inline std::string_view ListChecks{ "\xee\x87\x8e" };                       // U+e1ce
        constexpr static inline std::string_view ListCollapse{ "\xee\x96\x9f" };                     // U+e59f
        constexpr static inline std::string_view ListEnd{ "\xee\x8b\x9e" };                          // U+e2de
        constexpr static inline std::string_view ListFilter{ "\xee\x91\xa4" };                       // U+e464
        constexpr static inline std::string_view ListMinus{ "\xee\x88\xbd" };                        // U+e23d
        constexpr static inline std::string_view ListMusic{ "\xee\x8b\x9f" };                        // U+e2df
        constexpr static inline std::string_view ListOrdered{ "\xee\x87\x8f" };                      // U+e1cf
        constexpr static inline std::string_view ListPlus{ "\xee\x88\xbe" };                         // U+e23e
        constexpr static inline std::string_view ListRestart{ "\xee\x91\x96" };                      // U+e456
        constexpr static inline std::string_view ListStart{ "\xee\x8b\xa0" };                        // U+e2e0
        constexpr static inline std::string_view ListTodo{ "\xee\x93\x87" };                         // U+e4c7
        constexpr static inline std::string_view ListTree{ "\xee\x90\x8c" };                         // U+e40c
        constexpr static inline std::string_view ListVideo{ "\xee\x8b\xa1" };                        // U+e2e1
        constexpr static inline std::string_view ListX{ "\xee\x88\xbf" };                            // U+e23f
        constexpr static inline std::string_view List{ "\xee\x84\x89" };                             // U+e109
        constexpr static inline std::string_view LoaderCircle{ "\xee\x84\x8b" };                     // U+e10b
        constexpr static inline std::string_view Loader{ "\xee\x84\x8a" };                           // U+e10a
        constexpr static inline std::string_view LocateFixed{ "\xee\x87\x99" };                      // U+e1d9
        constexpr static inline std::string_view LocateOff{ "\xee\x8a\x81" };                        // U+e281
        constexpr static inline std::string_view Locate{ "\xee\x87\x98" };                           // U+e1d8
        constexpr static inline std::string_view LockKeyholeOpen{ "\xee\x94\xb6" };                  // U+e536
        constexpr static inline std::string_view LockKeyhole{ "\xee\x94\xb5" };                      // U+e535
        constexpr static inline std::string_view LockOpen{ "\xee\x84\x8d" };                         // U+e10d
        constexpr static inline std::string_view Lock{ "\xee\x84\x8c" };                             // U+e10c
        constexpr static inline std::string_view LogIn{ "\xee\x84\x8e" };                            // U+e10e
        constexpr static inline std::string_view LogOut{ "\xee\x84\x8f" };                           // U+e10f
        constexpr static inline std::string_view Lollipop{ "\xee\x93\x81" };                         // U+e4c1
        constexpr static inline std::string_view Luggage{ "\xee\x8b\x89" };                          // U+e2c9
        constexpr static inline std::string_view Magnet{ "\xee\x8a\xb4" };                           // U+e2b4
        constexpr static inline std::string_view MailCheck{ "\xee\x8d\xa4" };                        // U+e364
        constexpr static inline std::string_view MailMinus{ "\xee\x8d\xa5" };                        // U+e365
        constexpr static inline std::string_view MailOpen{ "\xee\x8d\xa6" };                         // U+e366
        constexpr static inline std::string_view MailPlus{ "\xee\x8d\xa7" };                         // U+e367
        constexpr static inline std::string_view MailQuestion{ "\xee\x8d\xa8" };                     // U+e368
        constexpr static inline std::string_view MailSearch{ "\xee\x8d\xa9" };                       // U+e369
        constexpr static inline std::string_view MailWarning{ "\xee\x8d\xaa" };                      // U+e36a
        constexpr static inline std::string_view MailX{ "\xee\x8d\xab" };                            // U+e36b
        constexpr static inline std::string_view Mail{ "\xee\x84\x90" };                             // U+e110
        constexpr static inline std::string_view Mailbox{ "\xee\x8f\x97" };                          // U+e3d7
        constexpr static inline std::string_view Mails{ "\xee\x8d\xac" };                            // U+e36c
        constexpr static inline std::string_view MapPinOff{ "\xee\x8a\xa5" };                        // U+e2a5
        constexpr static inline std::string_view MapPin{ "\xee\x84\x92" };                           // U+e112
        constexpr static inline std::string_view MapPinned{ "\xee\x95\x81" };                        // U+e541
        constexpr static inline std::string_view Map{ "\xee\x84\x91" };                              // U+e111
        constexpr static inline std::string_view Martini{ "\xee\x8b\xa2" };                          // U+e2e2
        constexpr static inline std::string_view Maximize_2{ "\xee\x84\x94" };                       // U+e114
        constexpr static inline std::string_view Maximize{ "\xee\x84\x93" };                         // U+e113
        constexpr static inline std::string_view Medal{ "\xee\x8d\xb2" };                            // U+e372
        constexpr static inline std::string_view MegaphoneOff{ "\xee\x8d\xb3" };                     // U+e373
        constexpr static inline std::string_view Megaphone{ "\xee\x88\xb4" };                        // U+e234
        constexpr static inline std::string_view Meh{ "\xee\x84\x95" };                              // U+e115
        constexpr static inline std::string_view MemoryStick{ "\xee\x91\x89" };                      // U+e449
        constexpr static inline std::string_view Menu{ "\xee\x84\x96" };                             // U+e116
        constexpr static inline std::string_view Merge{ "\xee\x91\x83" };                            // U+e443
        constexpr static inline std::string_view MessageCircleCode{ "\xee\x95\xa6" };                // U+e566
        constexpr static inline std::string_view MessageCircleDashed{ "\xee\x95\xa7" };              // U+e567
        constexpr static inline std::string_view MessageCircleHeart{ "\xee\x95\xa8" };               // U+e568
        constexpr static inline std::string_view MessageCircleMore{ "\xee\x95\xa9" };                // U+e569
        constexpr static inline std::string_view MessageCircleOff{ "\xee\x95\xaa" };                 // U+e56a
        constexpr static inline std::string_view MessageCirclePlus{ "\xee\x95\xab" };                // U+e56b
        constexpr static inline std::string_view MessageCircleQuestion{ "\xee\x95\xac" };            // U+e56c
        constexpr static inline std::string_view MessageCircleReply{ "\xee\x95\xad" };               // U+e56d
        constexpr static inline std::string_view MessageCircleWarning{ "\xee\x95\xae" };             // U+e56e
        constexpr static inline std::string_view MessageCircleX{ "\xee\x95\xaf" };                   // U+e56f
        constexpr static inline std::string_view MessageCircle{ "\xee\x84\x97" };                    // U+e117
        constexpr static inline std::string_view MessageSquareCode{ "\xee\x95\xb0" };                // U+e570
        constexpr static inline std::string_view MessageSquareDashed{ "\xee\x90\x8f" };              // U+e40f
        constexpr static inline std::string_view MessageSquareDiff{ "\xee\x95\xb1" };                // U+e571
        constexpr static inline std::string_view MessageSquareDot{ "\xee\x95\xb2" };                 // U+e572
        constexpr static inline std::string_view MessageSquareHeart{ "\xee\x95\xb3" };               // U+e573
        constexpr static inline std::string_view MessageSquareMore{ "\xee\x95\xb4" };                // U+e574
        constexpr static inline std::string_view MessageSquareOff{ "\xee\x95\xb5" };                 // U+e575
        constexpr static inline std::string_view MessageSquarePlus{ "\xee\x90\x90" };                // U+e410
        constexpr static inline std::string_view MessageSquareQuote{ "\xee\x95\xb6" };               // U+e576
        constexpr static inline std::string_view MessageSquareReply{ "\xee\x95\xb7" };               // U+e577
        constexpr static inline std::string_view MessageSquareShare{ "\xee\x95\xb8" };               // U+e578
        constexpr static inline std::string_view MessageSquareText{ "\xee\x95\xb9" };                // U+e579
        constexpr static inline std::string_view MessageSquareWarning{ "\xee\x95\xba" };             // U+e57a
        constexpr static inline std::string_view MessageSquareX{ "\xee\x95\xbb" };                   // U+e57b
        constexpr static inline std::string_view MessageSquare{ "\xee\x84\x98" };                    // U+e118
        constexpr static inline std::string_view MessagesSquare{ "\xee\x90\x91" };                   // U+e411
        constexpr static inline std::string_view MicOff{ "\xee\x84\x9a" };                           // U+e11a
        constexpr static inline std::string_view MicVocal{ "\xee\x8d\x8c" };                         // U+e34c
        constexpr static inline std::string_view Mic{ "\xee\x84\x99" };                              // U+e119
        constexpr static inline std::string_view Microscope{ "\xee\x8b\xa3" };                       // U+e2e3
        constexpr static inline std::string_view Microwave{ "\xee\x8d\xbd" };                        // U+e37d
        constexpr static inline std::string_view Milestone{ "\xee\x8a\x97" };                        // U+e297
        constexpr static inline std::string_view MilkOff{ "\xee\x8e\x9d" };                          // U+e39d
        constexpr static inline std::string_view Milk{ "\xee\x8e\x9c" };                             // U+e39c
        constexpr static inline std::string_view Minimize_2{ "\xee\x84\x9c" };                       // U+e11c
        constexpr static inline std::string_view Minimize{ "\xee\x84\x9b" };                         // U+e11b
        constexpr static inline std::string_view Minus{ "\xee\x84\x9d" };                            // U+e11d
        constexpr static inline std::string_view MonitorCheck{ "\xee\x92\x86" };                     // U+e486
        constexpr static inline std::string_view MonitorDot{ "\xee\x92\x87" };                       // U+e487
        constexpr static inline std::string_view MonitorDown{ "\xee\x90\xa5" };                      // U+e425
        constexpr static inline std::string_view MonitorOff{ "\xee\x87\x9a" };                       // U+e1da
        constexpr static inline std::string_view MonitorPause{ "\xee\x92\x88" };                     // U+e488
        constexpr static inline std::string_view MonitorPlay{ "\xee\x92\x89" };                      // U+e489
        constexpr static inline std::string_view MonitorSmartphone{ "\xee\x8e\xa5" };                // U+e3a5
        constexpr static inline std::string_view MonitorSpeaker{ "\xee\x88\x8e" };                   // U+e20e
        constexpr static inline std::string_view MonitorStop{ "\xee\x92\x8a" };                      // U+e48a
        constexpr static inline std::string_view MonitorUp{ "\xee\x90\xa6" };                        // U+e426
        constexpr static inline std::string_view MonitorX{ "\xee\x92\x8b" };                         // U+e48b
        constexpr static inline std::string_view Monitor{ "\xee\x84\x9e" };                          // U+e11e
        constexpr static inline std::string_view MoonStar{ "\xee\x90\x94" };                         // U+e414
        constexpr static inline std::string_view Moon{ "\xee\x84\x9f" };                             // U+e11f
        constexpr static inline std::string_view MountainSnow{ "\xee\x88\xb1" };                     // U+e231
        constexpr static inline std::string_view Mountain{ "\xee\x88\xb0" };                         // U+e230
        constexpr static inline std::string_view MouseOff{ "\xee\x97\x9f" };                         // U+e5df
        constexpr static inline std::string_view MousePointer_2{ "\xee\x87\x82" };                   // U+e1c2
        constexpr static inline std::string_view MousePointerClick{ "\xee\x84\xa1" };                // U+e121
        constexpr static inline std::string_view MousePointer{ "\xee\x84\xa0" };                     // U+e120
        constexpr static inline std::string_view Mouse{ "\xee\x8a\x8d" };                            // U+e28d
        constexpr static inline std::string_view Move_3d{ "\xee\x8b\xa4" };                          // U+e2e4
        constexpr static inline std::string_view MoveDiagonal_2{ "\xee\x87\x84" };                   // U+e1c4
        constexpr static inline std::string_view MoveDiagonal{ "\xee\x87\x83" };                     // U+e1c3
        constexpr static inline std::string_view MoveDownLeft{ "\xee\x92\x91" };                     // U+e491
        constexpr static inline std::string_view MoveDownRight{ "\xee\x92\x92" };                    // U+e492
        constexpr static inline std::string_view MoveDown{ "\xee\x92\x90" };                         // U+e490
        constexpr static inline std::string_view MoveHorizontal{ "\xee\x87\x85" };                   // U+e1c5
        constexpr static inline std::string_view MoveLeft{ "\xee\x92\x93" };                         // U+e493
        constexpr static inline std::string_view MoveRight{ "\xee\x92\x94" };                        // U+e494
        constexpr static inline std::string_view MoveUpLeft{ "\xee\x92\x96" };                       // U+e496
        constexpr static inline std::string_view MoveUpRight{ "\xee\x92\x97" };                      // U+e497
        constexpr static inline std::string_view MoveUp{ "\xee\x92\x95" };                           // U+e495
        constexpr static inline std::string_view MoveVertical{ "\xee\x87\x86" };                     // U+e1c6
        constexpr static inline std::string_view Move{ "\xee\x84\xa2" };                             // U+e122
        constexpr static inline std::string_view Music_2{ "\xee\x8d\x8d" };                          // U+e34d
        constexpr static inline std::string_view Music_3{ "\xee\x8d\x8e" };                          // U+e34e
        constexpr static inline std::string_view Music_4{ "\xee\x8d\x8f" };                          // U+e34f
        constexpr static inline std::string_view Music{ "\xee\x84\xa3" };                            // U+e123
        constexpr static inline std::string_view Navigation_2Off{ "\xee\x8a\xa6" };                  // U+e2a6
        constexpr static inline std::string_view Navigation_2{ "\xee\x84\xa5" };                     // U+e125
        constexpr static inline std::string_view NavigationOff{ "\xee\x8a\xa7" };                    // U+e2a7
        constexpr static inline std::string_view Navigation{ "\xee\x84\xa4" };                       // U+e124
        constexpr static inline std::string_view Network{ "\xee\x84\xa6" };                          // U+e126
        constexpr static inline std::string_view Newspaper{ "\xee\x8d\x8b" };                        // U+e34b
        constexpr static inline std::string_view Nfc{ "\xee\x8f\x86" };                              // U+e3c6
        constexpr static inline std::string_view NotebookPen{ "\xee\x96\x9a" };                      // U+e59a
        constexpr static inline std::string_view NotebookTabs{ "\xee\x96\x9b" };                     // U+e59b
        constexpr static inline std::string_view NotebookText{ "\xee\x96\x9c" };                     // U+e59c
        constexpr static inline std::string_view Notebook{ "\xee\x96\x99" };                         // U+e599
        constexpr static inline std::string_view NotepadTextDashed{ "\xee\x96\x9e" };                // U+e59e
        constexpr static inline std::string_view NotepadText{ "\xee\x96\x9d" };                      // U+e59d
        constexpr static inline std::string_view NutOff{ "\xee\x8e\x9f" };                           // U+e39f
        constexpr static inline std::string_view Nut{ "\xee\x8e\x9e" };                              // U+e39e
        constexpr static inline std::string_view OctagonAlert{ "\xee\x84\xa8" };                     // U+e128
        constexpr static inline std::string_view OctagonPause{ "\xee\x88\x9a" };                     // U+e21a
        constexpr static inline std::string_view OctagonX{ "\xee\x84\xa9" };                         // U+e129
        constexpr static inline std::string_view Octagon{ "\xee\x84\xa7" };                          // U+e127
        constexpr static inline std::string_view Option{ "\xee\x87\xb6" };                           // U+e1f6
        constexpr static inline std::string_view Orbit{ "\xee\x8f\xaa" };                            // U+e3ea
        constexpr static inline std::string_view Package_2{ "\xee\x8d\x83" };                        // U+e343
        constexpr static inline std::string_view PackageCheck{ "\xee\x89\xa5" };                     // U+e265
        constexpr static inline std::string_view PackageMinus{ "\xee\x89\xa6" };                     // U+e266
        constexpr static inline std::string_view PackageOpen{ "\xee\x8b\x8b" };                      // U+e2cb
        constexpr static inline std::string_view PackagePlus{ "\xee\x89\xa7" };                      // U+e267
        constexpr static inline std::string_view PackageSearch{ "\xee\x89\xa8" };                    // U+e268
        constexpr static inline std::string_view PackageX{ "\xee\x89\xa9" };                         // U+e269
        constexpr static inline std::string_view Package{ "\xee\x84\xaa" };                          // U+e12a
        constexpr static inline std::string_view PaintBucket{ "\xee\x8b\xa5" };                      // U+e2e5
        constexpr static inline std::string_view PaintRoller{ "\xee\x96\xa2" };                      // U+e5a2
        constexpr static inline std::string_view Paintbrush_2{ "\xee\x8b\xa7" };                     // U+e2e7
        constexpr static inline std::string_view Paintbrush{ "\xee\x8b\xa6" };                       // U+e2e6
        constexpr static inline std::string_view Palette{ "\xee\x87\x9b" };                          // U+e1db
        constexpr static inline std::string_view PanelBottomClose{ "\xee\x90\xb1" };                 // U+e431
        constexpr static inline std::string_view PanelBottomDashed{ "\xee\x90\xb2" };                // U+e432
        constexpr static inline std::string_view PanelBottomOpen{ "\xee\x90\xb3" };                  // U+e433
        constexpr static inline std::string_view PanelBottom{ "\xee\x90\xb0" };                      // U+e430
        constexpr static inline std::string_view PanelLeftClose{ "\xee\x88\x9b" };                   // U+e21b
        constexpr static inline std::string_view PanelLeftDashed{ "\xee\x90\xb4" };                  // U+e434
        constexpr static inline std::string_view PanelLeftOpen{ "\xee\x88\x9c" };                    // U+e21c
        constexpr static inline std::string_view PanelLeft{ "\xee\x84\xab" };                        // U+e12b
        constexpr static inline std::string_view PanelRightClose{ "\xee\x90\xb6" };                  // U+e436
        constexpr static inline std::string_view PanelRightDashed{ "\xee\x90\xb7" };                 // U+e437
        constexpr static inline std::string_view PanelRightOpen{ "\xee\x90\xb8" };                   // U+e438
        constexpr static inline std::string_view PanelRight{ "\xee\x90\xb5" };                       // U+e435
        constexpr static inline std::string_view PanelTopClose{ "\xee\x90\xba" };                    // U+e43a
        constexpr static inline std::string_view PanelTopDashed{ "\xee\x90\xbb" };                   // U+e43b
        constexpr static inline std::string_view PanelTopOpen{ "\xee\x90\xbc" };                     // U+e43c
        constexpr static inline std::string_view PanelTop{ "\xee\x90\xb9" };                         // U+e439
        constexpr static inline std::string_view PanelsLeftBottom{ "\xee\x84\xac" };                 // U+e12c
        constexpr static inline std::string_view PanelsRightBottom{ "\xee\x96\x8c" };                // U+e58c
        constexpr static inline std::string_view PanelsTopLeft{ "\xee\x84\xad" };                    // U+e12d
        constexpr static inline std::string_view Paperclip{ "\xee\x84\xae" };                        // U+e12e
        constexpr static inline std::string_view Parentheses{ "\xee\x91\x88" };                      // U+e448
        constexpr static inline std::string_view ParkingMeter{ "\xee\x94\x84" };                     // U+e504
        constexpr static inline std::string_view PartyPopper{ "\xee\x8d\x86" };                      // U+e346
        constexpr static inline std::string_view Pause{ "\xee\x84\xaf" };                            // U+e12f
        constexpr static inline std::string_view PawPrint{ "\xee\x93\xb9" };                         // U+e4f9
        constexpr static inline std::string_view PcCase{ "\xee\x91\x8a" };                           // U+e44a
        constexpr static inline std::string_view PenLine{ "\xee\x84\xb1" };                          // U+e131
        constexpr static inline std::string_view PenTool{ "\xee\x84\xb2" };                          // U+e132
        constexpr static inline std::string_view Pen{ "\xee\x84\xb0" };                              // U+e130
        constexpr static inline std::string_view PencilLine{ "\xee\x93\xb4" };                       // U+e4f4
        constexpr static inline std::string_view PencilRuler{ "\xee\x93\xb5" };                      // U+e4f5
        constexpr static inline std::string_view Pencil{ "\xee\x87\xb7" };                           // U+e1f7
        constexpr static inline std::string_view Pentagon{ "\xee\x94\xaf" };                         // U+e52f
        constexpr static inline std::string_view Percent{ "\xee\x84\xb3" };                          // U+e133
        constexpr static inline std::string_view PersonStanding{ "\xee\x88\x9d" };                   // U+e21d
        constexpr static inline std::string_view PhoneCall{ "\xee\x84\xb5" };                        // U+e135
        constexpr static inline std::string_view PhoneForwarded{ "\xee\x84\xb6" };                   // U+e136
        constexpr static inline std::string_view PhoneIncoming{ "\xee\x84\xb7" };                    // U+e137
        constexpr static inline std::string_view PhoneMissed{ "\xee\x84\xb8" };                      // U+e138
        constexpr static inline std::string_view PhoneOff{ "\xee\x84\xb9" };                         // U+e139
        constexpr static inline std::string_view PhoneOutgoing{ "\xee\x84\xba" };                    // U+e13a
        constexpr static inline std::string_view Phone{ "\xee\x84\xb4" };                            // U+e134
        constexpr static inline std::string_view Pi{ "\xee\x91\xb6" };                               // U+e476
        constexpr static inline std::string_view Piano{ "\xee\x95\xa5" };                            // U+e565
        constexpr static inline std::string_view Pickaxe{ "\xee\x97\x8a" };                          // U+e5ca
        constexpr static inline std::string_view PictureInPicture_2{ "\xee\x8e\xb2" };               // U+e3b2
        constexpr static inline std::string_view PictureInPicture{ "\xee\x8e\xb1" };                 // U+e3b1
        constexpr static inline std::string_view PieChart{ "\xee\x84\xbb" };                         // U+e13b
        constexpr static inline std::string_view PiggyBank{ "\xee\x84\xbc" };                        // U+e13c
        constexpr static inline std::string_view PilcrowLeft{ "\xee\x97\xa0" };                      // U+e5e0
        constexpr static inline std::string_view PilcrowRight{ "\xee\x97\xa1" };                     // U+e5e1
        constexpr static inline std::string_view Pilcrow{ "\xee\x8e\xa6" };                          // U+e3a6
        constexpr static inline std::string_view Pill{ "\xee\x8f\x80" };                             // U+e3c0
        constexpr static inline std::string_view PinOff{ "\xee\x8a\xb5" };                           // U+e2b5
        constexpr static inline std::string_view Pin{ "\xee\x89\x98" };                              // U+e258
        constexpr static inline std::string_view Pipette{ "\xee\x84\xbd" };                          // U+e13d
        constexpr static inline std::string_view Pizza{ "\xee\x8d\x97" };                            // U+e357
        constexpr static inline std::string_view PlaneLanding{ "\xee\x8f\x90" };                     // U+e3d0
        constexpr static inline std::string_view PlaneTakeoff{ "\xee\x8f\x91" };                     // U+e3d1
        constexpr static inline std::string_view Plane{ "\xee\x87\x9c" };                            // U+e1dc
        constexpr static inline std::string_view Play{ "\xee\x84\xbe" };                             // U+e13e
        constexpr static inline std::string_view Plug_2{ "\xee\x8e\x83" };                           // U+e383
        constexpr static inline std::string_view PlugZap_2{ "\xee\x91\xa0" };                        // U+e460
        constexpr static inline std::string_view PlugZap{ "\xee\x88\x8f" };                          // U+e20f
        constexpr static inline std::string_view Plug{ "\xee\x8e\x82" };                             // U+e382
        constexpr static inline std::string_view Plus{ "\xee\x84\xbf" };                             // U+e13f
        constexpr static inline std::string_view PocketKnife{ "\xee\x92\xa4" };                      // U+e4a4
        constexpr static inline std::string_view Pocket{ "\xee\x85\x80" };                           // U+e140
        constexpr static inline std::string_view Podcast{ "\xee\x87\xb8" };                          // U+e1f8
        constexpr static inline std::string_view PointerOff{ "\xee\x96\x83" };                       // U+e583
        constexpr static inline std::string_view Pointer{ "\xee\x87\xa6" };                          // U+e1e6
        constexpr static inline std::string_view Popcorn{ "\xee\x93\x82" };                          // U+e4c2
        constexpr static inline std::string_view Popsicle{ "\xee\x93\x83" };                         // U+e4c3
        constexpr static inline std::string_view PoundSterling{ "\xee\x85\x81" };                    // U+e141
        constexpr static inline std::string_view PowerOff{ "\xee\x88\x87" };                         // U+e207
        constexpr static inline std::string_view Power{ "\xee\x85\x82" };                            // U+e142
        constexpr static inline std::string_view Presentation{ "\xee\x92\xb2" };                     // U+e4b2
        constexpr static inline std::string_view Printer{ "\xee\x85\x83" };                          // U+e143
        constexpr static inline std::string_view Projector{ "\xee\x92\xb3" };                        // U+e4b3
        constexpr static inline std::string_view Proportions{ "\xee\x97\x93" };                      // U+e5d3
        constexpr static inline std::string_view Puzzle{ "\xee\x8a\x9b" };                           // U+e29b
        constexpr static inline std::string_view Pyramid{ "\xee\x94\xb0" };                          // U+e530
        constexpr static inline std::string_view QrCode{ "\xee\x87\x9d" };                           // U+e1dd
        constexpr static inline std::string_view Quote{ "\xee\x88\xb8" };                            // U+e238
        constexpr static inline std::string_view Rabbit{ "\xee\x93\xba" };                           // U+e4fa
        constexpr static inline std::string_view Radar{ "\xee\x92\x9b" };                            // U+e49b
        constexpr static inline std::string_view Radiation{ "\xee\x91\x86" };                        // U+e446
        constexpr static inline std::string_view Radical{ "\xee\x97\x86" };                          // U+e5c6
        constexpr static inline std::string_view RadioReceiver{ "\xee\x87\xb9" };                    // U+e1f9
        constexpr static inline std::string_view RadioTower{ "\xee\x90\x88" };                       // U+e408
        constexpr static inline std::string_view Radio{ "\xee\x85\x84" };                            // U+e144
        constexpr static inline std::string_view Radius{ "\xee\x94\xb1" };                           // U+e531
        constexpr static inline std::string_view RailSymbol{ "\xee\x94\x85" };                       // U+e505
        constexpr static inline std::string_view Rainbow{ "\xee\x93\x86" };                          // U+e4c6
        constexpr static inline std::string_view Rat{ "\xee\x8f\xaf" };                              // U+e3ef
        constexpr static inline std::string_view Ratio{ "\xee\x93\xac" };                            // U+e4ec
        constexpr static inline std::string_view ReceiptCent{ "\xee\x96\xa9" };                      // U+e5a9
        constexpr static inline std::string_view ReceiptEuro{ "\xee\x96\xaa" };                      // U+e5aa
        constexpr static inline std::string_view ReceiptIndianRupee{ "\xee\x96\xab" };               // U+e5ab
        constexpr static inline std::string_view ReceiptJapaneseYen{ "\xee\x96\xac" };               // U+e5ac
        constexpr static inline std::string_view ReceiptPoundSterling{ "\xee\x96\xad" };             // U+e5ad
        constexpr static inline std::string_view ReceiptRussianRuble{ "\xee\x96\xae" };              // U+e5ae
        constexpr static inline std::string_view ReceiptSwissFranc{ "\xee\x96\xaf" };                // U+e5af
        constexpr static inline std::string_view ReceiptText{ "\xee\x96\xb0" };                      // U+e5b0
        constexpr static inline std::string_view Receipt{ "\xee\x8f\x96" };                          // U+e3d6
        constexpr static inline std::string_view RectangleEllipsis{ "\xee\x88\x9e" };                // U+e21e
        constexpr static inline std::string_view RectangleHorizontal{ "\xee\x8d\xb9" };              // U+e379
        constexpr static inline std::string_view RectangleVertical{ "\xee\x8d\xba" };                // U+e37a
        constexpr static inline std::string_view Recycle{ "\xee\x8b\xa8" };                          // U+e2e8
        constexpr static inline std::string_view Redo_2{ "\xee\x8a\x9f" };                           // U+e29f
        constexpr static inline std::string_view RedoDot{ "\xee\x91\x94" };                          // U+e454
        constexpr static inline std::string_view Redo{ "\xee\x85\x85" };                             // U+e145
        constexpr static inline std::string_view RefreshCcwDot{ "\xee\x92\xb6" };                    // U+e4b6
        constexpr static inline std::string_view RefreshCcw{ "\xee\x85\x86" };                       // U+e146
        constexpr static inline std::string_view RefreshCwOff{ "\xee\x92\x9c" };                     // U+e49c
        constexpr static inline std::string_view RefreshCw{ "\xee\x85\x87" };                        // U+e147
        constexpr static inline std::string_view Refrigerator{ "\xee\x8d\xbe" };                     // U+e37e
        constexpr static inline std::string_view Regex{ "\xee\x87\xba" };                            // U+e1fa
        constexpr static inline std::string_view RemoveFormatting{ "\xee\x8e\xb6" };                 // U+e3b6
        constexpr static inline std::string_view Repeat_1{ "\xee\x87\xbb" };                         // U+e1fb
        constexpr static inline std::string_view Repeat_2{ "\xee\x90\x95" };                         // U+e415
        constexpr static inline std::string_view Repeat{ "\xee\x85\x88" };                           // U+e148
        constexpr static inline std::string_view ReplaceAll{ "\xee\x8f\x9f" };                       // U+e3df
        constexpr static inline std::string_view Replace{ "\xee\x8f\x9e" };                          // U+e3de
        constexpr static inline std::string_view ReplyAll{ "\xee\x88\xaa" };                         // U+e22a
        constexpr static inline std::string_view Reply{ "\xee\x88\xa9" };                            // U+e229
        constexpr static inline std::string_view Rewind{ "\xee\x85\x89" };                           // U+e149
        constexpr static inline std::string_view Ribbon{ "\xee\x95\x9c" };                           // U+e55c
        constexpr static inline std::string_view Rocket{ "\xee\x8a\x85" };                           // U+e285
        constexpr static inline std::string_view RockingChair{ "\xee\x88\xb2" };                     // U+e232
        constexpr static inline std::string_view RollerCoaster{ "\xee\x92\x84" };                    // U+e484
        constexpr static inline std::string_view Rotate_3d{ "\xee\x8b\xa9" };                        // U+e2e9
        constexpr static inline std::string_view RotateCcwSquare{ "\xee\x97\x94" };                  // U+e5d4
        constexpr static inline std::string_view RotateCcw{ "\xee\x85\x8a" };                        // U+e14a
        constexpr static inline std::string_view RotateCwSquare{ "\xee\x97\x95" };                   // U+e5d5
        constexpr static inline std::string_view RotateCw{ "\xee\x85\x8b" };                         // U+e14b
        constexpr static inline std::string_view RouteOff{ "\xee\x95\x83" };                         // U+e543
        constexpr static inline std::string_view Route{ "\xee\x95\x82" };                            // U+e542
        constexpr static inline std::string_view Router{ "\xee\x8f\x82" };                           // U+e3c2
        constexpr static inline std::string_view Rows_2{ "\xee\x90\xbd" };                           // U+e43d
        constexpr static inline std::string_view Rows_3{ "\xee\x96\x8e" };                           // U+e58e
        constexpr static inline std::string_view Rows_4{ "\xee\x96\x8f" };                           // U+e58f
        constexpr static inline std::string_view Rss{ "\xee\x85\x8c" };                              // U+e14c
        constexpr static inline std::string_view Ruler{ "\xee\x85\x8d" };                            // U+e14d
        constexpr static inline std::string_view RussianRuble{ "\xee\x85\x8e" };                     // U+e14e
        constexpr static inline std::string_view Sailboat{ "\xee\x8e\x81" };                         // U+e381
        constexpr static inline std::string_view Salad{ "\xee\x8e\xab" };                            // U+e3ab
        constexpr static inline std::string_view Sandwich{ "\xee\x8e\xac" };                         // U+e3ac
        constexpr static inline std::string_view SatelliteDish{ "\xee\x91\x8c" };                    // U+e44c
        constexpr static inline std::string_view Satellite{ "\xee\x91\x8b" };                        // U+e44b
        constexpr static inline std::string_view SaveAll{ "\xee\x90\x93" };                          // U+e413
        constexpr static inline std::string_view Save{ "\xee\x85\x8f" };                             // U+e14f
        constexpr static inline std::string_view Scale_3d{ "\xee\x8b\xaa" };                         // U+e2ea
        constexpr static inline std::string_view Scale{ "\xee\x88\x91" };                            // U+e211
        constexpr static inline std::string_view Scaling{ "\xee\x8b\xab" };                          // U+e2eb
        constexpr static inline std::string_view ScanBarcode{ "\xee\x94\xb9" };                      // U+e539
        constexpr static inline std::string_view ScanEye{ "\xee\x94\xba" };                          // U+e53a
        constexpr static inline std::string_view ScanFace{ "\xee\x8d\xb4" };                         // U+e374
        constexpr static inline std::string_view ScanLine{ "\xee\x89\x97" };                         // U+e257
        constexpr static inline std::string_view ScanSearch{ "\xee\x94\xbb" };                       // U+e53b
        constexpr static inline std::string_view ScanText{ "\xee\x94\xbc" };                         // U+e53c
        constexpr static inline std::string_view Scan{ "\xee\x89\x96" };                             // U+e256
        constexpr static inline std::string_view ScatterChart{ "\xee\x92\x8e" };                     // U+e48e
        constexpr static inline std::string_view School{ "\xee\x8f\xa6" };                           // U+e3e6
        constexpr static inline std::string_view ScissorsLineDashed{ "\xee\x93\xad" };               // U+e4ed
        constexpr static inline std::string_view Scissors{ "\xee\x85\x90" };                         // U+e150
        constexpr static inline std::string_view ScreenShareOff{ "\xee\x85\x92" };                   // U+e152
        constexpr static inline std::string_view ScreenShare{ "\xee\x85\x91" };                      // U+e151
        constexpr static inline std::string_view ScrollText{ "\xee\x91\xa3" };                       // U+e463
        constexpr static inline std::string_view Scroll{ "\xee\x8b\xac" };                           // U+e2ec
        constexpr static inline std::string_view SearchCheck{ "\xee\x92\xae" };                      // U+e4ae
        constexpr static inline std::string_view SearchCode{ "\xee\x92\xaf" };                       // U+e4af
        constexpr static inline std::string_view SearchSlash{ "\xee\x92\xb0" };                      // U+e4b0
        constexpr static inline std::string_view SearchX{ "\xee\x92\xb1" };                          // U+e4b1
        constexpr static inline std::string_view Search{ "\xee\x85\x93" };                           // U+e153
        constexpr static inline std::string_view SendHorizontal{ "\xee\x93\xb6" };                   // U+e4f6
        constexpr static inline std::string_view SendToBack{ "\xee\x93\xb7" };                       // U+e4f7
        constexpr static inline std::string_view Send{ "\xee\x85\x94" };                             // U+e154
        constexpr static inline std::string_view SeparatorHorizontal{ "\xee\x87\x87" };              // U+e1c7
        constexpr static inline std::string_view SeparatorVertical{ "\xee\x87\x88" };                // U+e1c8
        constexpr static inline std::string_view ServerCog{ "\xee\x8d\x84" };                        // U+e344
        constexpr static inline std::string_view ServerCrash{ "\xee\x87\xa7" };                      // U+e1e7
        constexpr static inline std::string_view ServerOff{ "\xee\x87\xa8" };                        // U+e1e8
        constexpr static inline std::string_view Server{ "\xee\x85\x95" };                           // U+e155
        constexpr static inline std::string_view Settings_2{ "\xee\x89\x84" };                       // U+e244
        constexpr static inline std::string_view Settings{ "\xee\x85\x96" };                         // U+e156
        constexpr static inline std::string_view Shapes{ "\xee\x92\xb7" };                           // U+e4b7
        constexpr static inline std::string_view Share_2{ "\xee\x85\x98" };                          // U+e158
        constexpr static inline std::string_view Share{ "\xee\x85\x97" };                            // U+e157
        constexpr static inline std::string_view Sheet{ "\xee\x85\x99" };                            // U+e159
        constexpr static inline std::string_view Shell{ "\xee\x93\xbb" };                            // U+e4fb
        constexpr static inline std::string_view ShieldAlert{ "\xee\x87\xbc" };                      // U+e1fc
        constexpr static inline std::string_view ShieldBan{ "\xee\x85\x9b" };                        // U+e15b
        constexpr static inline std::string_view ShieldCheck{ "\xee\x87\xbd" };                      // U+e1fd
        constexpr static inline std::string_view ShieldEllipsis{ "\xee\x94\x9a" };                   // U+e51a
        constexpr static inline std::string_view ShieldHalf{ "\xee\x94\x9b" };                       // U+e51b
        constexpr static inline std::string_view ShieldMinus{ "\xee\x94\x9c" };                      // U+e51c
        constexpr static inline std::string_view ShieldOff{ "\xee\x85\x9c" };                        // U+e15c
        constexpr static inline std::string_view ShieldPlus{ "\xee\x94\x9d" };                       // U+e51d
        constexpr static inline std::string_view ShieldQuestion{ "\xee\x90\x92" };                   // U+e412
        constexpr static inline std::string_view ShieldX{ "\xee\x87\xbe" };                          // U+e1fe
        constexpr static inline std::string_view Shield{ "\xee\x85\x9a" };                           // U+e15a
        constexpr static inline std::string_view ShipWheel{ "\xee\x94\x86" };                        // U+e506
        constexpr static inline std::string_view Ship{ "\xee\x8e\xbd" };                             // U+e3bd
        constexpr static inline std::string_view Shirt{ "\xee\x87\x89" };                            // U+e1c9
        constexpr static inline std::string_view ShoppingBag{ "\xee\x85\x9d" };                      // U+e15d
        constexpr static inline std::string_view ShoppingBasket{ "\xee\x93\xae" };                   // U+e4ee
        constexpr static inline std::string_view ShoppingCart{ "\xee\x85\x9e" };                     // U+e15e
        constexpr static inline std::string_view Shovel{ "\xee\x85\x9f" };                           // U+e15f
        constexpr static inline std::string_view ShowerHead{ "\xee\x8d\xbf" };                       // U+e37f
        constexpr static inline std::string_view Shrink{ "\xee\x88\x9f" };                           // U+e21f
        constexpr static inline std::string_view Shrub{ "\xee\x8b\xad" };                            // U+e2ed
        constexpr static inline std::string_view Shuffle{ "\xee\x85\xa0" };                          // U+e160
        constexpr static inline std::string_view Sigma{ "\xee\x87\xbf" };                            // U+e1ff
        constexpr static inline std::string_view SignalHigh{ "\xee\x89\x9f" };                       // U+e25f
        constexpr static inline std::string_view SignalLow{ "\xee\x89\xa0" };                        // U+e260
        constexpr static inline std::string_view SignalMedium{ "\xee\x89\xa1" };                     // U+e261
        constexpr static inline std::string_view SignalZero{ "\xee\x89\xa2" };                       // U+e262
        constexpr static inline std::string_view Signal{ "\xee\x89\x9e" };                           // U+e25e
        constexpr static inline std::string_view SignpostBig{ "\xee\x95\x85" };                      // U+e545
        constexpr static inline std::string_view Signpost{ "\xee\x95\x84" };                         // U+e544
        constexpr static inline std::string_view Siren{ "\xee\x8b\xae" };                            // U+e2ee
        constexpr static inline std::string_view SkipBack{ "\xee\x85\xa1" };                         // U+e161
        constexpr static inline std::string_view SkipForward{ "\xee\x85\xa2" };                      // U+e162
        constexpr static inline std::string_view Skull{ "\xee\x88\xa0" };                            // U+e220
        constexpr static inline std::string_view Slack{ "\xee\x85\xa3" };                            // U+e163
        constexpr static inline std::string_view Slash{ "\xee\x94\xa1" };                            // U+e521
        constexpr static inline std::string_view Slice{ "\xee\x8b\xaf" };                            // U+e2ef
        constexpr static inline std::string_view SlidersHorizontal{ "\xee\x8a\x99" };                // U+e299
        constexpr static inline std::string_view SlidersVertical{ "\xee\x85\xa4" };                  // U+e164
        constexpr static inline std::string_view SmartphoneCharging{ "\xee\x88\xad" };               // U+e22d
        constexpr static inline std::string_view SmartphoneNfc{ "\xee\x8f\x87" };                    // U+e3c7
        constexpr static inline std::string_view Smartphone{ "\xee\x85\xa5" };                       // U+e165
        constexpr static inline std::string_view SmilePlus{ "\xee\x8c\x80" };                        // U+e300
        constexpr static inline std::string_view Smile{ "\xee\x85\xa6" };                            // U+e166
        constexpr static inline std::string_view Snail{ "\xee\x93\xbc" };                            // U+e4fc
        constexpr static inline std::string_view Snowflake{ "\xee\x85\xa7" };                        // U+e167
        constexpr static inline std::string_view Sofa{ "\xee\x8b\x83" };                             // U+e2c3
        constexpr static inline std::string_view Soup{ "\xee\x8e\xad" };                             // U+e3ad
        constexpr static inline std::string_view Space{ "\xee\x8f\xa0" };                            // U+e3e0
        constexpr static inline std::string_view Spade{ "\xee\x92\x9d" };                            // U+e49d
        constexpr static inline std::string_view Sparkle{ "\xee\x92\x82" };                          // U+e482
        constexpr static inline std::string_view Sparkles{ "\xee\x90\x96" };                         // U+e416
        constexpr static inline std::string_view Speaker{ "\xee\x85\xa8" };                          // U+e168
        constexpr static inline std::string_view Speech{ "\xee\x94\xa2" };                           // U+e522
        constexpr static inline std::string_view SpellCheck_2{ "\xee\x92\x9f" };                     // U+e49f
        constexpr static inline std::string_view SpellCheck{ "\xee\x92\x9e" };                       // U+e49e
        constexpr static inline std::string_view Spline{ "\xee\x8e\x8e" };                           // U+e38e
        constexpr static inline std::string_view Split{ "\xee\x91\x84" };                            // U+e444
        constexpr static inline std::string_view SprayCan{ "\xee\x92\x99" };                         // U+e499
        constexpr static inline std::string_view Sprout{ "\xee\x87\xa9" };                           // U+e1e9
        constexpr static inline std::string_view SquareActivity{ "\xee\x92\xb8" };                   // U+e4b8
        constexpr static inline std::string_view SquareArrowDownLeft{ "\xee\x92\xb9" };              // U+e4b9
        constexpr static inline std::string_view SquareArrowDownRight{ "\xee\x92\xba" };             // U+e4ba
        constexpr static inline std::string_view SquareArrowDown{ "\xee\x90\xab" };                  // U+e42b
        constexpr static inline std::string_view SquareArrowLeft{ "\xee\x90\xac" };                  // U+e42c
        constexpr static inline std::string_view SquareArrowOutDownLeft{ "\xee\x96\xa5" };           // U+e5a5
        constexpr static inline std::string_view SquareArrowOutDownRight{ "\xee\x96\xa6" };          // U+e5a6
        constexpr static inline std::string_view SquareArrowOutUpLeft{ "\xee\x96\xa7" };             // U+e5a7
        constexpr static inline std::string_view SquareArrowOutUpRight{ "\xee\x96\xa8" };            // U+e5a8
        constexpr static inline std::string_view SquareArrowRight{ "\xee\x90\xad" };                 // U+e42d
        constexpr static inline std::string_view SquareArrowUpLeft{ "\xee\x92\xbb" };                // U+e4bb
        constexpr static inline std::string_view SquareArrowUpRight{ "\xee\x92\xbc" };               // U+e4bc
        constexpr static inline std::string_view SquareArrowUp{ "\xee\x90\xae" };                    // U+e42e
        constexpr static inline std::string_view SquareAsterisk{ "\xee\x85\xaa" };                   // U+e16a
        constexpr static inline std::string_view SquareBottomDashedScissors{ "\xee\x93\xaf" };       // U+e4ef
        constexpr static inline std::string_view SquareCheckBig{ "\xee\x85\xab" };                   // U+e16b
        constexpr static inline std::string_view SquareCheck{ "\xee\x95\x9d" };                      // U+e55d
        constexpr static inline std::string_view SquareChevronDown{ "\xee\x8f\x92" };                // U+e3d2
        constexpr static inline std::string_view SquareChevronLeft{ "\xee\x8f\x93" };                // U+e3d3
        constexpr static inline std::string_view SquareChevronRight{ "\xee\x8f\x94" };               // U+e3d4
        constexpr static inline std::string_view SquareChevronUp{ "\xee\x8f\x95" };                  // U+e3d5
        constexpr static inline std::string_view SquareCode{ "\xee\x85\xac" };                       // U+e16c
        constexpr static inline std::string_view SquareDashedBottomCode{ "\xee\x93\x85" };           // U+e4c5
        constexpr static inline std::string_view SquareDashedBottom{ "\xee\x93\x84" };               // U+e4c4
        constexpr static inline std::string_view SquareDashedKanban{ "\xee\x85\xad" };               // U+e16d
        constexpr static inline std::string_view SquareDashedMousePointer{ "\xee\x94\x8d" };         // U+e50d
        constexpr static inline std::string_view SquareDivide{ "\xee\x85\xae" };                     // U+e16e
        constexpr static inline std::string_view SquareDot{ "\xee\x85\xaf" };                        // U+e16f
        constexpr static inline std::string_view SquareEqual{ "\xee\x85\xb0" };                      // U+e170
        constexpr static inline std::string_view SquareFunction{ "\xee\x88\xac" };                   // U+e22c
        constexpr static inline std::string_view SquareGanttChart{ "\xee\x85\xb1" };                 // U+e171
        constexpr static inline std::string_view SquareKanban{ "\xee\x85\xb2" };                     // U+e172
        constexpr static inline std::string_view SquareLibrary{ "\xee\x95\x93" };                    // U+e553
        constexpr static inline std::string_view SquareM{ "\xee\x94\x87" };                          // U+e507
        constexpr static inline std::string_view SquareMenu{ "\xee\x91\x97" };                       // U+e457
        constexpr static inline std::string_view SquareMinus{ "\xee\x85\xb3" };                      // U+e173
        constexpr static inline std::string_view SquareMousePointer{ "\xee\x88\x80" };               // U+e200
        constexpr static inline std::string_view SquareParkingOff{ "\xee\x8f\x8f" };                 // U+e3cf
        constexpr static inline std::string_view SquareParking{ "\xee\x8f\x8e" };                    // U+e3ce
        constexpr static inline std::string_view SquarePen{ "\xee\x85\xb4" };                        // U+e174
        constexpr static inline std::string_view SquarePercent{ "\xee\x94\xa0" };                    // U+e520
        constexpr static inline std::string_view SquarePi{ "\xee\x92\x8c" };                         // U+e48c
        constexpr static inline std::string_view SquarePilcrow{ "\xee\x92\x8f" };                    // U+e48f
        constexpr static inline std::string_view SquarePlay{ "\xee\x92\x85" };                       // U+e485
        constexpr static inline std::string_view SquarePlus{ "\xee\x85\xb5" };                       // U+e175
        constexpr static inline std::string_view SquarePower{ "\xee\x95\x95" };                      // U+e555
        constexpr static inline std::string_view SquareRadical{ "\xee\x97\x87" };                    // U+e5c7
        constexpr static inline std::string_view SquareScissors{ "\xee\x93\xb0" };                   // U+e4f0
        constexpr static inline std::string_view SquareSigma{ "\xee\x92\x8d" };                      // U+e48d
        constexpr static inline std::string_view SquareSlash{ "\xee\x85\xb6" };                      // U+e176
        constexpr static inline std::string_view SquareSplitHorizontal{ "\xee\x8e\xb9" };            // U+e3b9
        constexpr static inline std::string_view SquareSplitVertical{ "\xee\x8e\xba" };              // U+e3ba
        constexpr static inline std::string_view SquareStack{ "\xee\x92\xa6" };                      // U+e4a6
        constexpr static inline std::string_view SquareTerminal{ "\xee\x88\x88" };                   // U+e208
        constexpr static inline std::string_view SquareUserRound{ "\xee\x91\xaa" };                  // U+e46a
        constexpr static inline std::string_view SquareUser{ "\xee\x91\xa9" };                       // U+e469
        constexpr static inline std::string_view SquareX{ "\xee\x85\xb7" };                          // U+e177
        constexpr static inline std::string_view Square{ "\xee\x85\xa9" };                           // U+e169
        constexpr static inline std::string_view Squircle{ "\xee\x95\xbe" };                         // U+e57e
        constexpr static inline std::string_view Squirrel{ "\xee\x92\xa3" };                         // U+e4a3
        constexpr static inline std::string_view Stamp{ "\xee\x8e\xbe" };                            // U+e3be
        constexpr static inline std::string_view StarHalf{ "\xee\x88\x89" };                         // U+e209
        constexpr static inline std::string_view StarOff{ "\xee\x8a\xaf" };                          // U+e2af
        constexpr static inline std::string_view Star{ "\xee\x85\xb8" };                             // U+e178
        constexpr static inline std::string_view StepBack{ "\xee\x8f\xac" };                         // U+e3ec
        constexpr static inline std::string_view StepForward{ "\xee\x8f\xad" };                      // U+e3ed
        constexpr static inline std::string_view Stethoscope{ "\xee\x8b\xb0" };                      // U+e2f0
        constexpr static inline std::string_view Sticker{ "\xee\x8c\x81" };                          // U+e301
        constexpr static inline std::string_view StickyNote{ "\xee\x8c\x82" };                       // U+e302
        constexpr static inline std::string_view Store{ "\xee\x8f\xa7" };                            // U+e3e7
        constexpr static inline std::string_view StretchHorizontal{ "\xee\x89\xbb" };                // U+e27b
        constexpr static inline std::string_view StretchVertical{ "\xee\x89\xbc" };                  // U+e27c
        constexpr static inline std::string_view Strikethrough{ "\xee\x85\xb9" };                    // U+e179
        constexpr static inline std::string_view Subscript{ "\xee\x89\x9b" };                        // U+e25b
        constexpr static inline std::string_view SunDim{ "\xee\x8a\x98" };                           // U+e298
        constexpr static inline std::string_view SunMedium{ "\xee\x8a\xb0" };                        // U+e2b0
        constexpr static inline std::string_view SunMoon{ "\xee\x8a\xb1" };                          // U+e2b1
        constexpr static inline std::string_view SunSnow{ "\xee\x8d\xb5" };                          // U+e375
        constexpr static inline std::string_view Sun{ "\xee\x85\xba" };                              // U+e17a
        constexpr static inline std::string_view Sunrise{ "\xee\x85\xbb" };                          // U+e17b
        constexpr static inline std::string_view Sunset{ "\xee\x85\xbc" };                           // U+e17c
        constexpr static inline std::string_view Superscript{ "\xee\x89\x9d" };                      // U+e25d
        constexpr static inline std::string_view SwatchBook{ "\xee\x96\xa3" };                       // U+e5a3
        constexpr static inline std::string_view SwissFranc{ "\xee\x85\xbd" };                       // U+e17d
        constexpr static inline std::string_view SwitchCamera{ "\xee\x85\xbe" };                     // U+e17e
        constexpr static inline std::string_view Sword{ "\xee\x8a\xb2" };                            // U+e2b2
        constexpr static inline std::string_view Swords{ "\xee\x8a\xb3" };                           // U+e2b3
        constexpr static inline std::string_view Syringe{ "\xee\x8b\xb1" };                          // U+e2f1
        constexpr static inline std::string_view Table_2{ "\xee\x8b\xb8" };                          // U+e2f8
        constexpr static inline std::string_view TableCellsMerge{ "\xee\x97\x8b" };                  // U+e5cb
        constexpr static inline std::string_view TableCellsSplit{ "\xee\x97\x8c" };                  // U+e5cc
        constexpr static inline std::string_view TableColumnsSplit{ "\xee\x97\x8d" };                // U+e5cd
        constexpr static inline std::string_view TableProperties{ "\xee\x93\x9f" };                  // U+e4df
        constexpr static inline std::string_view TableRowsSplit{ "\xee\x97\x8e" };                   // U+e5ce
        constexpr static inline std::string_view Table{ "\xee\x85\xbf" };                            // U+e17f
        constexpr static inline std::string_view TabletSmartphone{ "\xee\x94\x8e" };                 // U+e50e
        constexpr static inline std::string_view Tablet{ "\xee\x86\x80" };                           // U+e180
        constexpr static inline std::string_view Tablets{ "\xee\x8f\x81" };                          // U+e3c1
        constexpr static inline std::string_view Tag{ "\xee\x86\x81" };                              // U+e181
        constexpr static inline std::string_view Tags{ "\xee\x8d\x9f" };                             // U+e35f
        constexpr static inline std::string_view Tally_1{ "\xee\x93\x9a" };                          // U+e4da
        constexpr static inline std::string_view Tally_2{ "\xee\x93\x9b" };                          // U+e4db
        constexpr static inline std::string_view Tally_3{ "\xee\x93\x9c" };                          // U+e4dc
        constexpr static inline std::string_view Tally_4{ "\xee\x93\x9d" };                          // U+e4dd
        constexpr static inline std::string_view Tally_5{ "\xee\x93\x9e" };                          // U+e4de
        constexpr static inline std::string_view Tangent{ "\xee\x94\xb2" };                          // U+e532
        constexpr static inline std::string_view Target{ "\xee\x86\x82" };                           // U+e182
        constexpr static inline std::string_view Telescope{ "\xee\x97\x89" };                        // U+e5c9
        constexpr static inline std::string_view TentTree{ "\xee\x94\xbf" };                         // U+e53f
        constexpr static inline std::string_view Tent{ "\xee\x88\xa6" };                             // U+e226
        constexpr static inline std::string_view Terminal{ "\xee\x86\x83" };                         // U+e183
        constexpr static inline std::string_view TestTubeDiagonal{ "\xee\x90\x8a" };                 // U+e40a
        constexpr static inline std::string_view TestTube{ "\xee\x90\x89" };                         // U+e409
        constexpr static inline std::string_view TestTubes{ "\xee\x90\x8b" };                        // U+e40b
        constexpr static inline std::string_view TextCursorInput{ "\xee\x89\xa4" };                  // U+e264
        constexpr static inline std::string_view TextCursor{ "\xee\x89\xa3" };                       // U+e263
        constexpr static inline std::string_view TextQuote{ "\xee\x92\xa2" };                        // U+e4a2
        constexpr static inline std::string_view TextSearch{ "\xee\x96\xb1" };                       // U+e5b1
        constexpr static inline std::string_view TextSelect{ "\xee\x8f\xa1" };                       // U+e3e1
        constexpr static inline std::string_view Text{ "\xee\x8f\xae" };                             // U+e3ee
        constexpr static inline std::string_view Theater{ "\xee\x94\xa6" };                          // U+e526
        constexpr static inline std::string_view ThermometerSnowflake{ "\xee\x86\x85" };             // U+e185
        constexpr static inline std::string_view ThermometerSun{ "\xee\x86\x86" };                   // U+e186
        constexpr static inline std::string_view Thermometer{ "\xee\x86\x84" };                      // U+e184
        constexpr static inline std::string_view ThumbsDown{ "\xee\x86\x87" };                       // U+e187
        constexpr static inline std::string_view ThumbsUp{ "\xee\x86\x88" };                         // U+e188
        constexpr static inline std::string_view TicketCheck{ "\xee\x96\xb2" };                      // U+e5b2
        constexpr static inline std::string_view TicketMinus{ "\xee\x96\xb3" };                      // U+e5b3
        constexpr static inline std::string_view TicketPercent{ "\xee\x96\xb4" };                    // U+e5b4
        constexpr static inline std::string_view TicketPlus{ "\xee\x96\xb5" };                       // U+e5b5
        constexpr static inline std::string_view TicketSlash{ "\xee\x96\xb6" };                      // U+e5b6
        constexpr static inline std::string_view TicketX{ "\xee\x96\xb7" };                          // U+e5b7
        constexpr static inline std::string_view Ticket{ "\xee\x88\x8d" };                           // U+e20d
        constexpr static inline std::string_view TimerOff{ "\xee\x89\x88" };                         // U+e248
        constexpr static inline std::string_view TimerReset{ "\xee\x88\xb5" };                       // U+e235
        constexpr static inline std::string_view Timer{ "\xee\x87\x9e" };                            // U+e1de
        constexpr static inline std::string_view ToggleLeft{ "\xee\x86\x89" };                       // U+e189
        constexpr static inline std::string_view ToggleRight{ "\xee\x86\x8a" };                      // U+e18a
        constexpr static inline std::string_view Tornado{ "\xee\x88\x97" };                          // U+e217
        constexpr static inline std::string_view Torus{ "\xee\x94\xb3" };                            // U+e533
        constexpr static inline std::string_view TouchpadOff{ "\xee\x91\x8e" };                      // U+e44e
        constexpr static inline std::string_view Touchpad{ "\xee\x91\x8d" };                         // U+e44d
        constexpr static inline std::string_view TowerControl{ "\xee\x8e\xbf" };                     // U+e3bf
        constexpr static inline std::string_view ToyBrick{ "\xee\x8d\x8a" };                         // U+e34a
        constexpr static inline std::string_view Tractor{ "\xee\x94\x88" };                          // U+e508
        constexpr static inline std::string_view TrafficCone{ "\xee\x94\x89" };                      // U+e509
        constexpr static inline std::string_view TrainFrontTunnel{ "\xee\x94\x8b" };                 // U+e50b
        constexpr static inline std::string_view TrainFront{ "\xee\x94\x8a" };                       // U+e50a
        constexpr static inline std::string_view TrainTrack{ "\xee\x94\x8c" };                       // U+e50c
        constexpr static inline std::string_view TramFront{ "\xee\x8a\xa8" };                        // U+e2a8
        constexpr static inline std::string_view Trash_2{ "\xee\x86\x8c" };                          // U+e18c
        constexpr static inline std::string_view Trash{ "\xee\x86\x8b" };                            // U+e18b
        constexpr static inline std::string_view TreeDeciduous{ "\xee\x8b\xb2" };                    // U+e2f2
        constexpr static inline std::string_view TreePalm{ "\xee\x8a\x80" };                         // U+e280
        constexpr static inline std::string_view TreePine{ "\xee\x8b\xb3" };                         // U+e2f3
        constexpr static inline std::string_view Trees{ "\xee\x8b\xb4" };                            // U+e2f4
        constexpr static inline std::string_view Trello{ "\xee\x86\x8d" };                           // U+e18d
        constexpr static inline std::string_view TrendingDown{ "\xee\x86\x8e" };                     // U+e18e
        constexpr static inline std::string_view TrendingUp{ "\xee\x86\x8f" };                       // U+e18f
        constexpr static inline std::string_view TriangleAlert{ "\xee\x86\x91" };                    // U+e191
        constexpr static inline std::string_view TriangleRight{ "\xee\x93\xb1" };                    // U+e4f1
        constexpr static inline std::string_view Triangle{ "\xee\x86\x90" };                         // U+e190
        constexpr static inline std::string_view Trophy{ "\xee\x8d\xb6" };                           // U+e376
        constexpr static inline std::string_view Truck{ "\xee\x86\x92" };                            // U+e192
        constexpr static inline std::string_view Turtle{ "\xee\x93\xbd" };                           // U+e4fd
        constexpr static inline std::string_view Tv_2{ "\xee\x88\x81" };                             // U+e201
        constexpr static inline std::string_view Tv{ "\xee\x86\x93" };                               // U+e193
        constexpr static inline std::string_view Twitch{ "\xee\x86\x94" };                           // U+e194
        constexpr static inline std::string_view Twitter{ "\xee\x86\x95" };                          // U+e195
        constexpr static inline std::string_view Type{ "\xee\x86\x96" };                             // U+e196
        constexpr static inline std::string_view UmbrellaOff{ "\xee\x95\x87" };                      // U+e547
        constexpr static inline std::string_view Umbrella{ "\xee\x86\x97" };                         // U+e197
        constexpr static inline std::string_view Underline{ "\xee\x86\x98" };                        // U+e198
        constexpr static inline std::string_view Undo_2{ "\xee\x8a\xa0" };                           // U+e2a0
        constexpr static inline std::string_view UndoDot{ "\xee\x91\x95" };                          // U+e455
        constexpr static inline std::string_view Undo{ "\xee\x86\x99" };                             // U+e199
        constexpr static inline std::string_view UnfoldHorizontal{ "\xee\x91\x81" };                 // U+e441
        constexpr static inline std::string_view UnfoldVertical{ "\xee\x91\x82" };                   // U+e442
        constexpr static inline std::string_view Ungroup{ "\xee\x91\xab" };                          // U+e46b
        constexpr static inline std::string_view University{ "\xee\x8f\xa8" };                       // U+e3e8
        constexpr static inline std::string_view Unlink_2{ "\xee\x86\x9b" };                         // U+e19b
        constexpr static inline std::string_view Unlink{ "\xee\x86\x9a" };                           // U+e19a
        constexpr static inline std::string_view Unplug{ "\xee\x91\xa1" };                           // U+e461
        constexpr static inline std::string_view Upload{ "\xee\x86\x9c" };                           // U+e19c
        constexpr static inline std::string_view Usb{ "\xee\x8d\x99" };                              // U+e359
        constexpr static inline std::string_view UserCheck{ "\xee\x86\x9e" };                        // U+e19e
        constexpr static inline std::string_view UserCog{ "\xee\x8d\x85" };                          // U+e345
        constexpr static inline std::string_view UserMinus{ "\xee\x86\x9f" };                        // U+e19f
        constexpr static inline std::string_view UserPlus{ "\xee\x86\xa0" };                         // U+e1a0
        constexpr static inline std::string_view UserRoundCheck{ "\xee\x91\xad" };                   // U+e46d
        constexpr static inline std::string_view UserRoundCog{ "\xee\x91\xae" };                     // U+e46e
        constexpr static inline std::string_view UserRoundMinus{ "\xee\x91\xaf" };                   // U+e46f
        constexpr static inline std::string_view UserRoundPlus{ "\xee\x91\xb0" };                    // U+e470
        constexpr static inline std::string_view UserRoundSearch{ "\xee\x95\xbc" };                  // U+e57c
        constexpr static inline std::string_view UserRoundX{ "\xee\x91\xb1" };                       // U+e471
        constexpr static inline std::string_view UserRound{ "\xee\x91\xac" };                        // U+e46c
        constexpr static inline std::string_view UserSearch{ "\xee\x95\xbd" };                       // U+e57d
        constexpr static inline std::string_view UserX{ "\xee\x86\xa1" };                            // U+e1a1
        constexpr static inline std::string_view User{ "\xee\x86\x9d" };                             // U+e19d
        constexpr static inline std::string_view UsersRound{ "\xee\x91\xb2" };                       // U+e472
        constexpr static inline std::string_view Users{ "\xee\x86\xa2" };                            // U+e1a2
        constexpr static inline std::string_view UtensilsCrossed{ "\xee\x8b\xb6" };                  // U+e2f6
        constexpr static inline std::string_view Utensils{ "\xee\x8b\xb5" };                         // U+e2f5
        constexpr static inline std::string_view UtilityPole{ "\xee\x8f\x85" };                      // U+e3c5
        constexpr static inline std::string_view Variable{ "\xee\x91\xb7" };                         // U+e477
        constexpr static inline std::string_view Vault{ "\xee\x96\x93" };                            // U+e593
        constexpr static inline std::string_view Vegan{ "\xee\x8e\xa0" };                            // U+e3a0
        constexpr static inline std::string_view VenetianMask{ "\xee\x8a\xa9" };                     // U+e2a9
        constexpr static inline std::string_view VibrateOff{ "\xee\x8a\x9c" };                       // U+e29c
        constexpr static inline std::string_view Vibrate{ "\xee\x88\xa2" };                          // U+e222
        constexpr static inline std::string_view VideoOff{ "\xee\x86\xa4" };                         // U+e1a4
        constexpr static inline std::string_view Video{ "\xee\x86\xa3" };                            // U+e1a3
        constexpr static inline std::string_view Videotape{ "\xee\x93\x8f" };                        // U+e4cf
        constexpr static inline std::string_view View{ "\xee\x86\xa5" };                             // U+e1a5
        constexpr static inline std::string_view Voicemail{ "\xee\x86\xa6" };                        // U+e1a6
        constexpr static inline std::string_view Volume_1{ "\xee\x86\xa8" };                         // U+e1a8
        constexpr static inline std::string_view Volume_2{ "\xee\x86\xa9" };                         // U+e1a9
        constexpr static inline std::string_view VolumeX{ "\xee\x86\xaa" };                          // U+e1aa
        constexpr static inline std::string_view Volume{ "\xee\x86\xa7" };                           // U+e1a7
        constexpr static inline std::string_view Vote{ "\xee\x8e\xb0" };                             // U+e3b0
        constexpr static inline std::string_view WalletCards{ "\xee\x93\x90" };                      // U+e4d0
        constexpr static inline std::string_view WalletMinimal{ "\xee\x93\x91" };                    // U+e4d1
        constexpr static inline std::string_view Wallet{ "\xee\x88\x82" };                           // U+e202
        constexpr static inline std::string_view Wallpaper{ "\xee\x91\x8f" };                        // U+e44f
        constexpr static inline std::string_view WandSparkles{ "\xee\x8d\x9a" };                     // U+e35a
        constexpr static inline std::string_view Wand{ "\xee\x89\x85" };                             // U+e245
        constexpr static inline std::string_view Warehouse{ "\xee\x8f\xa9" };                        // U+e3e9
        constexpr static inline std::string_view WashingMachine{ "\xee\x96\x94" };                   // U+e594
        constexpr static inline std::string_view Watch{ "\xee\x86\xab" };                            // U+e1ab
        constexpr static inline std::string_view Waves{ "\xee\x8a\x82" };                            // U+e282
        constexpr static inline std::string_view Waypoints{ "\xee\x95\x86" };                        // U+e546
        constexpr static inline std::string_view Webcam{ "\xee\x88\x83" };                           // U+e203
        constexpr static inline std::string_view WebhookOff{ "\xee\x96\xbb" };                       // U+e5bb
        constexpr static inline std::string_view Webhook{ "\xee\x8d\xb7" };                          // U+e377
        constexpr static inline std::string_view Weight{ "\xee\x94\xb4" };                           // U+e534
        constexpr static inline std::string_view WheatOff{ "\xee\x8e\xa2" };                         // U+e3a2
        constexpr static inline std::string_view Wheat{ "\xee\x8e\xa1" };                            // U+e3a1
        constexpr static inline std::string_view WholeWord{ "\xee\x8f\xa2" };                        // U+e3e2
        constexpr static inline std::string_view WifiOff{ "\xee\x86\xad" };                          // U+e1ad
        constexpr static inline std::string_view Wifi{ "\xee\x86\xac" };                             // U+e1ac
        constexpr static inline std::string_view Wind{ "\xee\x86\xae" };                             // U+e1ae
        constexpr static inline std::string_view WineOff{ "\xee\x8e\xa3" };                          // U+e3a3
        constexpr static inline std::string_view Wine{ "\xee\x8b\xb7" };                             // U+e2f7
        constexpr static inline std::string_view Workflow{ "\xee\x90\xa9" };                         // U+e429
        constexpr static inline std::string_view Worm{ "\xee\x97\x9e" };                             // U+e5de
        constexpr static inline std::string_view WrapText{ "\xee\x89\x87" };                         // U+e247
        constexpr static inline std::string_view Wrench{ "\xee\x86\xaf" };                           // U+e1af
        constexpr static inline std::string_view X{ "\xee\x86\xb0" };                                // U+e1b0
        constexpr static inline std::string_view Youtube{ "\xee\x86\xb1" };                          // U+e1b1
        constexpr static inline std::string_view ZapOff{ "\xee\x86\xb3" };                           // U+e1b3
        constexpr static inline std::string_view Zap{ "\xee\x86\xb2" };                              // U+e1b2
        constexpr static inline std::string_view ZoomIn{ "\xee\x86\xb4" };                           // U+e1b4
        constexpr static inline std::string_view ZoomOut{ "\xee\x86\xb5" };                          // U+e1b5
    };
}
