#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct FA6Brands
    {
        constexpr static inline std::string_view FILE_NAME_FAB{ "fa-brands-400.ttf" };

        constexpr static inline u16 IconMin{ 0xe007 };
        constexpr static inline u16 IconMax16{ 0xf8e8 };
        constexpr static inline u16 IconMax{ 0xf8e8 };

        constexpr static inline std::string_view FA42Group{ "\xee\x82\x80" };                    // U+e080
        constexpr static inline std::string_view FA500px{ "\xef\x89\xae" };                      // U+f26e
        constexpr static inline std::string_view AccessibleIcon{ "\xef\x8d\xa8" };               // U+f368
        constexpr static inline std::string_view Accusoft{ "\xef\x8d\xa9" };                     // U+f369
        constexpr static inline std::string_view Adn{ "\xef\x85\xb0" };                          // U+f170
        constexpr static inline std::string_view Adversal{ "\xef\x8d\xaa" };                     // U+f36a
        constexpr static inline std::string_view Affiliatetheme{ "\xef\x8d\xab" };               // U+f36b
        constexpr static inline std::string_view Airbnb{ "\xef\xa0\xb4" };                       // U+f834
        constexpr static inline std::string_view Algolia{ "\xef\x8d\xac" };                      // U+f36c
        constexpr static inline std::string_view Alipay{ "\xef\x99\x82" };                       // U+f642
        constexpr static inline std::string_view Amazon{ "\xef\x89\xb0" };                       // U+f270
        constexpr static inline std::string_view AmazonPay{ "\xef\x90\xac" };                    // U+f42c
        constexpr static inline std::string_view Amilia{ "\xef\x8d\xad" };                       // U+f36d
        constexpr static inline std::string_view Android{ "\xef\x85\xbb" };                      // U+f17b
        constexpr static inline std::string_view Angellist{ "\xef\x88\x89" };                    // U+f209
        constexpr static inline std::string_view Angrycreative{ "\xef\x8d\xae" };                // U+f36e
        constexpr static inline std::string_view Angular{ "\xef\x90\xa0" };                      // U+f420
        constexpr static inline std::string_view AppStore{ "\xef\x8d\xaf" };                     // U+f36f
        constexpr static inline std::string_view AppStoreIos{ "\xef\x8d\xb0" };                  // U+f370
        constexpr static inline std::string_view Apper{ "\xef\x8d\xb1" };                        // U+f371
        constexpr static inline std::string_view Apple{ "\xef\x85\xb9" };                        // U+f179
        constexpr static inline std::string_view ApplePay{ "\xef\x90\x95" };                     // U+f415
        constexpr static inline std::string_view Artstation{ "\xef\x9d\xba" };                   // U+f77a
        constexpr static inline std::string_view Asymmetrik{ "\xef\x8d\xb2" };                   // U+f372
        constexpr static inline std::string_view Atlassian{ "\xef\x9d\xbb" };                    // U+f77b
        constexpr static inline std::string_view Audible{ "\xef\x8d\xb3" };                      // U+f373
        constexpr static inline std::string_view Autoprefixer{ "\xef\x90\x9c" };                 // U+f41c
        constexpr static inline std::string_view Avianex{ "\xef\x8d\xb4" };                      // U+f374
        constexpr static inline std::string_view Aviato{ "\xef\x90\xa1" };                       // U+f421
        constexpr static inline std::string_view Aws{ "\xef\x8d\xb5" };                          // U+f375
        constexpr static inline std::string_view Bandcamp{ "\xef\x8b\x95" };                     // U+f2d5
        constexpr static inline std::string_view BattleNet{ "\xef\xa0\xb5" };                    // U+f835
        constexpr static inline std::string_view Behance{ "\xef\x86\xb4" };                      // U+f1b4
        constexpr static inline std::string_view Bilibili{ "\xee\x8f\x99" };                     // U+e3d9
        constexpr static inline std::string_view Bimobject{ "\xef\x8d\xb8" };                    // U+f378
        constexpr static inline std::string_view Bitbucket{ "\xef\x85\xb1" };                    // U+f171
        constexpr static inline std::string_view Bitcoin{ "\xef\x8d\xb9" };                      // U+f379
        constexpr static inline std::string_view Bity{ "\xef\x8d\xba" };                         // U+f37a
        constexpr static inline std::string_view BlackTie{ "\xef\x89\xbe" };                     // U+f27e
        constexpr static inline std::string_view Blackberry{ "\xef\x8d\xbb" };                   // U+f37b
        constexpr static inline std::string_view Blogger{ "\xef\x8d\xbc" };                      // U+f37c
        constexpr static inline std::string_view BloggerB{ "\xef\x8d\xbd" };                     // U+f37d
        constexpr static inline std::string_view Bluesky{ "\xee\x99\xb1" };                      // U+e671
        constexpr static inline std::string_view Bluetooth{ "\xef\x8a\x93" };                    // U+f293
        constexpr static inline std::string_view BluetoothB{ "\xef\x8a\x94" };                   // U+f294
        constexpr static inline std::string_view Bootstrap{ "\xef\xa0\xb6" };                    // U+f836
        constexpr static inline std::string_view Bots{ "\xee\x8d\x80" };                         // U+e340
        constexpr static inline std::string_view Brave{ "\xee\x98\xbc" };                        // U+e63c
        constexpr static inline std::string_view BraveReverse{ "\xee\x98\xbd" };                 // U+e63d
        constexpr static inline std::string_view Btc{ "\xef\x85\x9a" };                          // U+f15a
        constexpr static inline std::string_view Buffer{ "\xef\xa0\xb7" };                       // U+f837
        constexpr static inline std::string_view Buromobelexperte{ "\xef\x8d\xbf" };             // U+f37f
        constexpr static inline std::string_view BuyNLarge{ "\xef\xa2\xa6" };                    // U+f8a6
        constexpr static inline std::string_view Buysellads{ "\xef\x88\x8d" };                   // U+f20d
        constexpr static inline std::string_view CanadianMapleLeaf{ "\xef\x9e\x85" };            // U+f785
        constexpr static inline std::string_view CcAmazonPay{ "\xef\x90\xad" };                  // U+f42d
        constexpr static inline std::string_view CcAmex{ "\xef\x87\xb3" };                       // U+f1f3
        constexpr static inline std::string_view CcApplePay{ "\xef\x90\x96" };                   // U+f416
        constexpr static inline std::string_view CcDinersClub{ "\xef\x89\x8c" };                 // U+f24c
        constexpr static inline std::string_view CcDiscover{ "\xef\x87\xb2" };                   // U+f1f2
        constexpr static inline std::string_view CcJcb{ "\xef\x89\x8b" };                        // U+f24b
        constexpr static inline std::string_view CcMastercard{ "\xef\x87\xb1" };                 // U+f1f1
        constexpr static inline std::string_view CcPaypal{ "\xef\x87\xb4" };                     // U+f1f4
        constexpr static inline std::string_view CcStripe{ "\xef\x87\xb5" };                     // U+f1f5
        constexpr static inline std::string_view CcVisa{ "\xef\x87\xb0" };                       // U+f1f0
        constexpr static inline std::string_view Centercode{ "\xef\x8e\x80" };                   // U+f380
        constexpr static inline std::string_view Centos{ "\xef\x9e\x89" };                       // U+f789
        constexpr static inline std::string_view Chrome{ "\xef\x89\xa8" };                       // U+f268
        constexpr static inline std::string_view Chromecast{ "\xef\xa0\xb8" };                   // U+f838
        constexpr static inline std::string_view Cloudflare{ "\xee\x81\xbd" };                   // U+e07d
        constexpr static inline std::string_view Cloudscale{ "\xef\x8e\x83" };                   // U+f383
        constexpr static inline std::string_view Cloudsmith{ "\xef\x8e\x84" };                   // U+f384
        constexpr static inline std::string_view Cloudversify{ "\xef\x8e\x85" };                 // U+f385
        constexpr static inline std::string_view Cmplid{ "\xee\x8d\xa0" };                       // U+e360
        constexpr static inline std::string_view Codepen{ "\xef\x87\x8b" };                      // U+f1cb
        constexpr static inline std::string_view Codiepie{ "\xef\x8a\x84" };                     // U+f284
        constexpr static inline std::string_view Confluence{ "\xef\x9e\x8d" };                   // U+f78d
        constexpr static inline std::string_view Connectdevelop{ "\xef\x88\x8e" };               // U+f20e
        constexpr static inline std::string_view Contao{ "\xef\x89\xad" };                       // U+f26d
        constexpr static inline std::string_view CottonBureau{ "\xef\xa2\x9e" };                 // U+f89e
        constexpr static inline std::string_view Cpanel{ "\xef\x8e\x88" };                       // U+f388
        constexpr static inline std::string_view CreativeCommons{ "\xef\x89\x9e" };              // U+f25e
        constexpr static inline std::string_view CreativeCommonsBy{ "\xef\x93\xa7" };            // U+f4e7
        constexpr static inline std::string_view CreativeCommonsNc{ "\xef\x93\xa8" };            // U+f4e8
        constexpr static inline std::string_view CreativeCommonsNcEu{ "\xef\x93\xa9" };          // U+f4e9
        constexpr static inline std::string_view CreativeCommonsNcJp{ "\xef\x93\xaa" };          // U+f4ea
        constexpr static inline std::string_view CreativeCommonsNd{ "\xef\x93\xab" };            // U+f4eb
        constexpr static inline std::string_view CreativeCommonsPd{ "\xef\x93\xac" };            // U+f4ec
        constexpr static inline std::string_view CreativeCommonsPdAlt{ "\xef\x93\xad" };         // U+f4ed
        constexpr static inline std::string_view CreativeCommonsRemix{ "\xef\x93\xae" };         // U+f4ee
        constexpr static inline std::string_view CreativeCommonsSa{ "\xef\x93\xaf" };            // U+f4ef
        constexpr static inline std::string_view CreativeCommonsSampling{ "\xef\x93\xb0" };      // U+f4f0
        constexpr static inline std::string_view CreativeCommonsSamplingPlus{ "\xef\x93\xb1" };  // U+f4f1
        constexpr static inline std::string_view CreativeCommonsShare{ "\xef\x93\xb2" };         // U+f4f2
        constexpr static inline std::string_view CreativeCommonsZero{ "\xef\x93\xb3" };          // U+f4f3
        constexpr static inline std::string_view CriticalRole{ "\xef\x9b\x89" };                 // U+f6c9
        constexpr static inline std::string_view Css3{ "\xef\x84\xbc" };                         // U+f13c
        constexpr static inline std::string_view Css3Alt{ "\xef\x8e\x8b" };                      // U+f38b
        constexpr static inline std::string_view Cuttlefish{ "\xef\x8e\x8c" };                   // U+f38c
        constexpr static inline std::string_view DAndD{ "\xef\x8e\x8d" };                        // U+f38d
        constexpr static inline std::string_view DAndDBeyond{ "\xef\x9b\x8a" };                  // U+f6ca
        constexpr static inline std::string_view Dailymotion{ "\xee\x81\x92" };                  // U+e052
        constexpr static inline std::string_view Dashcube{ "\xef\x88\x90" };                     // U+f210
        constexpr static inline std::string_view Debian{ "\xee\x98\x8b" };                       // U+e60b
        constexpr static inline std::string_view Deezer{ "\xee\x81\xb7" };                       // U+e077
        constexpr static inline std::string_view Delicious{ "\xef\x86\xa5" };                    // U+f1a5
        constexpr static inline std::string_view Deploydog{ "\xef\x8e\x8e" };                    // U+f38e
        constexpr static inline std::string_view Deskpro{ "\xef\x8e\x8f" };                      // U+f38f
        constexpr static inline std::string_view Dev{ "\xef\x9b\x8c" };                          // U+f6cc
        constexpr static inline std::string_view Deviantart{ "\xef\x86\xbd" };                   // U+f1bd
        constexpr static inline std::string_view Dhl{ "\xef\x9e\x90" };                          // U+f790
        constexpr static inline std::string_view Diaspora{ "\xef\x9e\x91" };                     // U+f791
        constexpr static inline std::string_view Digg{ "\xef\x86\xa6" };                         // U+f1a6
        constexpr static inline std::string_view DigitalOcean{ "\xef\x8e\x91" };                 // U+f391
        constexpr static inline std::string_view Discord{ "\xef\x8e\x92" };                      // U+f392
        constexpr static inline std::string_view Discourse{ "\xef\x8e\x93" };                    // U+f393
        constexpr static inline std::string_view Dochub{ "\xef\x8e\x94" };                       // U+f394
        constexpr static inline std::string_view Docker{ "\xef\x8e\x95" };                       // U+f395
        constexpr static inline std::string_view Draft2digital{ "\xef\x8e\x96" };                // U+f396
        constexpr static inline std::string_view Dribbble{ "\xef\x85\xbd" };                     // U+f17d
        constexpr static inline std::string_view Dropbox{ "\xef\x85\xab" };                      // U+f16b
        constexpr static inline std::string_view Drupal{ "\xef\x86\xa9" };                       // U+f1a9
        constexpr static inline std::string_view Dyalog{ "\xef\x8e\x99" };                       // U+f399
        constexpr static inline std::string_view Earlybirds{ "\xef\x8e\x9a" };                   // U+f39a
        constexpr static inline std::string_view Ebay{ "\xef\x93\xb4" };                         // U+f4f4
        constexpr static inline std::string_view Edge{ "\xef\x8a\x82" };                         // U+f282
        constexpr static inline std::string_view EdgeLegacy{ "\xee\x81\xb8" };                   // U+e078
        constexpr static inline std::string_view Elementor{ "\xef\x90\xb0" };                    // U+f430
        constexpr static inline std::string_view Ello{ "\xef\x97\xb1" };                         // U+f5f1
        constexpr static inline std::string_view Ember{ "\xef\x90\xa3" };                        // U+f423
        constexpr static inline std::string_view Empire{ "\xef\x87\x91" };                       // U+f1d1
        constexpr static inline std::string_view Envira{ "\xef\x8a\x99" };                       // U+f299
        constexpr static inline std::string_view Erlang{ "\xef\x8e\x9d" };                       // U+f39d
        constexpr static inline std::string_view Ethereum{ "\xef\x90\xae" };                     // U+f42e
        constexpr static inline std::string_view Etsy{ "\xef\x8b\x97" };                         // U+f2d7
        constexpr static inline std::string_view Evernote{ "\xef\xa0\xb9" };                     // U+f839
        constexpr static inline std::string_view Expeditedssl{ "\xef\x88\xbe" };                 // U+f23e
        constexpr static inline std::string_view Facebook{ "\xef\x82\x9a" };                     // U+f09a
        constexpr static inline std::string_view FacebookF{ "\xef\x8e\x9e" };                    // U+f39e
        constexpr static inline std::string_view FacebookMessenger{ "\xef\x8e\x9f" };            // U+f39f
        constexpr static inline std::string_view FantasyFlightGames{ "\xef\x9b\x9c" };           // U+f6dc
        constexpr static inline std::string_view Fedex{ "\xef\x9e\x97" };                        // U+f797
        constexpr static inline std::string_view Fedora{ "\xef\x9e\x98" };                       // U+f798
        constexpr static inline std::string_view Figma{ "\xef\x9e\x99" };                        // U+f799
        constexpr static inline std::string_view Firefox{ "\xef\x89\xa9" };                      // U+f269
        constexpr static inline std::string_view FirefoxBrowser{ "\xee\x80\x87" };               // U+e007
        constexpr static inline std::string_view FirstOrder{ "\xef\x8a\xb0" };                   // U+f2b0
        constexpr static inline std::string_view FirstOrderAlt{ "\xef\x94\x8a" };                // U+f50a
        constexpr static inline std::string_view Firstdraft{ "\xef\x8e\xa1" };                   // U+f3a1
        constexpr static inline std::string_view Flickr{ "\xef\x85\xae" };                       // U+f16e
        constexpr static inline std::string_view Flipboard{ "\xef\x91\x8d" };                    // U+f44d
        constexpr static inline std::string_view Fly{ "\xef\x90\x97" };                          // U+f417
        constexpr static inline std::string_view FontAwesome{ "\xef\x8a\xb4" };                  // U+f2b4
        constexpr static inline std::string_view Fonticons{ "\xef\x8a\x80" };                    // U+f280
        constexpr static inline std::string_view FonticonsFi{ "\xef\x8e\xa2" };                  // U+f3a2
        constexpr static inline std::string_view FortAwesome{ "\xef\x8a\x86" };                  // U+f286
        constexpr static inline std::string_view FortAwesomeAlt{ "\xef\x8e\xa3" };               // U+f3a3
        constexpr static inline std::string_view Forumbee{ "\xef\x88\x91" };                     // U+f211
        constexpr static inline std::string_view Foursquare{ "\xef\x86\x80" };                   // U+f180
        constexpr static inline std::string_view FreeCodeCamp{ "\xef\x8b\x85" };                 // U+f2c5
        constexpr static inline std::string_view Freebsd{ "\xef\x8e\xa4" };                      // U+f3a4
        constexpr static inline std::string_view Fulcrum{ "\xef\x94\x8b" };                      // U+f50b
        constexpr static inline std::string_view GalacticRepublic{ "\xef\x94\x8c" };             // U+f50c
        constexpr static inline std::string_view GalacticSenate{ "\xef\x94\x8d" };               // U+f50d
        constexpr static inline std::string_view GetPocket{ "\xef\x89\xa5" };                    // U+f265
        constexpr static inline std::string_view Gg{ "\xef\x89\xa0" };                           // U+f260
        constexpr static inline std::string_view GgCircle{ "\xef\x89\xa1" };                     // U+f261
        constexpr static inline std::string_view Git{ "\xef\x87\x93" };                          // U+f1d3
        constexpr static inline std::string_view GitAlt{ "\xef\xa1\x81" };                       // U+f841
        constexpr static inline std::string_view Github{ "\xef\x82\x9b" };                       // U+f09b
        constexpr static inline std::string_view GithubAlt{ "\xef\x84\x93" };                    // U+f113
        constexpr static inline std::string_view Gitkraken{ "\xef\x8e\xa6" };                    // U+f3a6
        constexpr static inline std::string_view Gitlab{ "\xef\x8a\x96" };                       // U+f296
        constexpr static inline std::string_view Gitter{ "\xef\x90\xa6" };                       // U+f426
        constexpr static inline std::string_view Glide{ "\xef\x8a\xa5" };                        // U+f2a5
        constexpr static inline std::string_view GlideG{ "\xef\x8a\xa6" };                       // U+f2a6
        constexpr static inline std::string_view Gofore{ "\xef\x8e\xa7" };                       // U+f3a7
        constexpr static inline std::string_view Golang{ "\xee\x90\x8f" };                       // U+e40f
        constexpr static inline std::string_view Goodreads{ "\xef\x8e\xa8" };                    // U+f3a8
        constexpr static inline std::string_view GoodreadsG{ "\xef\x8e\xa9" };                   // U+f3a9
        constexpr static inline std::string_view Google{ "\xef\x86\xa0" };                       // U+f1a0
        constexpr static inline std::string_view GoogleDrive{ "\xef\x8e\xaa" };                  // U+f3aa
        constexpr static inline std::string_view GooglePay{ "\xee\x81\xb9" };                    // U+e079
        constexpr static inline std::string_view GooglePlay{ "\xef\x8e\xab" };                   // U+f3ab
        constexpr static inline std::string_view GooglePlus{ "\xef\x8a\xb3" };                   // U+f2b3
        constexpr static inline std::string_view GooglePlusG{ "\xef\x83\x95" };                  // U+f0d5
        constexpr static inline std::string_view GoogleScholar{ "\xee\x98\xbb" };                // U+e63b
        constexpr static inline std::string_view GoogleWallet{ "\xef\x87\xae" };                 // U+f1ee
        constexpr static inline std::string_view Gratipay{ "\xef\x86\x84" };                     // U+f184
        constexpr static inline std::string_view Grav{ "\xef\x8b\x96" };                         // U+f2d6
        constexpr static inline std::string_view Gripfire{ "\xef\x8e\xac" };                     // U+f3ac
        constexpr static inline std::string_view Grunt{ "\xef\x8e\xad" };                        // U+f3ad
        constexpr static inline std::string_view Guilded{ "\xee\x81\xbe" };                      // U+e07e
        constexpr static inline std::string_view Gulp{ "\xef\x8e\xae" };                         // U+f3ae
        constexpr static inline std::string_view HackerNews{ "\xef\x87\x94" };                   // U+f1d4
        constexpr static inline std::string_view Hackerrank{ "\xef\x97\xb7" };                   // U+f5f7
        constexpr static inline std::string_view Hashnode{ "\xee\x92\x99" };                     // U+e499
        constexpr static inline std::string_view Hips{ "\xef\x91\x92" };                         // U+f452
        constexpr static inline std::string_view HireAHelper{ "\xef\x8e\xb0" };                  // U+f3b0
        constexpr static inline std::string_view Hive{ "\xee\x81\xbf" };                         // U+e07f
        constexpr static inline std::string_view Hooli{ "\xef\x90\xa7" };                        // U+f427
        constexpr static inline std::string_view Hornbill{ "\xef\x96\x92" };                     // U+f592
        constexpr static inline std::string_view Hotjar{ "\xef\x8e\xb1" };                       // U+f3b1
        constexpr static inline std::string_view Houzz{ "\xef\x89\xbc" };                        // U+f27c
        constexpr static inline std::string_view Html5{ "\xef\x84\xbb" };                        // U+f13b
        constexpr static inline std::string_view Hubspot{ "\xef\x8e\xb2" };                      // U+f3b2
        constexpr static inline std::string_view Ideal{ "\xee\x80\x93" };                        // U+e013
        constexpr static inline std::string_view Imdb{ "\xef\x8b\x98" };                         // U+f2d8
        constexpr static inline std::string_view Instagram{ "\xef\x85\xad" };                    // U+f16d
        constexpr static inline std::string_view Instalod{ "\xee\x82\x81" };                     // U+e081
        constexpr static inline std::string_view Intercom{ "\xef\x9e\xaf" };                     // U+f7af
        constexpr static inline std::string_view InternetExplorer{ "\xef\x89\xab" };             // U+f26b
        constexpr static inline std::string_view Invision{ "\xef\x9e\xb0" };                     // U+f7b0
        constexpr static inline std::string_view Ioxhost{ "\xef\x88\x88" };                      // U+f208
        constexpr static inline std::string_view ItchIo{ "\xef\xa0\xba" };                       // U+f83a
        constexpr static inline std::string_view Itunes{ "\xef\x8e\xb4" };                       // U+f3b4
        constexpr static inline std::string_view ItunesNote{ "\xef\x8e\xb5" };                   // U+f3b5
        constexpr static inline std::string_view Java{ "\xef\x93\xa4" };                         // U+f4e4
        constexpr static inline std::string_view JediOrder{ "\xef\x94\x8e" };                    // U+f50e
        constexpr static inline std::string_view Jenkins{ "\xef\x8e\xb6" };                      // U+f3b6
        constexpr static inline std::string_view Jira{ "\xef\x9e\xb1" };                         // U+f7b1
        constexpr static inline std::string_view Joget{ "\xef\x8e\xb7" };                        // U+f3b7
        constexpr static inline std::string_view Joomla{ "\xef\x86\xaa" };                       // U+f1aa
        constexpr static inline std::string_view Js{ "\xef\x8e\xb8" };                           // U+f3b8
        constexpr static inline std::string_view Jsfiddle{ "\xef\x87\x8c" };                     // U+f1cc
        constexpr static inline std::string_view Jxl{ "\xee\x99\xbb" };                          // U+e67b
        constexpr static inline std::string_view Kaggle{ "\xef\x97\xba" };                       // U+f5fa
        constexpr static inline std::string_view Keybase{ "\xef\x93\xb5" };                      // U+f4f5
        constexpr static inline std::string_view Keycdn{ "\xef\x8e\xba" };                       // U+f3ba
        constexpr static inline std::string_view Kickstarter{ "\xef\x8e\xbb" };                  // U+f3bb
        constexpr static inline std::string_view KickstarterK{ "\xef\x8e\xbc" };                 // U+f3bc
        constexpr static inline std::string_view Korvue{ "\xef\x90\xaf" };                       // U+f42f
        constexpr static inline std::string_view Laravel{ "\xef\x8e\xbd" };                      // U+f3bd
        constexpr static inline std::string_view Lastfm{ "\xef\x88\x82" };                       // U+f202
        constexpr static inline std::string_view Leanpub{ "\xef\x88\x92" };                      // U+f212
        constexpr static inline std::string_view Less{ "\xef\x90\x9d" };                         // U+f41d
        constexpr static inline std::string_view Letterboxd{ "\xee\x98\xad" };                   // U+e62d
        constexpr static inline std::string_view Line{ "\xef\x8f\x80" };                         // U+f3c0
        constexpr static inline std::string_view Linkedin{ "\xef\x82\x8c" };                     // U+f08c
        constexpr static inline std::string_view LinkedinIn{ "\xef\x83\xa1" };                   // U+f0e1
        constexpr static inline std::string_view Linode{ "\xef\x8a\xb8" };                       // U+f2b8
        constexpr static inline std::string_view Linux{ "\xef\x85\xbc" };                        // U+f17c
        constexpr static inline std::string_view Lyft{ "\xef\x8f\x83" };                         // U+f3c3
        constexpr static inline std::string_view Magento{ "\xef\x8f\x84" };                      // U+f3c4
        constexpr static inline std::string_view Mailchimp{ "\xef\x96\x9e" };                    // U+f59e
        constexpr static inline std::string_view Mandalorian{ "\xef\x94\x8f" };                  // U+f50f
        constexpr static inline std::string_view Markdown{ "\xef\x98\x8f" };                     // U+f60f
        constexpr static inline std::string_view Mastodon{ "\xef\x93\xb6" };                     // U+f4f6
        constexpr static inline std::string_view Maxcdn{ "\xef\x84\xb6" };                       // U+f136
        constexpr static inline std::string_view Mdb{ "\xef\xa3\x8a" };                          // U+f8ca
        constexpr static inline std::string_view Medapps{ "\xef\x8f\x86" };                      // U+f3c6
        constexpr static inline std::string_view Medium{ "\xef\x88\xba" };                       // U+f23a
        constexpr static inline std::string_view Medrt{ "\xef\x8f\x88" };                        // U+f3c8
        constexpr static inline std::string_view Meetup{ "\xef\x8b\xa0" };                       // U+f2e0
        constexpr static inline std::string_view Megaport{ "\xef\x96\xa3" };                     // U+f5a3
        constexpr static inline std::string_view Mendeley{ "\xef\x9e\xb3" };                     // U+f7b3
        constexpr static inline std::string_view Meta{ "\xee\x92\x9b" };                         // U+e49b
        constexpr static inline std::string_view Microblog{ "\xee\x80\x9a" };                    // U+e01a
        constexpr static inline std::string_view Microsoft{ "\xef\x8f\x8a" };                    // U+f3ca
        constexpr static inline std::string_view Mintbit{ "\xee\x98\xaf" };                      // U+e62f
        constexpr static inline std::string_view Mix{ "\xef\x8f\x8b" };                          // U+f3cb
        constexpr static inline std::string_view Mixcloud{ "\xef\x8a\x89" };                     // U+f289
        constexpr static inline std::string_view Mixer{ "\xee\x81\x96" };                        // U+e056
        constexpr static inline std::string_view Mizuni{ "\xef\x8f\x8c" };                       // U+f3cc
        constexpr static inline std::string_view Modx{ "\xef\x8a\x85" };                         // U+f285
        constexpr static inline std::string_view Monero{ "\xef\x8f\x90" };                       // U+f3d0
        constexpr static inline std::string_view Napster{ "\xef\x8f\x92" };                      // U+f3d2
        constexpr static inline std::string_view Neos{ "\xef\x98\x92" };                         // U+f612
        constexpr static inline std::string_view NfcDirectional{ "\xee\x94\xb0" };               // U+e530
        constexpr static inline std::string_view NfcSymbol{ "\xee\x94\xb1" };                    // U+e531
        constexpr static inline std::string_view Nimblr{ "\xef\x96\xa8" };                       // U+f5a8
        constexpr static inline std::string_view Node{ "\xef\x90\x99" };                         // U+f419
        constexpr static inline std::string_view NodeJs{ "\xef\x8f\x93" };                       // U+f3d3
        constexpr static inline std::string_view Npm{ "\xef\x8f\x94" };                          // U+f3d4
        constexpr static inline std::string_view Ns8{ "\xef\x8f\x95" };                          // U+f3d5
        constexpr static inline std::string_view Nutritionix{ "\xef\x8f\x96" };                  // U+f3d6
        constexpr static inline std::string_view OctopusDeploy{ "\xee\x82\x82" };                // U+e082
        constexpr static inline std::string_view Odnoklassniki{ "\xef\x89\xa3" };                // U+f263
        constexpr static inline std::string_view Odysee{ "\xee\x97\x86" };                       // U+e5c6
        constexpr static inline std::string_view OldRepublic{ "\xef\x94\x90" };                  // U+f510
        constexpr static inline std::string_view Opencart{ "\xef\x88\xbd" };                     // U+f23d
        constexpr static inline std::string_view Openid{ "\xef\x86\x9b" };                       // U+f19b
        constexpr static inline std::string_view Opensuse{ "\xee\x98\xab" };                     // U+e62b
        constexpr static inline std::string_view Opera{ "\xef\x89\xaa" };                        // U+f26a
        constexpr static inline std::string_view OptinMonster{ "\xef\x88\xbc" };                 // U+f23c
        constexpr static inline std::string_view Orcid{ "\xef\xa3\x92" };                        // U+f8d2
        constexpr static inline std::string_view Osi{ "\xef\x90\x9a" };                          // U+f41a
        constexpr static inline std::string_view Padlet{ "\xee\x92\xa0" };                       // U+e4a0
        constexpr static inline std::string_view Page4{ "\xef\x8f\x97" };                        // U+f3d7
        constexpr static inline std::string_view Pagelines{ "\xef\x86\x8c" };                    // U+f18c
        constexpr static inline std::string_view Palfed{ "\xef\x8f\x98" };                       // U+f3d8
        constexpr static inline std::string_view Patreon{ "\xef\x8f\x99" };                      // U+f3d9
        constexpr static inline std::string_view Paypal{ "\xef\x87\xad" };                       // U+f1ed
        constexpr static inline std::string_view Perbyte{ "\xee\x82\x83" };                      // U+e083
        constexpr static inline std::string_view Periscope{ "\xef\x8f\x9a" };                    // U+f3da
        constexpr static inline std::string_view Phabricator{ "\xef\x8f\x9b" };                  // U+f3db
        constexpr static inline std::string_view PhoenixFramework{ "\xef\x8f\x9c" };             // U+f3dc
        constexpr static inline std::string_view PhoenixSquadron{ "\xef\x94\x91" };              // U+f511
        constexpr static inline std::string_view Php{ "\xef\x91\x97" };                          // U+f457
        constexpr static inline std::string_view PiedPiper{ "\xef\x8a\xae" };                    // U+f2ae
        constexpr static inline std::string_view PiedPiperAlt{ "\xef\x86\xa8" };                 // U+f1a8
        constexpr static inline std::string_view PiedPiperHat{ "\xef\x93\xa5" };                 // U+f4e5
        constexpr static inline std::string_view PiedPiperPp{ "\xef\x86\xa7" };                  // U+f1a7
        constexpr static inline std::string_view Pinterest{ "\xef\x83\x92" };                    // U+f0d2
        constexpr static inline std::string_view PinterestP{ "\xef\x88\xb1" };                   // U+f231
        constexpr static inline std::string_view Pix{ "\xee\x90\xba" };                          // U+e43a
        constexpr static inline std::string_view Pixiv{ "\xee\x99\x80" };                        // U+e640
        constexpr static inline std::string_view Playstation{ "\xef\x8f\x9f" };                  // U+f3df
        constexpr static inline std::string_view ProductHunt{ "\xef\x8a\x88" };                  // U+f288
        constexpr static inline std::string_view Pushed{ "\xef\x8f\xa1" };                       // U+f3e1
        constexpr static inline std::string_view Python{ "\xef\x8f\xa2" };                       // U+f3e2
        constexpr static inline std::string_view Qq{ "\xef\x87\x96" };                           // U+f1d6
        constexpr static inline std::string_view Quinscape{ "\xef\x91\x99" };                    // U+f459
        constexpr static inline std::string_view Quora{ "\xef\x8b\x84" };                        // U+f2c4
        constexpr static inline std::string_view RProject{ "\xef\x93\xb7" };                     // U+f4f7
        constexpr static inline std::string_view RaspberryPi{ "\xef\x9e\xbb" };                  // U+f7bb
        constexpr static inline std::string_view Ravelry{ "\xef\x8b\x99" };                      // U+f2d9
        constexpr static inline std::string_view React{ "\xef\x90\x9b" };                        // U+f41b
        constexpr static inline std::string_view Reacteurope{ "\xef\x9d\x9d" };                  // U+f75d
        constexpr static inline std::string_view Readme{ "\xef\x93\x95" };                       // U+f4d5
        constexpr static inline std::string_view Rebel{ "\xef\x87\x90" };                        // U+f1d0
        constexpr static inline std::string_view RedRiver{ "\xef\x8f\xa3" };                     // U+f3e3
        constexpr static inline std::string_view Reddit{ "\xef\x86\xa1" };                       // U+f1a1
        constexpr static inline std::string_view RedditAlien{ "\xef\x8a\x81" };                  // U+f281
        constexpr static inline std::string_view Redhat{ "\xef\x9e\xbc" };                       // U+f7bc
        constexpr static inline std::string_view Renren{ "\xef\x86\x8b" };                       // U+f18b
        constexpr static inline std::string_view Replyd{ "\xef\x8f\xa6" };                       // U+f3e6
        constexpr static inline std::string_view Researchgate{ "\xef\x93\xb8" };                 // U+f4f8
        constexpr static inline std::string_view Resolving{ "\xef\x8f\xa7" };                    // U+f3e7
        constexpr static inline std::string_view Rev{ "\xef\x96\xb2" };                          // U+f5b2
        constexpr static inline std::string_view Rocketchat{ "\xef\x8f\xa8" };                   // U+f3e8
        constexpr static inline std::string_view Rockrms{ "\xef\x8f\xa9" };                      // U+f3e9
        constexpr static inline std::string_view Rust{ "\xee\x81\xba" };                         // U+e07a
        constexpr static inline std::string_view Safari{ "\xef\x89\xa7" };                       // U+f267
        constexpr static inline std::string_view Salesforce{ "\xef\xa0\xbb" };                   // U+f83b
        constexpr static inline std::string_view Sass{ "\xef\x90\x9e" };                         // U+f41e
        constexpr static inline std::string_view Schlix{ "\xef\x8f\xaa" };                       // U+f3ea
        constexpr static inline std::string_view Screenpal{ "\xee\x95\xb0" };                    // U+e570
        constexpr static inline std::string_view Scribd{ "\xef\x8a\x8a" };                       // U+f28a
        constexpr static inline std::string_view Searchengin{ "\xef\x8f\xab" };                  // U+f3eb
        constexpr static inline std::string_view Sellcast{ "\xef\x8b\x9a" };                     // U+f2da
        constexpr static inline std::string_view Sellsy{ "\xef\x88\x93" };                       // U+f213
        constexpr static inline std::string_view Servicestack{ "\xef\x8f\xac" };                 // U+f3ec
        constexpr static inline std::string_view Shirtsinbulk{ "\xef\x88\x94" };                 // U+f214
        constexpr static inline std::string_view Shoelace{ "\xee\x98\x8c" };                     // U+e60c
        constexpr static inline std::string_view Shopify{ "\xee\x81\x97" };                      // U+e057
        constexpr static inline std::string_view Shopware{ "\xef\x96\xb5" };                     // U+f5b5
        constexpr static inline std::string_view SignalMessenger{ "\xee\x99\xa3" };              // U+e663
        constexpr static inline std::string_view Simplybuilt{ "\xef\x88\x95" };                  // U+f215
        constexpr static inline std::string_view Sistrix{ "\xef\x8f\xae" };                      // U+f3ee
        constexpr static inline std::string_view Sith{ "\xef\x94\x92" };                         // U+f512
        constexpr static inline std::string_view Sitrox{ "\xee\x91\x8a" };                       // U+e44a
        constexpr static inline std::string_view Sketch{ "\xef\x9f\x86" };                       // U+f7c6
        constexpr static inline std::string_view Skyatlas{ "\xef\x88\x96" };                     // U+f216
        constexpr static inline std::string_view Skype{ "\xef\x85\xbe" };                        // U+f17e
        constexpr static inline std::string_view Slack{ "\xef\x86\x98" };                        // U+f198
        constexpr static inline std::string_view Slideshare{ "\xef\x87\xa7" };                   // U+f1e7
        constexpr static inline std::string_view Snapchat{ "\xef\x8a\xab" };                     // U+f2ab
        constexpr static inline std::string_view Soundcloud{ "\xef\x86\xbe" };                   // U+f1be
        constexpr static inline std::string_view Sourcetree{ "\xef\x9f\x93" };                   // U+f7d3
        constexpr static inline std::string_view SpaceAwesome{ "\xee\x96\xac" };                 // U+e5ac
        constexpr static inline std::string_view Speakap{ "\xef\x8f\xb3" };                      // U+f3f3
        constexpr static inline std::string_view SpeakerDeck{ "\xef\xa0\xbc" };                  // U+f83c
        constexpr static inline std::string_view Spotify{ "\xef\x86\xbc" };                      // U+f1bc
        constexpr static inline std::string_view SquareBehance{ "\xef\x86\xb5" };                // U+f1b5
        constexpr static inline std::string_view SquareDribbble{ "\xef\x8e\x97" };               // U+f397
        constexpr static inline std::string_view SquareFacebook{ "\xef\x82\x82" };               // U+f082
        constexpr static inline std::string_view SquareFontAwesome{ "\xee\x96\xad" };            // U+e5ad
        constexpr static inline std::string_view SquareFontAwesomeStroke{ "\xef\x8d\x9c" };      // U+f35c
        constexpr static inline std::string_view SquareGit{ "\xef\x87\x92" };                    // U+f1d2
        constexpr static inline std::string_view SquareGithub{ "\xef\x82\x92" };                 // U+f092
        constexpr static inline std::string_view SquareGitlab{ "\xee\x96\xae" };                 // U+e5ae
        constexpr static inline std::string_view SquareGooglePlus{ "\xef\x83\x94" };             // U+f0d4
        constexpr static inline std::string_view SquareHackerNews{ "\xef\x8e\xaf" };             // U+f3af
        constexpr static inline std::string_view SquareInstagram{ "\xee\x81\x95" };              // U+e055
        constexpr static inline std::string_view SquareJs{ "\xef\x8e\xb9" };                     // U+f3b9
        constexpr static inline std::string_view SquareLastfm{ "\xef\x88\x83" };                 // U+f203
        constexpr static inline std::string_view SquareLetterboxd{ "\xee\x98\xae" };             // U+e62e
        constexpr static inline std::string_view SquareOdnoklassniki{ "\xef\x89\xa4" };          // U+f264
        constexpr static inline std::string_view SquarePiedPiper{ "\xee\x80\x9e" };              // U+e01e
        constexpr static inline std::string_view SquarePinterest{ "\xef\x83\x93" };              // U+f0d3
        constexpr static inline std::string_view SquareReddit{ "\xef\x86\xa2" };                 // U+f1a2
        constexpr static inline std::string_view SquareSnapchat{ "\xef\x8a\xad" };               // U+f2ad
        constexpr static inline std::string_view SquareSteam{ "\xef\x86\xb7" };                  // U+f1b7
        constexpr static inline std::string_view SquareThreads{ "\xee\x98\x99" };                // U+e619
        constexpr static inline std::string_view SquareTumblr{ "\xef\x85\xb4" };                 // U+f174
        constexpr static inline std::string_view SquareTwitter{ "\xef\x82\x81" };                // U+f081
        constexpr static inline std::string_view SquareUpwork{ "\xee\x99\xbc" };                 // U+e67c
        constexpr static inline std::string_view SquareViadeo{ "\xef\x8a\xaa" };                 // U+f2aa
        constexpr static inline std::string_view SquareVimeo{ "\xef\x86\x94" };                  // U+f194
        constexpr static inline std::string_view SquareWebAwesome{ "\xee\x9a\x83" };             // U+e683
        constexpr static inline std::string_view SquareWebAwesomeStroke{ "\xee\x9a\x84" };       // U+e684
        constexpr static inline std::string_view SquareWhatsapp{ "\xef\x90\x8c" };               // U+f40c
        constexpr static inline std::string_view SquareXTwitter{ "\xee\x98\x9a" };               // U+e61a
        constexpr static inline std::string_view SquareXing{ "\xef\x85\xa9" };                   // U+f169
        constexpr static inline std::string_view SquareYoutube{ "\xef\x90\xb1" };                // U+f431
        constexpr static inline std::string_view Squarespace{ "\xef\x96\xbe" };                  // U+f5be
        constexpr static inline std::string_view StackExchange{ "\xef\x86\x8d" };                // U+f18d
        constexpr static inline std::string_view StackOverflow{ "\xef\x85\xac" };                // U+f16c
        constexpr static inline std::string_view Stackpath{ "\xef\xa1\x82" };                    // U+f842
        constexpr static inline std::string_view Staylinked{ "\xef\x8f\xb5" };                   // U+f3f5
        constexpr static inline std::string_view Steam{ "\xef\x86\xb6" };                        // U+f1b6
        constexpr static inline std::string_view SteamSymbol{ "\xef\x8f\xb6" };                  // U+f3f6
        constexpr static inline std::string_view StickerMule{ "\xef\x8f\xb7" };                  // U+f3f7
        constexpr static inline std::string_view Strava{ "\xef\x90\xa8" };                       // U+f428
        constexpr static inline std::string_view Stripe{ "\xef\x90\xa9" };                       // U+f429
        constexpr static inline std::string_view StripeS{ "\xef\x90\xaa" };                      // U+f42a
        constexpr static inline std::string_view Stubber{ "\xee\x97\x87" };                      // U+e5c7
        constexpr static inline std::string_view Studiovinari{ "\xef\x8f\xb8" };                 // U+f3f8
        constexpr static inline std::string_view Stumbleupon{ "\xef\x86\xa4" };                  // U+f1a4
        constexpr static inline std::string_view StumbleuponCircle{ "\xef\x86\xa3" };            // U+f1a3
        constexpr static inline std::string_view Superpowers{ "\xef\x8b\x9d" };                  // U+f2dd
        constexpr static inline std::string_view Supple{ "\xef\x8f\xb9" };                       // U+f3f9
        constexpr static inline std::string_view Suse{ "\xef\x9f\x96" };                         // U+f7d6
        constexpr static inline std::string_view Swift{ "\xef\xa3\xa1" };                        // U+f8e1
        constexpr static inline std::string_view Symfony{ "\xef\xa0\xbd" };                      // U+f83d
        constexpr static inline std::string_view Teamspeak{ "\xef\x93\xb9" };                    // U+f4f9
        constexpr static inline std::string_view Telegram{ "\xef\x8b\x86" };                     // U+f2c6
        constexpr static inline std::string_view TencentWeibo{ "\xef\x87\x95" };                 // U+f1d5
        constexpr static inline std::string_view TheRedYeti{ "\xef\x9a\x9d" };                   // U+f69d
        constexpr static inline std::string_view Themeco{ "\xef\x97\x86" };                      // U+f5c6
        constexpr static inline std::string_view Themeisle{ "\xef\x8a\xb2" };                    // U+f2b2
        constexpr static inline std::string_view ThinkPeaks{ "\xef\x9c\xb1" };                   // U+f731
        constexpr static inline std::string_view Threads{ "\xee\x98\x98" };                      // U+e618
        constexpr static inline std::string_view Tiktok{ "\xee\x81\xbb" };                       // U+e07b
        constexpr static inline std::string_view TradeFederation{ "\xef\x94\x93" };              // U+f513
        constexpr static inline std::string_view Trello{ "\xef\x86\x81" };                       // U+f181
        constexpr static inline std::string_view Tumblr{ "\xef\x85\xb3" };                       // U+f173
        constexpr static inline std::string_view Twitch{ "\xef\x87\xa8" };                       // U+f1e8
        constexpr static inline std::string_view Twitter{ "\xef\x82\x99" };                      // U+f099
        constexpr static inline std::string_view Typo3{ "\xef\x90\xab" };                        // U+f42b
        constexpr static inline std::string_view Uber{ "\xef\x90\x82" };                         // U+f402
        constexpr static inline std::string_view Ubuntu{ "\xef\x9f\x9f" };                       // U+f7df
        constexpr static inline std::string_view Uikit{ "\xef\x90\x83" };                        // U+f403
        constexpr static inline std::string_view Umbraco{ "\xef\xa3\xa8" };                      // U+f8e8
        constexpr static inline std::string_view Uncharted{ "\xee\x82\x84" };                    // U+e084
        constexpr static inline std::string_view Uniregistry{ "\xef\x90\x84" };                  // U+f404
        constexpr static inline std::string_view Unity{ "\xee\x81\x89" };                        // U+e049
        constexpr static inline std::string_view Unsplash{ "\xee\x81\xbc" };                     // U+e07c
        constexpr static inline std::string_view Untappd{ "\xef\x90\x85" };                      // U+f405
        constexpr static inline std::string_view Ups{ "\xef\x9f\xa0" };                          // U+f7e0
        constexpr static inline std::string_view Upwork{ "\xee\x99\x81" };                       // U+e641
        constexpr static inline std::string_view Usb{ "\xef\x8a\x87" };                          // U+f287
        constexpr static inline std::string_view Usps{ "\xef\x9f\xa1" };                         // U+f7e1
        constexpr static inline std::string_view Ussunnah{ "\xef\x90\x87" };                     // U+f407
        constexpr static inline std::string_view Vaadin{ "\xef\x90\x88" };                       // U+f408
        constexpr static inline std::string_view Viacoin{ "\xef\x88\xb7" };                      // U+f237
        constexpr static inline std::string_view Viadeo{ "\xef\x8a\xa9" };                       // U+f2a9
        constexpr static inline std::string_view Viber{ "\xef\x90\x89" };                        // U+f409
        constexpr static inline std::string_view Vimeo{ "\xef\x90\x8a" };                        // U+f40a
        constexpr static inline std::string_view VimeoV{ "\xef\x89\xbd" };                       // U+f27d
        constexpr static inline std::string_view Vine{ "\xef\x87\x8a" };                         // U+f1ca
        constexpr static inline std::string_view Vk{ "\xef\x86\x89" };                           // U+f189
        constexpr static inline std::string_view Vnv{ "\xef\x90\x8b" };                          // U+f40b
        constexpr static inline std::string_view Vuejs{ "\xef\x90\x9f" };                        // U+f41f
        constexpr static inline std::string_view WatchmanMonitoring{ "\xee\x82\x87" };           // U+e087
        constexpr static inline std::string_view Waze{ "\xef\xa0\xbf" };                         // U+f83f
        constexpr static inline std::string_view WebAwesome{ "\xee\x9a\x82" };                   // U+e682
        constexpr static inline std::string_view Webflow{ "\xee\x99\x9c" };                      // U+e65c
        constexpr static inline std::string_view Weebly{ "\xef\x97\x8c" };                       // U+f5cc
        constexpr static inline std::string_view Weibo{ "\xef\x86\x8a" };                        // U+f18a
        constexpr static inline std::string_view Weixin{ "\xef\x87\x97" };                       // U+f1d7
        constexpr static inline std::string_view Whatsapp{ "\xef\x88\xb2" };                     // U+f232
        constexpr static inline std::string_view Whmcs{ "\xef\x90\x8d" };                        // U+f40d
        constexpr static inline std::string_view WikipediaW{ "\xef\x89\xa6" };                   // U+f266
        constexpr static inline std::string_view Windows{ "\xef\x85\xba" };                      // U+f17a
        constexpr static inline std::string_view Wirsindhandwerk{ "\xee\x8b\x90" };              // U+e2d0
        constexpr static inline std::string_view Wix{ "\xef\x97\x8f" };                          // U+f5cf
        constexpr static inline std::string_view WizardsOfTheCoast{ "\xef\x9c\xb0" };            // U+f730
        constexpr static inline std::string_view Wodu{ "\xee\x82\x88" };                         // U+e088
        constexpr static inline std::string_view WolfPackBattalion{ "\xef\x94\x94" };            // U+f514
        constexpr static inline std::string_view Wordpress{ "\xef\x86\x9a" };                    // U+f19a
        constexpr static inline std::string_view WordpressSimple{ "\xef\x90\x91" };              // U+f411
        constexpr static inline std::string_view Wpbeginner{ "\xef\x8a\x97" };                   // U+f297
        constexpr static inline std::string_view Wpexplorer{ "\xef\x8b\x9e" };                   // U+f2de
        constexpr static inline std::string_view Wpforms{ "\xef\x8a\x98" };                      // U+f298
        constexpr static inline std::string_view Wpressr{ "\xef\x8f\xa4" };                      // U+f3e4
        constexpr static inline std::string_view XTwitter{ "\xee\x98\x9b" };                     // U+e61b
        constexpr static inline std::string_view Xbox{ "\xef\x90\x92" };                         // U+f412
        constexpr static inline std::string_view Xing{ "\xef\x85\xa8" };                         // U+f168
        constexpr static inline std::string_view YCombinator{ "\xef\x88\xbb" };                  // U+f23b
        constexpr static inline std::string_view Yahoo{ "\xef\x86\x9e" };                        // U+f19e
        constexpr static inline std::string_view Yammer{ "\xef\xa1\x80" };                       // U+f840
        constexpr static inline std::string_view Yandex{ "\xef\x90\x93" };                       // U+f413
        constexpr static inline std::string_view YandexInternational{ "\xef\x90\x94" };          // U+f414
        constexpr static inline std::string_view Yarn{ "\xef\x9f\xa3" };                         // U+f7e3
        constexpr static inline std::string_view Yelp{ "\xef\x87\xa9" };                         // U+f1e9
        constexpr static inline std::string_view Yoast{ "\xef\x8a\xb1" };                        // U+f2b1
        constexpr static inline std::string_view Youtube{ "\xef\x85\xa7" };                      // U+f167
        constexpr static inline std::string_view Zhihu{ "\xef\x98\xbf" };                        // U+f63f
    };
}
