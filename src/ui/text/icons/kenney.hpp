#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct Kenney
    {
        constexpr static inline std::string_view FILE_NAME_KI{ "kenney-icon-font.ttf" };

        constexpr static inline u16 IconMin{ 0xe900 };
        constexpr static inline u16 IconMax_16{ 0xe9e3 };
        constexpr static inline u16 IconMax{ 0xe9e3 };

        constexpr static inline std::string_view Home{ "\xee\xa4\x80" };                 // U+e900
        constexpr static inline std::string_view Adjust{ "\xee\xa4\x81" };               // U+e901
        constexpr static inline std::string_view Wrench{ "\xee\xa4\x82" };               // U+e902
        constexpr static inline std::string_view Cog{ "\xee\xa4\x83" };                  // U+e903
        constexpr static inline std::string_view Off{ "\xee\xa4\x84" };                  // U+e904
        constexpr static inline std::string_view Expand{ "\xee\xa4\x85" };               // U+e905
        constexpr static inline std::string_view Reduce{ "\xee\xa4\x86" };               // U+e906
        constexpr static inline std::string_view Movie{ "\xee\xa4\x87" };                // U+e907
        constexpr static inline std::string_view Flap{ "\xee\xa4\x88" };                 // U+e908
        constexpr static inline std::string_view ShoppingCart{ "\xee\xa4\x89" };         // U+e909
        constexpr static inline std::string_view ShoppingCase{ "\xee\xa4\x8a" };         // U+e90a
        constexpr static inline std::string_view External{ "\xee\xa4\x8b" };             // U+e90b
        constexpr static inline std::string_view Network{ "\xee\xa4\x8c" };              // U+e90c
        constexpr static inline std::string_view Check{ "\xee\xa4\x8d" };                // U+e90d
        constexpr static inline std::string_view Times{ "\xee\xa4\x8e" };                // U+e90e
        constexpr static inline std::string_view TimesCircle{ "\xee\xa4\x8f" };          // U+e90f
        constexpr static inline std::string_view Plus{ "\xee\xa4\x90" };                 // U+e910
        constexpr static inline std::string_view PlusCircle{ "\xee\xa4\x91" };           // U+e911
        constexpr static inline std::string_view Minus{ "\xee\xa4\x92" };                // U+e912
        constexpr static inline std::string_view MinusCircle{ "\xee\xa4\x93" };          // U+e913
        constexpr static inline std::string_view Info{ "\xee\xa4\x94" };                 // U+e914
        constexpr static inline std::string_view InfoCircle{ "\xee\xa4\x95" };           // U+e915
        constexpr static inline std::string_view Question{ "\xee\xa4\x96" };             // U+e916
        constexpr static inline std::string_view QuestionCircle{ "\xee\xa4\x97" };       // U+e917
        constexpr static inline std::string_view Exlamation{ "\xee\xa4\x98" };           // U+e918
        constexpr static inline std::string_view ExclamationCircle{ "\xee\xa4\x99" };    // U+e919
        constexpr static inline std::string_view ExclamationTriangle{ "\xee\xa4\x9a" };  // U+e91a
        constexpr static inline std::string_view PaintBrush{ "\xee\xa4\x9b" };           // U+e91b
        constexpr static inline std::string_view Pencil{ "\xee\xa4\x9c" };               // U+e91c
        constexpr static inline std::string_view Checkbox{ "\xee\xa4\x9d" };             // U+e91d
        constexpr static inline std::string_view CheckboxChecked{ "\xee\xa4\x9e" };      // U+e91e
        constexpr static inline std::string_view Radio{ "\xee\xa4\x9f" };                // U+e91f
        constexpr static inline std::string_view RadioChecked{ "\xee\xa4\xa0" };         // U+e920
        constexpr static inline std::string_view SortVertical{ "\xee\xa4\xa1" };         // U+e921
        constexpr static inline std::string_view SortHorizontal{ "\xee\xa4\xa2" };       // U+e922
        constexpr static inline std::string_view Grid{ "\xee\xa4\xa3" };                 // U+e923
        constexpr static inline std::string_view List{ "\xee\xa4\xa4" };                 // U+e924
        constexpr static inline std::string_view Rows{ "\xee\xa4\xa5" };                 // U+e925
        constexpr static inline std::string_view Cells{ "\xee\xa4\xa6" };                // U+e926
        constexpr static inline std::string_view SignalLow{ "\xee\xa4\xa7" };            // U+e927
        constexpr static inline std::string_view SignalMedium{ "\xee\xa4\xa8" };         // U+e928
        constexpr static inline std::string_view SignalHigh{ "\xee\xa4\xa9" };           // U+e929
        constexpr static inline std::string_view Trash{ "\xee\xa4\xaa" };                // U+e92a
        constexpr static inline std::string_view TrashAlt{ "\xee\xa4\xab" };             // U+e92b
        constexpr static inline std::string_view ReloadInverse{ "\xee\xa4\xac" };        // U+e92c
        constexpr static inline std::string_view Reload{ "\xee\xa4\xad" };               // U+e92d
        constexpr static inline std::string_view Top{ "\xee\xa4\xae" };                  // U+e92e
        constexpr static inline std::string_view Bottom{ "\xee\xa4\xaf" };               // U+e92f
        constexpr static inline std::string_view Upload{ "\xee\xa4\xb0" };               // U+e930
        constexpr static inline std::string_view Download{ "\xee\xa4\xb1" };             // U+e931
        constexpr static inline std::string_view Cloud{ "\xee\xa4\xb2" };                // U+e932
        constexpr static inline std::string_view CloudUpload{ "\xee\xa4\xb3" };          // U+e933
        constexpr static inline std::string_view CloudDownload{ "\xee\xa4\xb4" };        // U+e934
        constexpr static inline std::string_view Search{ "\xee\xa4\xb5" };               // U+e935
        constexpr static inline std::string_view SearchPlus{ "\xee\xa4\xb6" };           // U+e936
        constexpr static inline std::string_view SearchMinus{ "\xee\xa4\xb7" };          // U+e937
        constexpr static inline std::string_view SearchEqual{ "\xee\xa4\xb8" };          // U+e938
        constexpr static inline std::string_view Lock{ "\xee\xa4\xb9" };                 // U+e939
        constexpr static inline std::string_view Unlock{ "\xee\xa4\xba" };               // U+e93a
        constexpr static inline std::string_view User{ "\xee\xa4\xbb" };                 // U+e93b
        constexpr static inline std::string_view Users{ "\xee\xa4\xbc" };                // U+e93c
        constexpr static inline std::string_view UsersAlt{ "\xee\xa4\xbd" };             // U+e93d
        constexpr static inline std::string_view SignIn{ "\xee\xa4\xbe" };               // U+e93e
        constexpr static inline std::string_view SignInInverse{ "\xee\xa4\xbf" };        // U+e93f
        constexpr static inline std::string_view SignOut{ "\xee\xa5\x80" };              // U+e940
        constexpr static inline std::string_view SignOutInverse{ "\xee\xa5\x81" };       // U+e941
        constexpr static inline std::string_view ArrowTop{ "\xee\xa5\x82" };             // U+e942
        constexpr static inline std::string_view ArrowRight{ "\xee\xa5\x83" };           // U+e943
        constexpr static inline std::string_view ArrowBottom{ "\xee\xa5\x84" };          // U+e944
        constexpr static inline std::string_view ArrowLeft{ "\xee\xa5\x85" };            // U+e945
        constexpr static inline std::string_view ArrowTopLeft{ "\xee\xa5\x86" };         // U+e946
        constexpr static inline std::string_view ArrowTopRight{ "\xee\xa5\x87" };        // U+e947
        constexpr static inline std::string_view ArrowBottomRight{ "\xee\xa5\x88" };     // U+e948
        constexpr static inline std::string_view ArrowBottomLeft{ "\xee\xa5\x89" };      // U+e949
        constexpr static inline std::string_view CaretTop{ "\xee\xa5\x8a" };             // U+e94a
        constexpr static inline std::string_view CaretRight{ "\xee\xa5\x8b" };           // U+e94b
        constexpr static inline std::string_view CaretBottom{ "\xee\xa5\x8c" };          // U+e94c
        constexpr static inline std::string_view CaretLeft{ "\xee\xa5\x8d" };            // U+e94d
        constexpr static inline std::string_view NextAlt{ "\xee\xa5\x8e" };              // U+e94e
        constexpr static inline std::string_view Next{ "\xee\xa5\x8f" };                 // U+e94f
        constexpr static inline std::string_view Previous{ "\xee\xa5\x90" };             // U+e950
        constexpr static inline std::string_view PreviousAlt{ "\xee\xa5\x91" };          // U+e951
        constexpr static inline std::string_view Fill{ "\xee\xa5\x92" };                 // U+e952
        constexpr static inline std::string_view Eraser{ "\xee\xa5\x93" };               // U+e953
        constexpr static inline std::string_view Save{ "\xee\xa5\x94" };                 // U+e954
        constexpr static inline std::string_view StepBackward{ "\xee\xa5\x95" };         // U+e955
        constexpr static inline std::string_view Backward{ "\xee\xa5\x96" };             // U+e956
        constexpr static inline std::string_view Pause{ "\xee\xa5\x97" };                // U+e957
        constexpr static inline std::string_view Forward{ "\xee\xa5\x98" };              // U+e958
        constexpr static inline std::string_view StepForward{ "\xee\xa5\x99" };          // U+e959
        constexpr static inline std::string_view Stop{ "\xee\xa5\x9a" };                 // U+e95a
        constexpr static inline std::string_view Rec{ "\xee\xa5\x9b" };                  // U+e95b
        constexpr static inline std::string_view Cursor{ "\xee\xa5\x9c" };               // U+e95c
        constexpr static inline std::string_view Pointer{ "\xee\xa5\x9d" };              // U+e95d
        constexpr static inline std::string_view Exit{ "\xee\xa5\x9e" };                 // U+e95e
        constexpr static inline std::string_view Figure{ "\xee\xa5\x9f" };               // U+e95f
        constexpr static inline std::string_view Car{ "\xee\xa5\xa0" };                  // U+e960
        constexpr static inline std::string_view Coin{ "\xee\xa5\xa1" };                 // U+e961
        constexpr static inline std::string_view Key{ "\xee\xa5\xa2" };                  // U+e962
        constexpr static inline std::string_view Cub{ "\xee\xa5\xa3" };                  // U+e963
        constexpr static inline std::string_view Diamond{ "\xee\xa5\xa4" };              // U+e964
        constexpr static inline std::string_view Badge{ "\xee\xa5\xa5" };                // U+e965
        constexpr static inline std::string_view BadgeAlt{ "\xee\xa5\xa6" };             // U+e966
        constexpr static inline std::string_view Podium{ "\xee\xa5\xa7" };               // U+e967
        constexpr static inline std::string_view PodiumAlt{ "\xee\xa5\xa8" };            // U+e968
        constexpr static inline std::string_view Flag{ "\xee\xa5\xa9" };                 // U+e969
        constexpr static inline std::string_view Fist{ "\xee\xa5\xaa" };                 // U+e96a
        constexpr static inline std::string_view FistCircle{ "\xee\xa5\xab" };           // U+e96b
        constexpr static inline std::string_view Heart{ "\xee\xa5\xac" };                // U+e96c
        constexpr static inline std::string_view HeartHalf{ "\xee\xa5\xad" };            // U+e96d
        constexpr static inline std::string_view HeartHalfO{ "\xee\xa5\xae" };           // U+e96e
        constexpr static inline std::string_view HeartO{ "\xee\xa5\xaf" };               // U+e96f
        constexpr static inline std::string_view Star{ "\xee\xa5\xb0" };                 // U+e970
        constexpr static inline std::string_view StarHalf{ "\xee\xa5\xb1" };             // U+e971
        constexpr static inline std::string_view StarHalfO{ "\xee\xa5\xb2" };            // U+e972
        constexpr static inline std::string_view StarO{ "\xee\xa5\xb3" };                // U+e973
        constexpr static inline std::string_view ButtonB{ "\xee\xa5\xb4" };              // U+e974
        constexpr static inline std::string_view MusicOn{ "\xee\xa5\xb5" };              // U+e975
        constexpr static inline std::string_view MusicOff{ "\xee\xa5\xb6" };             // U+e976
        constexpr static inline std::string_view SoundOn{ "\xee\xa5\xb7" };              // U+e977
        constexpr static inline std::string_view SoundOff{ "\xee\xa5\xb8" };             // U+e978
        constexpr static inline std::string_view SoundOffAlt{ "\xee\xa5\xb9" };          // U+e979
        constexpr static inline std::string_view Robot{ "\xee\xa5\xba" };                // U+e97a
        constexpr static inline std::string_view Computer{ "\xee\xa5\xbb" };             // U+e97b
        constexpr static inline std::string_view Tablet{ "\xee\xa5\xbc" };               // U+e97c
        constexpr static inline std::string_view Smartphone{ "\xee\xa5\xbd" };           // U+e97d
        constexpr static inline std::string_view Device{ "\xee\xa5\xbe" };               // U+e97e
        constexpr static inline std::string_view DeviceTiltLeft{ "\xee\xa5\xbf" };       // U+e97f
        constexpr static inline std::string_view DeviceTiltRight{ "\xee\xa6\x80" };      // U+e980
        constexpr static inline std::string_view Gamepad{ "\xee\xa6\x81" };              // U+e981
        constexpr static inline std::string_view GamepadAlt{ "\xee\xa6\x82" };           // U+e982
        constexpr static inline std::string_view GamepadTiltLeft{ "\xee\xa6\x83" };      // U+e983
        constexpr static inline std::string_view GamepadTiltRight{ "\xee\xa6\x84" };     // U+e984
        constexpr static inline std::string_view PlayerOne{ "\xee\xa6\x85" };            // U+e985
        constexpr static inline std::string_view PlayerTwo{ "\xee\xa6\x86" };            // U+e986
        constexpr static inline std::string_view PlayerThree{ "\xee\xa6\x87" };          // U+e987
        constexpr static inline std::string_view PlayerFour{ "\xee\xa6\x88" };           // U+e988
        constexpr static inline std::string_view Joystick{ "\xee\xa6\x89" };             // U+e989
        constexpr static inline std::string_view JoystickAlt{ "\xee\xa6\x8a" };          // U+e98a
        constexpr static inline std::string_view JoystickLeft{ "\xee\xa6\x8b" };         // U+e98b
        constexpr static inline std::string_view JoystickRight{ "\xee\xa6\x8c" };        // U+e98c
        constexpr static inline std::string_view MouseAlt{ "\xee\xa6\x8d" };             // U+e98d
        constexpr static inline std::string_view Mouse{ "\xee\xa6\x8e" };                // U+e98e
        constexpr static inline std::string_view MouseLeftButton{ "\xee\xa6\x8f" };      // U+e98f
        constexpr static inline std::string_view MouseRightButton{ "\xee\xa6\x90" };     // U+e990
        constexpr static inline std::string_view ButtonOne{ "\xee\xa6\x91" };            // U+e991
        constexpr static inline std::string_view ButtonTwo{ "\xee\xa6\x92" };            // U+e992
        constexpr static inline std::string_view ButtonThree{ "\xee\xa6\x93" };          // U+e993
        constexpr static inline std::string_view ButtonA{ "\xee\xa6\x94" };              // U+e994
        constexpr static inline std::string_view ButtonX{ "\xee\xa6\x95" };              // U+e995
        constexpr static inline std::string_view ButonY{ "\xee\xa6\x96" };               // U+e996
        constexpr static inline std::string_view ButtonTimes{ "\xee\xa6\x97" };          // U+e997
        constexpr static inline std::string_view ButtonSquare{ "\xee\xa6\x98" };         // U+e998
        constexpr static inline std::string_view ButtonCircle{ "\xee\xa6\x99" };         // U+e999
        constexpr static inline std::string_view ButtonTriangle{ "\xee\xa6\x9a" };       // U+e99a
        constexpr static inline std::string_view ButtonLeft{ "\xee\xa6\x9b" };           // U+e99b
        constexpr static inline std::string_view ButtonL{ "\xee\xa6\x9c" };              // U+e99c
        constexpr static inline std::string_view ButtonL1{ "\xee\xa6\x9d" };             // U+e99d
        constexpr static inline std::string_view ButtonL2{ "\xee\xa6\x9e" };             // U+e99e
        constexpr static inline std::string_view ButtonLb{ "\xee\xa6\x9f" };             // U+e99f
        constexpr static inline std::string_view ButtonLt{ "\xee\xa6\xa0" };             // U+e9a0
        constexpr static inline std::string_view ButtonRt{ "\xee\xa6\xa1" };             // U+e9a1
        constexpr static inline std::string_view ButtonRb{ "\xee\xa6\xa2" };             // U+e9a2
        constexpr static inline std::string_view ButtonR2{ "\xee\xa6\xa3" };             // U+e9a3
        constexpr static inline std::string_view ButtonR1{ "\xee\xa6\xa4" };             // U+e9a4
        constexpr static inline std::string_view ButtonR{ "\xee\xa6\xa5" };              // U+e9a5
        constexpr static inline std::string_view ButtonRight{ "\xee\xa6\xa6" };          // U+e9a6
        constexpr static inline std::string_view ButtonEmpty{ "\xee\xa6\xa7" };          // U+e9a7
        constexpr static inline std::string_view ButtonStart{ "\xee\xa6\xa8" };          // U+e9a8
        constexpr static inline std::string_view ButtonSelect{ "\xee\xa6\xa9" };         // U+e9a9
        constexpr static inline std::string_view Dpad{ "\xee\xa6\xaa" };                 // U+e9aa
        constexpr static inline std::string_view DpadAlt{ "\xee\xa6\xab" };              // U+e9ab
        constexpr static inline std::string_view DpadTop{ "\xee\xa6\xac" };              // U+e9ac
        constexpr static inline std::string_view DpadRight{ "\xee\xa6\xad" };            // U+e9ad
        constexpr static inline std::string_view DpadBottom{ "\xee\xa6\xae" };           // U+e9ae
        constexpr static inline std::string_view DpadLeft{ "\xee\xa6\xaf" };             // U+e9af
        constexpr static inline std::string_view KeyLarge{ "\xee\xa6\xb0" };             // U+e9b0
        constexpr static inline std::string_view KeyLarge_3d{ "\xee\xa6\xb1" };          // U+e9b1
        constexpr static inline std::string_view KeySmall{ "\xee\xa6\xb2" };             // U+e9b2
        constexpr static inline std::string_view KeySmall_3d{ "\xee\xa6\xb3" };          // U+e9b3
        constexpr static inline std::string_view StickLeftTop{ "\xee\xa6\xb4" };         // U+e9b4
        constexpr static inline std::string_view StickLeftSide{ "\xee\xa6\xb5" };        // U+e9b5
        constexpr static inline std::string_view StickRightSide{ "\xee\xa6\xb6" };       // U+e9b6
        constexpr static inline std::string_view StickRightTop{ "\xee\xa6\xb7" };        // U+e9b7
        constexpr static inline std::string_view StickSide{ "\xee\xa6\xb8" };            // U+e9b8
        constexpr static inline std::string_view StickTiltLeft{ "\xee\xa6\xb9" };        // U+e9b9
        constexpr static inline std::string_view StickTiltRight{ "\xee\xa6\xba" };       // U+e9ba
        constexpr static inline std::string_view MoveBl{ "\xee\xa6\xbb" };               // U+e9bb
        constexpr static inline std::string_view MoveBr{ "\xee\xa6\xbc" };               // U+e9bc
        constexpr static inline std::string_view MoveBt{ "\xee\xa6\xbd" };               // U+e9bd
        constexpr static inline std::string_view MoveBtAlt{ "\xee\xa6\xbe" };            // U+e9be
        constexpr static inline std::string_view MoveLb{ "\xee\xa6\xbf" };               // U+e9bf
        constexpr static inline std::string_view MoveLr{ "\xee\xa7\x80" };               // U+e9c0
        constexpr static inline std::string_view MoveLrAlt{ "\xee\xa7\x81" };            // U+e9c1
        constexpr static inline std::string_view MoveLt{ "\xee\xa7\x82" };               // U+e9c2
        constexpr static inline std::string_view MoveRb{ "\xee\xa7\x83" };               // U+e9c3
        constexpr static inline std::string_view MoveRl{ "\xee\xa7\x84" };               // U+e9c4
        constexpr static inline std::string_view MoveRlAlt{ "\xee\xa7\x85" };            // U+e9c5
        constexpr static inline std::string_view MoveRt{ "\xee\xa7\x86" };               // U+e9c6
        constexpr static inline std::string_view MoveTb{ "\xee\xa7\x87" };               // U+e9c7
        constexpr static inline std::string_view MoveTbAlt{ "\xee\xa7\x88" };            // U+e9c8
        constexpr static inline std::string_view MoveTl{ "\xee\xa7\x89" };               // U+e9c9
        constexpr static inline std::string_view MoveTr{ "\xee\xa7\x8a" };               // U+e9ca
        constexpr static inline std::string_view StickMoveBl{ "\xee\xa7\x8b" };          // U+e9cb
        constexpr static inline std::string_view StickMoveBr{ "\xee\xa7\x8c" };          // U+e9cc
        constexpr static inline std::string_view StickMoveBt{ "\xee\xa7\x8d" };          // U+e9cd
        constexpr static inline std::string_view StickMoveBtAlt{ "\xee\xa7\x8e" };       // U+e9ce
        constexpr static inline std::string_view StickMoveLb{ "\xee\xa7\x8f" };          // U+e9cf
        constexpr static inline std::string_view StickMoveLr{ "\xee\xa7\x90" };          // U+e9d0
        constexpr static inline std::string_view StickMoveLrAlt{ "\xee\xa7\x91" };       // U+e9d1
        constexpr static inline std::string_view StickMoveLt{ "\xee\xa7\x92" };          // U+e9d2
        constexpr static inline std::string_view StickMoveRb{ "\xee\xa7\x93" };          // U+e9d3
        constexpr static inline std::string_view StickMoveRl{ "\xee\xa7\x94" };          // U+e9d4
        constexpr static inline std::string_view StickMoveRlAlt{ "\xee\xa7\x95" };       // U+e9d5
        constexpr static inline std::string_view StickMoveRt{ "\xee\xa7\x96" };          // U+e9d6
        constexpr static inline std::string_view StickMoveTb{ "\xee\xa7\x97" };          // U+e9d7
        constexpr static inline std::string_view StickMoveTbAlt{ "\xee\xa7\x98" };       // U+e9d8
        constexpr static inline std::string_view StickMoveTl{ "\xee\xa7\x99" };          // U+e9d9
        constexpr static inline std::string_view StickMoveTr{ "\xee\xa7\x9a" };          // U+e9da
        constexpr static inline std::string_view Github{ "\xee\xa7\x9b" };               // U+e9db
        constexpr static inline std::string_view GithubAlt{ "\xee\xa7\x9c" };            // U+e9dc
        constexpr static inline std::string_view Twitter{ "\xee\xa7\x9d" };              // U+e9dd
        constexpr static inline std::string_view Facebook{ "\xee\xa7\x9e" };             // U+e9de
        constexpr static inline std::string_view GooglePlus{ "\xee\xa7\x9f" };           // U+e9df
        constexpr static inline std::string_view Youtube{ "\xee\xa7\xa2" };              // U+e9e2
        constexpr static inline std::string_view WeHeart{ "\xee\xa7\xa3" };              // U+e9e3
        constexpr static inline std::string_view Wolfcms{ "\xee\xa7\xa0" };              // U+e9e0
        constexpr static inline std::string_view WolfcmsAlt{ "\xee\xa7\xa1" };           // U+e9e1
    };
}
