#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct MaterialDesign
    {
        constexpr static inline std::string_view FileName{ "MaterialIcons-Regular.ttf" };

        constexpr static inline u16 IconMin{ 0xe000 };
        constexpr static inline u16 IconMax16{ 0xf8ff };
        constexpr static inline u16 IconMax{ 0x10fffd };

        constexpr static inline std::string_view MI10k{ "\xee\xa5\x91" };                       // U+e951
        constexpr static inline std::string_view MI10mp{ "\xee\xa5\x92" };                      // U+e952
        constexpr static inline std::string_view MI11mp{ "\xee\xa5\x93" };                      // U+e953
        constexpr static inline std::string_view MI123{ "\xee\xae\x8d" };                       // U+eb8d
        constexpr static inline std::string_view MI12mp{ "\xee\xa5\x94" };                      // U+e954
        constexpr static inline std::string_view MI13mp{ "\xee\xa5\x95" };                      // U+e955
        constexpr static inline std::string_view MI14mp{ "\xee\xa5\x96" };                      // U+e956
        constexpr static inline std::string_view MI15mp{ "\xee\xa5\x97" };                      // U+e957
        constexpr static inline std::string_view MI16mp{ "\xee\xa5\x98" };                      // U+e958
        constexpr static inline std::string_view MI17mp{ "\xee\xa5\x99" };                      // U+e959
        constexpr static inline std::string_view MI18UpRating{ "\xef\xa3\xbd" };                // U+f8fd
        constexpr static inline std::string_view MI18mp{ "\xee\xa5\x9a" };                      // U+e95a
        constexpr static inline std::string_view MI19mp{ "\xee\xa5\x9b" };                      // U+e95b
        constexpr static inline std::string_view MI1k{ "\xee\xa5\x9c" };                        // U+e95c
        constexpr static inline std::string_view MI1kPlus{ "\xee\xa5\x9d" };                    // U+e95d
        constexpr static inline std::string_view MI1xMobiledata{ "\xee\xbf\x8d" };              // U+efcd
        constexpr static inline std::string_view MI20mp{ "\xee\xa5\x9e" };                      // U+e95e
        constexpr static inline std::string_view MI21mp{ "\xee\xa5\x9f" };                      // U+e95f
        constexpr static inline std::string_view MI22mp{ "\xee\xa5\xa0" };                      // U+e960
        constexpr static inline std::string_view MI23mp{ "\xee\xa5\xa1" };                      // U+e961
        constexpr static inline std::string_view MI24mp{ "\xee\xa5\xa2" };                      // U+e962
        constexpr static inline std::string_view MI2k{ "\xee\xa5\xa3" };                        // U+e963
        constexpr static inline std::string_view MI2kPlus{ "\xee\xa5\xa4" };                    // U+e964
        constexpr static inline std::string_view MI2mp{ "\xee\xa5\xa5" };                       // U+e965
        constexpr static inline std::string_view MI30fps{ "\xee\xbf\x8e" };                     // U+efce
        constexpr static inline std::string_view MI30fpsSelect{ "\xee\xbf\x8f" };               // U+efcf
        constexpr static inline std::string_view MI360{ "\xee\x95\xb7" };                       // U+e577
        constexpr static inline std::string_view MI3dRotation{ "\xee\xa1\x8d" };                // U+e84d
        constexpr static inline std::string_view MI3gMobiledata{ "\xee\xbf\x90" };              // U+efd0
        constexpr static inline std::string_view MI3k{ "\xee\xa5\xa6" };                        // U+e966
        constexpr static inline std::string_view MI3kPlus{ "\xee\xa5\xa7" };                    // U+e967
        constexpr static inline std::string_view MI3mp{ "\xee\xa5\xa8" };                       // U+e968
        constexpr static inline std::string_view MI3p{ "\xee\xbf\x91" };                        // U+efd1
        constexpr static inline std::string_view MI4gMobiledata{ "\xee\xbf\x92" };              // U+efd2
        constexpr static inline std::string_view MI4gPlusMobiledata{ "\xee\xbf\x93" };          // U+efd3
        constexpr static inline std::string_view MI4k{ "\xee\x81\xb2" };                        // U+e072
        constexpr static inline std::string_view MI4kPlus{ "\xee\xa5\xa9" };                    // U+e969
        constexpr static inline std::string_view MI4mp{ "\xee\xa5\xaa" };                       // U+e96a
        constexpr static inline std::string_view MI5g{ "\xee\xbc\xb8" };                        // U+ef38
        constexpr static inline std::string_view MI5k{ "\xee\xa5\xab" };                        // U+e96b
        constexpr static inline std::string_view MI5kPlus{ "\xee\xa5\xac" };                    // U+e96c
        constexpr static inline std::string_view MI5mp{ "\xee\xa5\xad" };                       // U+e96d
        constexpr static inline std::string_view MI60fps{ "\xee\xbf\x94" };                     // U+efd4
        constexpr static inline std::string_view MI60fpsSelect{ "\xee\xbf\x95" };               // U+efd5
        constexpr static inline std::string_view MI6FtApart{ "\xef\x88\x9e" };                  // U+f21e
        constexpr static inline std::string_view MI6k{ "\xee\xa5\xae" };                        // U+e96e
        constexpr static inline std::string_view MI6kPlus{ "\xee\xa5\xaf" };                    // U+e96f
        constexpr static inline std::string_view MI6mp{ "\xee\xa5\xb0" };                       // U+e970
        constexpr static inline std::string_view MI7k{ "\xee\xa5\xb1" };                        // U+e971
        constexpr static inline std::string_view MI7kPlus{ "\xee\xa5\xb2" };                    // U+e972
        constexpr static inline std::string_view MI7mp{ "\xee\xa5\xb3" };                       // U+e973
        constexpr static inline std::string_view MI8k{ "\xee\xa5\xb4" };                        // U+e974
        constexpr static inline std::string_view MI8kPlus{ "\xee\xa5\xb5" };                    // U+e975
        constexpr static inline std::string_view MI8mp{ "\xee\xa5\xb6" };                       // U+e976
        constexpr static inline std::string_view MI9k{ "\xee\xa5\xb7" };                        // U+e977
        constexpr static inline std::string_view MI9kPlus{ "\xee\xa5\xb8" };                    // U+e978
        constexpr static inline std::string_view MI9mp{ "\xee\xa5\xb9" };                       // U+e979
        constexpr static inline std::string_view Abc{ "\xee\xae\x94" };                         // U+eb94
        constexpr static inline std::string_view AcUnit{ "\xee\xac\xbb" };                      // U+eb3b
        constexpr static inline std::string_view AccessAlarm{ "\xee\x86\x90" };                 // U+e190
        constexpr static inline std::string_view AccessAlarms{ "\xee\x86\x91" };                // U+e191
        constexpr static inline std::string_view AccessTime{ "\xee\x86\x92" };                  // U+e192
        constexpr static inline std::string_view AccessTimeFilled{ "\xee\xbf\x96" };            // U+efd6
        constexpr static inline std::string_view Accessibility{ "\xee\xa1\x8e" };               // U+e84e
        constexpr static inline std::string_view AccessibilityNew{ "\xee\xa4\xac" };            // U+e92c
        constexpr static inline std::string_view Accessible{ "\xee\xa4\x94" };                  // U+e914
        constexpr static inline std::string_view AccessibleForward{ "\xee\xa4\xb4" };           // U+e934
        constexpr static inline std::string_view AccountBalance{ "\xee\xa1\x8f" };              // U+e84f
        constexpr static inline std::string_view AccountBalanceWallet{ "\xee\xa1\x90" };        // U+e850
        constexpr static inline std::string_view AccountBox{ "\xee\xa1\x91" };                  // U+e851
        constexpr static inline std::string_view AccountCircle{ "\xee\xa1\x93" };               // U+e853
        constexpr static inline std::string_view AccountTree{ "\xee\xa5\xba" };                 // U+e97a
        constexpr static inline std::string_view AdUnits{ "\xee\xbc\xb9" };                     // U+ef39
        constexpr static inline std::string_view Adb{ "\xee\x98\x8e" };                         // U+e60e
        constexpr static inline std::string_view Add{ "\xee\x85\x85" };                         // U+e145
        constexpr static inline std::string_view AddAPhoto{ "\xee\x90\xb9" };                   // U+e439
        constexpr static inline std::string_view AddAlarm{ "\xee\x86\x93" };                    // U+e193
        constexpr static inline std::string_view AddAlert{ "\xee\x80\x83" };                    // U+e003
        constexpr static inline std::string_view AddBox{ "\xee\x85\x86" };                      // U+e146
        constexpr static inline std::string_view AddBusiness{ "\xee\x9c\xa9" };                 // U+e729
        constexpr static inline std::string_view AddCall{ "\xee\x83\xa8" };                     // U+e0e8
        constexpr static inline std::string_view AddCard{ "\xee\xae\x86" };                     // U+eb86
        constexpr static inline std::string_view AddChart{ "\xee\xa5\xbb" };                    // U+e97b
        constexpr static inline std::string_view AddCircle{ "\xee\x85\x87" };                   // U+e147
        constexpr static inline std::string_view AddCircleOutline{ "\xee\x85\x88" };            // U+e148
        constexpr static inline std::string_view AddComment{ "\xee\x89\xa6" };                  // U+e266
        constexpr static inline std::string_view AddHome{ "\xef\xa3\xab" };                     // U+f8eb
        constexpr static inline std::string_view AddHomeWork{ "\xef\xa3\xad" };                 // U+f8ed
        constexpr static inline std::string_view AddIcCall{ "\xee\xa5\xbc" };                   // U+e97c
        constexpr static inline std::string_view AddLink{ "\xee\x85\xb8" };                     // U+e178
        constexpr static inline std::string_view AddLocation{ "\xee\x95\xa7" };                 // U+e567
        constexpr static inline std::string_view AddLocationAlt{ "\xee\xbc\xba" };              // U+ef3a
        constexpr static inline std::string_view AddModerator{ "\xee\xa5\xbd" };                // U+e97d
        constexpr static inline std::string_view AddPhotoAlternate{ "\xee\x90\xbe" };           // U+e43e
        constexpr static inline std::string_view AddReaction{ "\xee\x87\x93" };                 // U+e1d3
        constexpr static inline std::string_view AddRoad{ "\xee\xbc\xbb" };                     // U+ef3b
        constexpr static inline std::string_view AddShoppingCart{ "\xee\xa1\x94" };             // U+e854
        constexpr static inline std::string_view AddTask{ "\xef\x88\xba" };                     // U+f23a
        constexpr static inline std::string_view AddToDrive{ "\xee\x99\x9c" };                  // U+e65c
        constexpr static inline std::string_view AddToHomeScreen{ "\xee\x87\xbe" };             // U+e1fe
        constexpr static inline std::string_view AddToPhotos{ "\xee\x8e\x9d" };                 // U+e39d
        constexpr static inline std::string_view AddToQueue{ "\xee\x81\x9c" };                  // U+e05c
        constexpr static inline std::string_view Addchart{ "\xee\xbc\xbc" };                    // U+ef3c
        constexpr static inline std::string_view AdfScanner{ "\xee\xab\x9a" };                  // U+eada
        constexpr static inline std::string_view Adjust{ "\xee\x8e\x9e" };                      // U+e39e
        constexpr static inline std::string_view AdminPanelSettings{ "\xee\xbc\xbd" };          // U+ef3d
        constexpr static inline std::string_view Adobe{ "\xee\xaa\x96" };                       // U+ea96
        constexpr static inline std::string_view AdsClick{ "\xee\x9d\xa2" };                    // U+e762
        constexpr static inline std::string_view Agriculture{ "\xee\xa9\xb9" };                 // U+ea79
        constexpr static inline std::string_view Air{ "\xee\xbf\x98" };                         // U+efd8
        constexpr static inline std::string_view AirlineSeatFlat{ "\xee\x98\xb0" };             // U+e630
        constexpr static inline std::string_view AirlineSeatFlatAngled{ "\xee\x98\xb1" };       // U+e631
        constexpr static inline std::string_view AirlineSeatIndividualSuite{ "\xee\x98\xb2" };  // U+e632
        constexpr static inline std::string_view AirlineSeatLegroomExtra{ "\xee\x98\xb3" };     // U+e633
        constexpr static inline std::string_view AirlineSeatLegroomNormal{ "\xee\x98\xb4" };    // U+e634
        constexpr static inline std::string_view AirlineSeatLegroomReduced{ "\xee\x98\xb5" };   // U+e635
        constexpr static inline std::string_view AirlineSeatReclineExtra{ "\xee\x98\xb6" };     // U+e636
        constexpr static inline std::string_view AirlineSeatReclineNormal{ "\xee\x98\xb7" };    // U+e637
        constexpr static inline std::string_view AirlineStops{ "\xee\x9f\x90" };                // U+e7d0
        constexpr static inline std::string_view Airlines{ "\xee\x9f\x8a" };                    // U+e7ca
        constexpr static inline std::string_view AirplaneTicket{ "\xee\xbf\x99" };              // U+efd9
        constexpr static inline std::string_view AirplanemodeActive{ "\xee\x86\x95" };          // U+e195
        constexpr static inline std::string_view AirplanemodeInactive{ "\xee\x86\x94" };        // U+e194
        constexpr static inline std::string_view AirplanemodeOff{ "\xee\x86\x94" };             // U+e194
        constexpr static inline std::string_view AirplanemodeOn{ "\xee\x86\x95" };              // U+e195
        constexpr static inline std::string_view Airplay{ "\xee\x81\x95" };                     // U+e055
        constexpr static inline std::string_view AirportShuttle{ "\xee\xac\xbc" };              // U+eb3c
        constexpr static inline std::string_view Alarm{ "\xee\xa1\x95" };                       // U+e855
        constexpr static inline std::string_view AlarmAdd{ "\xee\xa1\x96" };                    // U+e856
        constexpr static inline std::string_view AlarmOff{ "\xee\xa1\x97" };                    // U+e857
        constexpr static inline std::string_view AlarmOn{ "\xee\xa1\x98" };                     // U+e858
        constexpr static inline std::string_view Album{ "\xee\x80\x99" };                       // U+e019
        constexpr static inline std::string_view AlignHorizontalCenter{ "\xee\x80\x8f" };       // U+e00f
        constexpr static inline std::string_view AlignHorizontalLeft{ "\xee\x80\x8d" };         // U+e00d
        constexpr static inline std::string_view AlignHorizontalRight{ "\xee\x80\x90" };        // U+e010
        constexpr static inline std::string_view AlignVerticalBottom{ "\xee\x80\x95" };         // U+e015
        constexpr static inline std::string_view AlignVerticalCenter{ "\xee\x80\x91" };         // U+e011
        constexpr static inline std::string_view AlignVerticalTop{ "\xee\x80\x8c" };            // U+e00c
        constexpr static inline std::string_view AllInbox{ "\xee\xa5\xbf" };                    // U+e97f
        constexpr static inline std::string_view AllInclusive{ "\xee\xac\xbd" };                // U+eb3d
        constexpr static inline std::string_view AllOut{ "\xee\xa4\x8b" };                      // U+e90b
        constexpr static inline std::string_view AltRoute{ "\xef\x86\x84" };                    // U+f184
        constexpr static inline std::string_view AlternateEmail{ "\xee\x83\xa6" };              // U+e0e6
        constexpr static inline std::string_view AmpStories{ "\xee\xa8\x93" };                  // U+ea13
        constexpr static inline std::string_view Analytics{ "\xee\xbc\xbe" };                   // U+ef3e
        constexpr static inline std::string_view Anchor{ "\xef\x87\x8d" };                      // U+f1cd
        constexpr static inline std::string_view Android{ "\xee\xa1\x99" };                     // U+e859
        constexpr static inline std::string_view Animation{ "\xee\x9c\x9c" };                   // U+e71c
        constexpr static inline std::string_view Announcement{ "\xee\xa1\x9a" };                // U+e85a
        constexpr static inline std::string_view Aod{ "\xee\xbf\x9a" };                         // U+efda
        constexpr static inline std::string_view Apartment{ "\xee\xa9\x80" };                   // U+ea40
        constexpr static inline std::string_view Api{ "\xef\x86\xb7" };                         // U+f1b7
        constexpr static inline std::string_view AppBlocking{ "\xee\xbc\xbf" };                 // U+ef3f
        constexpr static inline std::string_view AppRegistration{ "\xee\xbd\x80" };             // U+ef40
        constexpr static inline std::string_view AppSettingsAlt{ "\xee\xbd\x81" };              // U+ef41
        constexpr static inline std::string_view AppShortcut{ "\xee\xab\xa4" };                 // U+eae4
        constexpr static inline std::string_view Apple{ "\xee\xaa\x80" };                       // U+ea80
        constexpr static inline std::string_view Approval{ "\xee\xa6\x82" };                    // U+e982
        constexpr static inline std::string_view Apps{ "\xee\x97\x83" };                        // U+e5c3
        constexpr static inline std::string_view AppsOutage{ "\xee\x9f\x8c" };                  // U+e7cc
        constexpr static inline std::string_view Architecture{ "\xee\xa8\xbb" };                // U+ea3b
        constexpr static inline std::string_view Archive{ "\xee\x85\x89" };                     // U+e149
        constexpr static inline std::string_view AreaChart{ "\xee\x9d\xb0" };                   // U+e770
        constexpr static inline std::string_view ArrowBack{ "\xee\x97\x84" };                   // U+e5c4
        constexpr static inline std::string_view ArrowBackIos{ "\xee\x97\xa0" };                // U+e5e0
        constexpr static inline std::string_view ArrowBackIosNew{ "\xee\x8b\xaa" };             // U+e2ea
        constexpr static inline std::string_view ArrowCircleDown{ "\xef\x86\x81" };             // U+f181
        constexpr static inline std::string_view ArrowCircleLeft{ "\xee\xaa\xa7" };             // U+eaa7
        constexpr static inline std::string_view ArrowCircleRight{ "\xee\xaa\xaa" };            // U+eaaa
        constexpr static inline std::string_view ArrowCircleUp{ "\xef\x86\x82" };               // U+f182
        constexpr static inline std::string_view ArrowDownward{ "\xee\x97\x9b" };               // U+e5db
        constexpr static inline std::string_view ArrowDropDown{ "\xee\x97\x85" };               // U+e5c5
        constexpr static inline std::string_view ArrowDropDownCircle{ "\xee\x97\x86" };         // U+e5c6
        constexpr static inline std::string_view ArrowDropUp{ "\xee\x97\x87" };                 // U+e5c7
        constexpr static inline std::string_view ArrowForward{ "\xee\x97\x88" };                // U+e5c8
        constexpr static inline std::string_view ArrowForwardIos{ "\xee\x97\xa1" };             // U+e5e1
        constexpr static inline std::string_view ArrowLeft{ "\xee\x97\x9e" };                   // U+e5de
        constexpr static inline std::string_view ArrowOutward{ "\xef\xa3\x8e" };                // U+f8ce
        constexpr static inline std::string_view ArrowRight{ "\xee\x97\x9f" };                  // U+e5df
        constexpr static inline std::string_view ArrowRightAlt{ "\xee\xa5\x81" };               // U+e941
        constexpr static inline std::string_view ArrowUpward{ "\xee\x97\x98" };                 // U+e5d8
        constexpr static inline std::string_view ArtTrack{ "\xee\x81\xa0" };                    // U+e060
        constexpr static inline std::string_view Article{ "\xee\xbd\x82" };                     // U+ef42
        constexpr static inline std::string_view AspectRatio{ "\xee\xa1\x9b" };                 // U+e85b
        constexpr static inline std::string_view Assessment{ "\xee\xa1\x9c" };                  // U+e85c
        constexpr static inline std::string_view Assignment{ "\xee\xa1\x9d" };                  // U+e85d
        constexpr static inline std::string_view AssignmentAdd{ "\xef\xa1\x88" };               // U+f848
        constexpr static inline std::string_view AssignmentInd{ "\xee\xa1\x9e" };               // U+e85e
        constexpr static inline std::string_view AssignmentLate{ "\xee\xa1\x9f" };              // U+e85f
        constexpr static inline std::string_view AssignmentReturn{ "\xee\xa1\xa0" };            // U+e860
        constexpr static inline std::string_view AssignmentReturned{ "\xee\xa1\xa1" };          // U+e861
        constexpr static inline std::string_view AssignmentTurnedIn{ "\xee\xa1\xa2" };          // U+e862
        constexpr static inline std::string_view AssistWalker{ "\xef\xa3\x95" };                // U+f8d5
        constexpr static inline std::string_view Assistant{ "\xee\x8e\x9f" };                   // U+e39f
        constexpr static inline std::string_view AssistantDirection{ "\xee\xa6\x88" };          // U+e988
        constexpr static inline std::string_view AssistantNavigation{ "\xee\xa6\x89" };         // U+e989
        constexpr static inline std::string_view AssistantPhoto{ "\xee\x8e\xa0" };              // U+e3a0
        constexpr static inline std::string_view AssuredWorkload{ "\xee\xad\xaf" };             // U+eb6f
        constexpr static inline std::string_view Atm{ "\xee\x95\xb3" };                         // U+e573
        constexpr static inline std::string_view AttachEmail{ "\xee\xa9\x9e" };                 // U+ea5e
        constexpr static inline std::string_view AttachFile{ "\xee\x88\xa6" };                  // U+e226
        constexpr static inline std::string_view AttachMoney{ "\xee\x88\xa7" };                 // U+e227
        constexpr static inline std::string_view Attachment{ "\xee\x8a\xbc" };                  // U+e2bc
        constexpr static inline std::string_view Attractions{ "\xee\xa9\x92" };                 // U+ea52
        constexpr static inline std::string_view Attribution{ "\xee\xbf\x9b" };                 // U+efdb
        constexpr static inline std::string_view AudioFile{ "\xee\xae\x82" };                   // U+eb82
        constexpr static inline std::string_view Audiotrack{ "\xee\x8e\xa1" };                  // U+e3a1
        constexpr static inline std::string_view AutoAwesome{ "\xee\x99\x9f" };                 // U+e65f
        constexpr static inline std::string_view AutoAwesomeMosaic{ "\xee\x99\xa0" };           // U+e660
        constexpr static inline std::string_view AutoAwesomeMotion{ "\xee\x99\xa1" };           // U+e661
        constexpr static inline std::string_view AutoDelete{ "\xee\xa9\x8c" };                  // U+ea4c
        constexpr static inline std::string_view AutoFixHigh{ "\xee\x99\xa3" };                 // U+e663
        constexpr static inline std::string_view AutoFixNormal{ "\xee\x99\xa4" };               // U+e664
        constexpr static inline std::string_view AutoFixOff{ "\xee\x99\xa5" };                  // U+e665
        constexpr static inline std::string_view AutoGraph{ "\xee\x93\xbb" };                   // U+e4fb
        constexpr static inline std::string_view AutoMode{ "\xee\xb0\xa0" };                    // U+ec20
        constexpr static inline std::string_view AutoStories{ "\xee\x99\xa6" };                 // U+e666
        constexpr static inline std::string_view AutofpsSelect{ "\xee\xbf\x9c" };               // U+efdc
        constexpr static inline std::string_view Autorenew{ "\xee\xa1\xa3" };                   // U+e863
        constexpr static inline std::string_view AvTimer{ "\xee\x80\x9b" };                     // U+e01b
        constexpr static inline std::string_view BabyChangingStation{ "\xef\x86\x9b" };         // U+f19b
        constexpr static inline std::string_view BackHand{ "\xee\x9d\xa4" };                    // U+e764
        constexpr static inline std::string_view Backpack{ "\xef\x86\x9c" };                    // U+f19c
        constexpr static inline std::string_view Backspace{ "\xee\x85\x8a" };                   // U+e14a
        constexpr static inline std::string_view Backup{ "\xee\xa1\xa4" };                      // U+e864
        constexpr static inline std::string_view BackupTable{ "\xee\xbd\x83" };                 // U+ef43
        constexpr static inline std::string_view Badge{ "\xee\xa9\xa7" };                       // U+ea67
        constexpr static inline std::string_view BakeryDining{ "\xee\xa9\x93" };                // U+ea53
        constexpr static inline std::string_view Balance{ "\xee\xab\xb6" };                     // U+eaf6
        constexpr static inline std::string_view Balcony{ "\xee\x96\x8f" };                     // U+e58f
        constexpr static inline std::string_view Ballot{ "\xee\x85\xb2" };                      // U+e172
        constexpr static inline std::string_view BarChart{ "\xee\x89\xab" };                    // U+e26b
        constexpr static inline std::string_view BarcodeReader{ "\xef\xa1\x9c" };               // U+f85c
        constexpr static inline std::string_view BatchPrediction{ "\xef\x83\xb5" };             // U+f0f5
        constexpr static inline std::string_view Bathroom{ "\xee\xbf\x9d" };                    // U+efdd
        constexpr static inline std::string_view Bathtub{ "\xee\xa9\x81" };                     // U+ea41
        constexpr static inline std::string_view Battery_0Bar{ "\xee\xaf\x9c" };                // U+ebdc
        constexpr static inline std::string_view Battery_1Bar{ "\xee\xaf\x99" };                // U+ebd9
        constexpr static inline std::string_view Battery_2Bar{ "\xee\xaf\xa0" };                // U+ebe0
        constexpr static inline std::string_view Battery_3Bar{ "\xee\xaf\x9d" };                // U+ebdd
        constexpr static inline std::string_view Battery_4Bar{ "\xee\xaf\xa2" };                // U+ebe2
        constexpr static inline std::string_view Battery_5Bar{ "\xee\xaf\x94" };                // U+ebd4
        constexpr static inline std::string_view Battery_6Bar{ "\xee\xaf\x92" };                // U+ebd2
        constexpr static inline std::string_view BatteryAlert{ "\xee\x86\x9c" };                // U+e19c
        constexpr static inline std::string_view BatteryChargingFull{ "\xee\x86\xa3" };         // U+e1a3
        constexpr static inline std::string_view BatteryFull{ "\xee\x86\xa4" };                 // U+e1a4
        constexpr static inline std::string_view BatterySaver{ "\xee\xbf\x9e" };                // U+efde
        constexpr static inline std::string_view BatteryStd{ "\xee\x86\xa5" };                  // U+e1a5
        constexpr static inline std::string_view BatteryUnknown{ "\xee\x86\xa6" };              // U+e1a6
        constexpr static inline std::string_view BeachAccess{ "\xee\xac\xbe" };                 // U+eb3e
        constexpr static inline std::string_view Bed{ "\xee\xbf\x9f" };                         // U+efdf
        constexpr static inline std::string_view BedroomBaby{ "\xee\xbf\xa0" };                 // U+efe0
        constexpr static inline std::string_view BedroomChild{ "\xee\xbf\xa1" };                // U+efe1
        constexpr static inline std::string_view BedroomParent{ "\xee\xbf\xa2" };               // U+efe2
        constexpr static inline std::string_view Bedtime{ "\xee\xbd\x84" };                     // U+ef44
        constexpr static inline std::string_view BedtimeOff{ "\xee\xad\xb6" };                  // U+eb76
        constexpr static inline std::string_view Beenhere{ "\xee\x94\xad" };                    // U+e52d
        constexpr static inline std::string_view Bento{ "\xef\x87\xb4" };                       // U+f1f4
        constexpr static inline std::string_view BikeScooter{ "\xee\xbd\x85" };                 // U+ef45
        constexpr static inline std::string_view Biotech{ "\xee\xa8\xba" };                     // U+ea3a
        constexpr static inline std::string_view Blender{ "\xee\xbf\xa3" };                     // U+efe3
        constexpr static inline std::string_view Blind{ "\xef\xa3\x96" };                       // U+f8d6
        constexpr static inline std::string_view Blinds{ "\xee\x8a\x86" };                      // U+e286
        constexpr static inline std::string_view BlindsClosed{ "\xee\xb0\x9f" };                // U+ec1f
        constexpr static inline std::string_view Block{ "\xee\x85\x8b" };                       // U+e14b
        constexpr static inline std::string_view BlockFlipped{ "\xee\xbd\x86" };                // U+ef46
        constexpr static inline std::string_view Bloodtype{ "\xee\xbf\xa4" };                   // U+efe4
        constexpr static inline std::string_view Bluetooth{ "\xee\x86\xa7" };                   // U+e1a7
        constexpr static inline std::string_view BluetoothAudio{ "\xee\x98\x8f" };              // U+e60f
        constexpr static inline std::string_view BluetoothConnected{ "\xee\x86\xa8" };          // U+e1a8
        constexpr static inline std::string_view BluetoothDisabled{ "\xee\x86\xa9" };           // U+e1a9
        constexpr static inline std::string_view BluetoothDrive{ "\xee\xbf\xa5" };              // U+efe5
        constexpr static inline std::string_view BluetoothSearching{ "\xee\x86\xaa" };          // U+e1aa
        constexpr static inline std::string_view BlurCircular{ "\xee\x8e\xa2" };                // U+e3a2
        constexpr static inline std::string_view BlurLinear{ "\xee\x8e\xa3" };                  // U+e3a3
        constexpr static inline std::string_view BlurOff{ "\xee\x8e\xa4" };                     // U+e3a4
        constexpr static inline std::string_view BlurOn{ "\xee\x8e\xa5" };                      // U+e3a5
        constexpr static inline std::string_view Bolt{ "\xee\xa8\x8b" };                        // U+ea0b
        constexpr static inline std::string_view Book{ "\xee\xa1\xa5" };                        // U+e865
        constexpr static inline std::string_view BookOnline{ "\xef\x88\x97" };                  // U+f217
        constexpr static inline std::string_view Bookmark{ "\xee\xa1\xa6" };                    // U+e866
        constexpr static inline std::string_view BookmarkAdd{ "\xee\x96\x98" };                 // U+e598
        constexpr static inline std::string_view BookmarkAdded{ "\xee\x96\x99" };               // U+e599
        constexpr static inline std::string_view BookmarkBorder{ "\xee\xa1\xa7" };              // U+e867
        constexpr static inline std::string_view BookmarkOutline{ "\xee\xa1\xa7" };             // U+e867
        constexpr static inline std::string_view BookmarkRemove{ "\xee\x96\x9a" };              // U+e59a
        constexpr static inline std::string_view Bookmarks{ "\xee\xa6\x8b" };                   // U+e98b
        constexpr static inline std::string_view BorderAll{ "\xee\x88\xa8" };                   // U+e228
        constexpr static inline std::string_view BorderBottom{ "\xee\x88\xa9" };                // U+e229
        constexpr static inline std::string_view BorderClear{ "\xee\x88\xaa" };                 // U+e22a
        constexpr static inline std::string_view BorderColor{ "\xee\x88\xab" };                 // U+e22b
        constexpr static inline std::string_view BorderHorizontal{ "\xee\x88\xac" };            // U+e22c
        constexpr static inline std::string_view BorderInner{ "\xee\x88\xad" };                 // U+e22d
        constexpr static inline std::string_view BorderLeft{ "\xee\x88\xae" };                  // U+e22e
        constexpr static inline std::string_view BorderOuter{ "\xee\x88\xaf" };                 // U+e22f
        constexpr static inline std::string_view BorderRight{ "\xee\x88\xb0" };                 // U+e230
        constexpr static inline std::string_view BorderStyle{ "\xee\x88\xb1" };                 // U+e231
        constexpr static inline std::string_view BorderTop{ "\xee\x88\xb2" };                   // U+e232
        constexpr static inline std::string_view BorderVertical{ "\xee\x88\xb3" };              // U+e233
        constexpr static inline std::string_view Boy{ "\xee\xad\xa7" };                         // U+eb67
        constexpr static inline std::string_view BrandingWatermark{ "\xee\x81\xab" };           // U+e06b
        constexpr static inline std::string_view BreakfastDining{ "\xee\xa9\x94" };             // U+ea54
        constexpr static inline std::string_view Brightness_1{ "\xee\x8e\xa6" };                // U+e3a6
        constexpr static inline std::string_view Brightness_2{ "\xee\x8e\xa7" };                // U+e3a7
        constexpr static inline std::string_view Brightness_3{ "\xee\x8e\xa8" };                // U+e3a8
        constexpr static inline std::string_view Brightness_4{ "\xee\x8e\xa9" };                // U+e3a9
        constexpr static inline std::string_view Brightness_5{ "\xee\x8e\xaa" };                // U+e3aa
        constexpr static inline std::string_view Brightness_6{ "\xee\x8e\xab" };                // U+e3ab
        constexpr static inline std::string_view Brightness_7{ "\xee\x8e\xac" };                // U+e3ac
        constexpr static inline std::string_view BrightnessAuto{ "\xee\x86\xab" };              // U+e1ab
        constexpr static inline std::string_view BrightnessHigh{ "\xee\x86\xac" };              // U+e1ac
        constexpr static inline std::string_view BrightnessLow{ "\xee\x86\xad" };               // U+e1ad
        constexpr static inline std::string_view BrightnessMedium{ "\xee\x86\xae" };            // U+e1ae
        constexpr static inline std::string_view BroadcastOnHome{ "\xef\xa3\xb8" };             // U+f8f8
        constexpr static inline std::string_view BroadcastOnPersonal{ "\xef\xa3\xb9" };         // U+f8f9
        constexpr static inline std::string_view BrokenImage{ "\xee\x8e\xad" };                 // U+e3ad
        constexpr static inline std::string_view BrowseGallery{ "\xee\xaf\x91" };               // U+ebd1
        constexpr static inline std::string_view BrowserNotSupported{ "\xee\xbd\x87" };         // U+ef47
        constexpr static inline std::string_view BrowserUpdated{ "\xee\x9f\x8f" };              // U+e7cf
        constexpr static inline std::string_view BrunchDining{ "\xee\xa9\xb3" };                // U+ea73
        constexpr static inline std::string_view Brush{ "\xee\x8e\xae" };                       // U+e3ae
        constexpr static inline std::string_view BubbleChart{ "\xee\x9b\x9d" };                 // U+e6dd
        constexpr static inline std::string_view BugReport{ "\xee\xa1\xa8" };                   // U+e868
        constexpr static inline std::string_view Build{ "\xee\xa1\xa9" };                       // U+e869
        constexpr static inline std::string_view BuildCircle{ "\xee\xbd\x88" };                 // U+ef48
        constexpr static inline std::string_view Bungalow{ "\xee\x96\x91" };                    // U+e591
        constexpr static inline std::string_view BurstMode{ "\xee\x90\xbc" };                   // U+e43c
        constexpr static inline std::string_view BusAlert{ "\xee\xa6\x8f" };                    // U+e98f
        constexpr static inline std::string_view Business{ "\xee\x82\xaf" };                    // U+e0af
        constexpr static inline std::string_view BusinessCenter{ "\xee\xac\xbf" };              // U+eb3f
        constexpr static inline std::string_view Cabin{ "\xee\x96\x89" };                       // U+e589
        constexpr static inline std::string_view Cable{ "\xee\xbf\xa6" };                       // U+efe6
        constexpr static inline std::string_view Cached{ "\xee\xa1\xaa" };                      // U+e86a
        constexpr static inline std::string_view Cake{ "\xee\x9f\xa9" };                        // U+e7e9
        constexpr static inline std::string_view Calculate{ "\xee\xa9\x9f" };                   // U+ea5f
        constexpr static inline std::string_view CalendarMonth{ "\xee\xaf\x8c" };               // U+ebcc
        constexpr static inline std::string_view CalendarToday{ "\xee\xa4\xb5" };               // U+e935
        constexpr static inline std::string_view CalendarViewDay{ "\xee\xa4\xb6" };             // U+e936
        constexpr static inline std::string_view CalendarViewMonth{ "\xee\xbf\xa7" };           // U+efe7
        constexpr static inline std::string_view CalendarViewWeek{ "\xee\xbf\xa8" };            // U+efe8
        constexpr static inline std::string_view Call{ "\xee\x82\xb0" };                        // U+e0b0
        constexpr static inline std::string_view CallEnd{ "\xee\x82\xb1" };                     // U+e0b1
        constexpr static inline std::string_view CallMade{ "\xee\x82\xb2" };                    // U+e0b2
        constexpr static inline std::string_view CallMerge{ "\xee\x82\xb3" };                   // U+e0b3
        constexpr static inline std::string_view CallMissed{ "\xee\x82\xb4" };                  // U+e0b4
        constexpr static inline std::string_view CallMissedOutgoing{ "\xee\x83\xa4" };          // U+e0e4
        constexpr static inline std::string_view CallReceived{ "\xee\x82\xb5" };                // U+e0b5
        constexpr static inline std::string_view CallSplit{ "\xee\x82\xb6" };                   // U+e0b6
        constexpr static inline std::string_view CallToAction{ "\xee\x81\xac" };                // U+e06c
        constexpr static inline std::string_view Camera{ "\xee\x8e\xaf" };                      // U+e3af
        constexpr static inline std::string_view CameraAlt{ "\xee\x8e\xb0" };                   // U+e3b0
        constexpr static inline std::string_view CameraEnhance{ "\xee\xa3\xbc" };               // U+e8fc
        constexpr static inline std::string_view CameraFront{ "\xee\x8e\xb1" };                 // U+e3b1
        constexpr static inline std::string_view CameraIndoor{ "\xee\xbf\xa9" };                // U+efe9
        constexpr static inline std::string_view CameraOutdoor{ "\xee\xbf\xaa" };               // U+efea
        constexpr static inline std::string_view CameraRear{ "\xee\x8e\xb2" };                  // U+e3b2
        constexpr static inline std::string_view CameraRoll{ "\xee\x8e\xb3" };                  // U+e3b3
        constexpr static inline std::string_view Cameraswitch{ "\xee\xbf\xab" };                // U+efeb
        constexpr static inline std::string_view Campaign{ "\xee\xbd\x89" };                    // U+ef49
        constexpr static inline std::string_view Cancel{ "\xee\x97\x89" };                      // U+e5c9
        constexpr static inline std::string_view CancelPresentation{ "\xee\x83\xa9" };          // U+e0e9
        constexpr static inline std::string_view CancelScheduleSend{ "\xee\xa8\xb9" };          // U+ea39
        constexpr static inline std::string_view CandlestickChart{ "\xee\xab\x94" };            // U+ead4
        constexpr static inline std::string_view CarCrash{ "\xee\xaf\xb2" };                    // U+ebf2
        constexpr static inline std::string_view CarRental{ "\xee\xa9\x95" };                   // U+ea55
        constexpr static inline std::string_view CarRepair{ "\xee\xa9\x96" };                   // U+ea56
        constexpr static inline std::string_view CardGiftcard{ "\xee\xa3\xb6" };                // U+e8f6
        constexpr static inline std::string_view CardMembership{ "\xee\xa3\xb7" };              // U+e8f7
        constexpr static inline std::string_view CardTravel{ "\xee\xa3\xb8" };                  // U+e8f8
        constexpr static inline std::string_view Carpenter{ "\xef\x87\xb8" };                   // U+f1f8
        constexpr static inline std::string_view Cases{ "\xee\xa6\x92" };                       // U+e992
        constexpr static inline std::string_view Casino{ "\xee\xad\x80" };                      // U+eb40
        constexpr static inline std::string_view Cast{ "\xee\x8c\x87" };                        // U+e307
        constexpr static inline std::string_view CastConnected{ "\xee\x8c\x88" };               // U+e308
        constexpr static inline std::string_view CastForEducation{ "\xee\xbf\xac" };            // U+efec
        constexpr static inline std::string_view Castle{ "\xee\xaa\xb1" };                      // U+eab1
        constexpr static inline std::string_view CatchingPokemon{ "\xee\x94\x88" };             // U+e508
        constexpr static inline std::string_view Category{ "\xee\x95\xb4" };                    // U+e574
        constexpr static inline std::string_view Celebration{ "\xee\xa9\xa5" };                 // U+ea65
        constexpr static inline std::string_view CellTower{ "\xee\xae\xba" };                   // U+ebba
        constexpr static inline std::string_view CellWifi{ "\xee\x83\xac" };                    // U+e0ec
        constexpr static inline std::string_view CenterFocusStrong{ "\xee\x8e\xb4" };           // U+e3b4
        constexpr static inline std::string_view CenterFocusWeak{ "\xee\x8e\xb5" };             // U+e3b5
        constexpr static inline std::string_view Chair{ "\xee\xbf\xad" };                       // U+efed
        constexpr static inline std::string_view ChairAlt{ "\xee\xbf\xae" };                    // U+efee
        constexpr static inline std::string_view Chalet{ "\xee\x96\x85" };                      // U+e585
        constexpr static inline std::string_view ChangeCircle{ "\xee\x8b\xa7" };                // U+e2e7
        constexpr static inline std::string_view ChangeHistory{ "\xee\xa1\xab" };               // U+e86b
        constexpr static inline std::string_view ChargingStation{ "\xef\x86\x9d" };             // U+f19d
        constexpr static inline std::string_view Chat{ "\xee\x82\xb7" };                        // U+e0b7
        constexpr static inline std::string_view ChatBubble{ "\xee\x83\x8a" };                  // U+e0ca
        constexpr static inline std::string_view ChatBubbleOutline{ "\xee\x83\x8b" };           // U+e0cb
        constexpr static inline std::string_view Check{ "\xee\x97\x8a" };                       // U+e5ca
        constexpr static inline std::string_view CheckBox{ "\xee\xa0\xb4" };                    // U+e834
        constexpr static inline std::string_view CheckBoxOutlineBlank{ "\xee\xa0\xb5" };        // U+e835
        constexpr static inline std::string_view CheckCircle{ "\xee\xa1\xac" };                 // U+e86c
        constexpr static inline std::string_view CheckCircleOutline{ "\xee\xa4\xad" };          // U+e92d
        constexpr static inline std::string_view Checklist{ "\xee\x9a\xb1" };                   // U+e6b1
        constexpr static inline std::string_view ChecklistRtl{ "\xee\x9a\xb3" };                // U+e6b3
        constexpr static inline std::string_view Checkroom{ "\xef\x86\x9e" };                   // U+f19e
        constexpr static inline std::string_view ChevronLeft{ "\xee\x97\x8b" };                 // U+e5cb
        constexpr static inline std::string_view ChevronRight{ "\xee\x97\x8c" };                // U+e5cc
        constexpr static inline std::string_view ChildCare{ "\xee\xad\x81" };                   // U+eb41
        constexpr static inline std::string_view ChildFriendly{ "\xee\xad\x82" };               // U+eb42
        constexpr static inline std::string_view ChromeReaderMode{ "\xee\xa1\xad" };            // U+e86d
        constexpr static inline std::string_view Church{ "\xee\xaa\xae" };                      // U+eaae
        constexpr static inline std::string_view Circle{ "\xee\xbd\x8a" };                      // U+ef4a
        constexpr static inline std::string_view CircleNotifications{ "\xee\xa6\x94" };         // U+e994
        constexpr static inline std::string_view Class{ "\xee\xa1\xae" };                       // U+e86e
        constexpr static inline std::string_view CleanHands{ "\xef\x88\x9f" };                  // U+f21f
        constexpr static inline std::string_view CleaningServices{ "\xef\x83\xbf" };            // U+f0ff
        constexpr static inline std::string_view Clear{ "\xee\x85\x8c" };                       // U+e14c
        constexpr static inline std::string_view ClearAll{ "\xee\x82\xb8" };                    // U+e0b8
        constexpr static inline std::string_view Close{ "\xee\x97\x8d" };                       // U+e5cd
        constexpr static inline std::string_view CloseFullscreen{ "\xef\x87\x8f" };             // U+f1cf
        constexpr static inline std::string_view ClosedCaption{ "\xee\x80\x9c" };               // U+e01c
        constexpr static inline std::string_view ClosedCaptionDisabled{ "\xef\x87\x9c" };       // U+f1dc
        constexpr static inline std::string_view ClosedCaptionOff{ "\xee\xa6\x96" };            // U+e996
        constexpr static inline std::string_view Cloud{ "\xee\x8a\xbd" };                       // U+e2bd
        constexpr static inline std::string_view CloudCircle{ "\xee\x8a\xbe" };                 // U+e2be
        constexpr static inline std::string_view CloudDone{ "\xee\x8a\xbf" };                   // U+e2bf
        constexpr static inline std::string_view CloudDownload{ "\xee\x8b\x80" };               // U+e2c0
        constexpr static inline std::string_view CloudOff{ "\xee\x8b\x81" };                    // U+e2c1
        constexpr static inline std::string_view CloudQueue{ "\xee\x8b\x82" };                  // U+e2c2
        constexpr static inline std::string_view CloudSync{ "\xee\xad\x9a" };                   // U+eb5a
        constexpr static inline std::string_view CloudUpload{ "\xee\x8b\x83" };                 // U+e2c3
        constexpr static inline std::string_view CloudySnowing{ "\xee\xa0\x90" };               // U+e810
        constexpr static inline std::string_view Co2{ "\xee\x9e\xb0" };                         // U+e7b0
        constexpr static inline std::string_view CoPresent{ "\xee\xab\xb0" };                   // U+eaf0
        constexpr static inline std::string_view Code{ "\xee\xa1\xaf" };                        // U+e86f
        constexpr static inline std::string_view CodeOff{ "\xee\x93\xb3" };                     // U+e4f3
        constexpr static inline std::string_view Coffee{ "\xee\xbf\xaf" };                      // U+efef
        constexpr static inline std::string_view CoffeeMaker{ "\xee\xbf\xb0" };                 // U+eff0
        constexpr static inline std::string_view Collections{ "\xee\x8e\xb6" };                 // U+e3b6
        constexpr static inline std::string_view CollectionsBookmark{ "\xee\x90\xb1" };         // U+e431
        constexpr static inline std::string_view ColorLens{ "\xee\x8e\xb7" };                   // U+e3b7
        constexpr static inline std::string_view Colorize{ "\xee\x8e\xb8" };                    // U+e3b8
        constexpr static inline std::string_view Comment{ "\xee\x82\xb9" };                     // U+e0b9
        constexpr static inline std::string_view CommentBank{ "\xee\xa9\x8e" };                 // U+ea4e
        constexpr static inline std::string_view CommentsDisabled{ "\xee\x9e\xa2" };            // U+e7a2
        constexpr static inline std::string_view Commit{ "\xee\xab\xb5" };                      // U+eaf5
        constexpr static inline std::string_view Commute{ "\xee\xa5\x80" };                     // U+e940
        constexpr static inline std::string_view Compare{ "\xee\x8e\xb9" };                     // U+e3b9
        constexpr static inline std::string_view CompareArrows{ "\xee\xa4\x95" };               // U+e915
        constexpr static inline std::string_view CompassCalibration{ "\xee\x95\xbc" };          // U+e57c
        constexpr static inline std::string_view Compost{ "\xee\x9d\xa1" };                     // U+e761
        constexpr static inline std::string_view Compress{ "\xee\xa5\x8d" };                    // U+e94d
        constexpr static inline std::string_view Computer{ "\xee\x8c\x8a" };                    // U+e30a
        constexpr static inline std::string_view ConfirmationNum{ "\xee\x98\xb8" };             // U+e638
        constexpr static inline std::string_view ConfirmationNumber{ "\xee\x98\xb8" };          // U+e638
        constexpr static inline std::string_view ConnectWithoutContact{ "\xef\x88\xa3" };       // U+f223
        constexpr static inline std::string_view ConnectedTv{ "\xee\xa6\x98" };                 // U+e998
        constexpr static inline std::string_view ConnectingAirports{ "\xee\x9f\x89" };          // U+e7c9
        constexpr static inline std::string_view Construction{ "\xee\xa8\xbc" };                // U+ea3c
        constexpr static inline std::string_view ContactEmergency{ "\xef\xa3\x91" };            // U+f8d1
        constexpr static inline std::string_view ContactMail{ "\xee\x83\x90" };                 // U+e0d0
        constexpr static inline std::string_view ContactPage{ "\xef\x88\xae" };                 // U+f22e
        constexpr static inline std::string_view ContactPhone{ "\xee\x83\x8f" };                // U+e0cf
        constexpr static inline std::string_view ContactSupport{ "\xee\xa5\x8c" };              // U+e94c
        constexpr static inline std::string_view Contactless{ "\xee\xa9\xb1" };                 // U+ea71
        constexpr static inline std::string_view Contacts{ "\xee\x82\xba" };                    // U+e0ba
        constexpr static inline std::string_view ContentCopy{ "\xee\x85\x8d" };                 // U+e14d
        constexpr static inline std::string_view ContentCut{ "\xee\x85\x8e" };                  // U+e14e
        constexpr static inline std::string_view ContentPaste{ "\xee\x85\x8f" };                // U+e14f
        constexpr static inline std::string_view ContentPasteGo{ "\xee\xaa\x8e" };              // U+ea8e
        constexpr static inline std::string_view ContentPasteOff{ "\xee\x93\xb8" };             // U+e4f8
        constexpr static inline std::string_view ContentPasteSearch{ "\xee\xaa\x9b" };          // U+ea9b
        constexpr static inline std::string_view Contrast{ "\xee\xac\xb7" };                    // U+eb37
        constexpr static inline std::string_view ControlCamera{ "\xee\x81\xb4" };               // U+e074
        constexpr static inline std::string_view ControlPoint{ "\xee\x8e\xba" };                // U+e3ba
        constexpr static inline std::string_view ControlPointDuplicate{ "\xee\x8e\xbb" };       // U+e3bb
        constexpr static inline std::string_view ConveyorBelt{ "\xef\xa1\xa7" };                // U+f867
        constexpr static inline std::string_view Cookie{ "\xee\xaa\xac" };                      // U+eaac
        constexpr static inline std::string_view CopyAll{ "\xee\x8b\xac" };                     // U+e2ec
        constexpr static inline std::string_view Copyright{ "\xee\xa4\x8c" };                   // U+e90c
        constexpr static inline std::string_view Coronavirus{ "\xef\x88\xa1" };                 // U+f221
        constexpr static inline std::string_view CorporateFare{ "\xef\x87\x90" };               // U+f1d0
        constexpr static inline std::string_view Cottage{ "\xee\x96\x87" };                     // U+e587
        constexpr static inline std::string_view Countertops{ "\xef\x87\xb7" };                 // U+f1f7
        constexpr static inline std::string_view Create{ "\xee\x85\x90" };                      // U+e150
        constexpr static inline std::string_view CreateNewFolder{ "\xee\x8b\x8c" };             // U+e2cc
        constexpr static inline std::string_view CreditCard{ "\xee\xa1\xb0" };                  // U+e870
        constexpr static inline std::string_view CreditCardOff{ "\xee\x93\xb4" };               // U+e4f4
        constexpr static inline std::string_view CreditScore{ "\xee\xbf\xb1" };                 // U+eff1
        constexpr static inline std::string_view Crib{ "\xee\x96\x88" };                        // U+e588
        constexpr static inline std::string_view CrisisAlert{ "\xee\xaf\xa9" };                 // U+ebe9
        constexpr static inline std::string_view Crop{ "\xee\x8e\xbe" };                        // U+e3be
        constexpr static inline std::string_view Crop_16_9{ "\xee\x8e\xbc" };                   // U+e3bc
        constexpr static inline std::string_view Crop_3_2{ "\xee\x8e\xbd" };                    // U+e3bd
        constexpr static inline std::string_view Crop_5_4{ "\xee\x8e\xbf" };                    // U+e3bf
        constexpr static inline std::string_view Crop_7_5{ "\xee\x8f\x80" };                    // U+e3c0
        constexpr static inline std::string_view CropDin{ "\xee\x8f\x81" };                     // U+e3c1
        constexpr static inline std::string_view CropFree{ "\xee\x8f\x82" };                    // U+e3c2
        constexpr static inline std::string_view CropLandscape{ "\xee\x8f\x83" };               // U+e3c3
        constexpr static inline std::string_view CropOriginal{ "\xee\x8f\x84" };                // U+e3c4
        constexpr static inline std::string_view CropPortrait{ "\xee\x8f\x85" };                // U+e3c5
        constexpr static inline std::string_view CropRotate{ "\xee\x90\xb7" };                  // U+e437
        constexpr static inline std::string_view CropSquare{ "\xee\x8f\x86" };                  // U+e3c6
        constexpr static inline std::string_view CrueltyFree{ "\xee\x9e\x99" };                 // U+e799
        constexpr static inline std::string_view Css{ "\xee\xae\x93" };                         // U+eb93
        constexpr static inline std::string_view CurrencyBitcoin{ "\xee\xaf\x85" };             // U+ebc5
        constexpr static inline std::string_view CurrencyExchange{ "\xee\xad\xb0" };            // U+eb70
        constexpr static inline std::string_view CurrencyFranc{ "\xee\xab\xba" };               // U+eafa
        constexpr static inline std::string_view CurrencyLira{ "\xee\xab\xaf" };                // U+eaef
        constexpr static inline std::string_view CurrencyPound{ "\xee\xab\xb1" };               // U+eaf1
        constexpr static inline std::string_view CurrencyRuble{ "\xee\xab\xac" };               // U+eaec
        constexpr static inline std::string_view CurrencyRupee{ "\xee\xab\xb7" };               // U+eaf7
        constexpr static inline std::string_view CurrencyYen{ "\xee\xab\xbb" };                 // U+eafb
        constexpr static inline std::string_view CurrencyYuan{ "\xee\xab\xb9" };                // U+eaf9
        constexpr static inline std::string_view Curtains{ "\xee\xb0\x9e" };                    // U+ec1e
        constexpr static inline std::string_view CurtainsClosed{ "\xee\xb0\x9d" };              // U+ec1d
        constexpr static inline std::string_view Cyclone{ "\xee\xaf\x95" };                     // U+ebd5
        constexpr static inline std::string_view Dangerous{ "\xee\xa6\x9a" };                   // U+e99a
        constexpr static inline std::string_view DarkMode{ "\xee\x94\x9c" };                    // U+e51c
        constexpr static inline std::string_view Dashboard{ "\xee\xa1\xb1" };                   // U+e871
        constexpr static inline std::string_view DashboardCustomize{ "\xee\xa6\x9b" };          // U+e99b
        constexpr static inline std::string_view DataArray{ "\xee\xab\x91" };                   // U+ead1
        constexpr static inline std::string_view DataExploration{ "\xee\x9d\xaf" };             // U+e76f
        constexpr static inline std::string_view DataObject{ "\xee\xab\x93" };                  // U+ead3
        constexpr static inline std::string_view DataSaverOff{ "\xee\xbf\xb2" };                // U+eff2
        constexpr static inline std::string_view DataSaverOn{ "\xee\xbf\xb3" };                 // U+eff3
        constexpr static inline std::string_view DataThresholding{ "\xee\xae\x9f" };            // U+eb9f
        constexpr static inline std::string_view DataUsage{ "\xee\x86\xaf" };                   // U+e1af
        constexpr static inline std::string_view Dataset{ "\xef\xa3\xae" };                     // U+f8ee
        constexpr static inline std::string_view DatasetLinked{ "\xef\xa3\xaf" };               // U+f8ef
        constexpr static inline std::string_view DateRange{ "\xee\xa4\x96" };                   // U+e916
        constexpr static inline std::string_view Deblur{ "\xee\xad\xb7" };                      // U+eb77
        constexpr static inline std::string_view Deck{ "\xee\xa9\x82" };                        // U+ea42
        constexpr static inline std::string_view Dehaze{ "\xee\x8f\x87" };                      // U+e3c7
        constexpr static inline std::string_view Delete{ "\xee\xa1\xb2" };                      // U+e872
        constexpr static inline std::string_view DeleteForever{ "\xee\xa4\xab" };               // U+e92b
        constexpr static inline std::string_view DeleteOutline{ "\xee\xa4\xae" };               // U+e92e
        constexpr static inline std::string_view DeleteSweep{ "\xee\x85\xac" };                 // U+e16c
        constexpr static inline std::string_view DeliveryDining{ "\xee\xa9\xb2" };              // U+ea72
        constexpr static inline std::string_view DensityLarge{ "\xee\xae\xa9" };                // U+eba9
        constexpr static inline std::string_view DensityMedium{ "\xee\xae\x9e" };               // U+eb9e
        constexpr static inline std::string_view DensitySmall{ "\xee\xae\xa8" };                // U+eba8
        constexpr static inline std::string_view DepartureBoard{ "\xee\x95\xb6" };              // U+e576
        constexpr static inline std::string_view Description{ "\xee\xa1\xb3" };                 // U+e873
        constexpr static inline std::string_view Deselect{ "\xee\xae\xb6" };                    // U+ebb6
        constexpr static inline std::string_view DesignServices{ "\xef\x84\x8a" };              // U+f10a
        constexpr static inline std::string_view Desk{ "\xef\xa3\xb4" };                        // U+f8f4
        constexpr static inline std::string_view DesktopAccessDisabled{ "\xee\xa6\x9d" };       // U+e99d
        constexpr static inline std::string_view DesktopMac{ "\xee\x8c\x8b" };                  // U+e30b
        constexpr static inline std::string_view DesktopWindows{ "\xee\x8c\x8c" };              // U+e30c
        constexpr static inline std::string_view Details{ "\xee\x8f\x88" };                     // U+e3c8
        constexpr static inline std::string_view DeveloperBoard{ "\xee\x8c\x8d" };              // U+e30d
        constexpr static inline std::string_view DeveloperBoardOff{ "\xee\x93\xbf" };           // U+e4ff
        constexpr static inline std::string_view DeveloperMode{ "\xee\x86\xb0" };               // U+e1b0
        constexpr static inline std::string_view DeviceHub{ "\xee\x8c\xb5" };                   // U+e335
        constexpr static inline std::string_view DeviceThermostat{ "\xee\x87\xbf" };            // U+e1ff
        constexpr static inline std::string_view DeviceUnknown{ "\xee\x8c\xb9" };               // U+e339
        constexpr static inline std::string_view Devices{ "\xee\x86\xb1" };                     // U+e1b1
        constexpr static inline std::string_view DevicesFold{ "\xee\xaf\x9e" };                 // U+ebde
        constexpr static inline std::string_view DevicesOther{ "\xee\x8c\xb7" };                // U+e337
        constexpr static inline std::string_view DewPoint{ "\xef\xa1\xb9" };                    // U+f879
        constexpr static inline std::string_view DialerSip{ "\xee\x82\xbb" };                   // U+e0bb
        constexpr static inline std::string_view Dialpad{ "\xee\x82\xbc" };                     // U+e0bc
        constexpr static inline std::string_view Diamond{ "\xee\xab\x95" };                     // U+ead5
        constexpr static inline std::string_view Difference{ "\xee\xad\xbd" };                  // U+eb7d
        constexpr static inline std::string_view Dining{ "\xee\xbf\xb4" };                      // U+eff4
        constexpr static inline std::string_view DinnerDining{ "\xee\xa9\x97" };                // U+ea57
        constexpr static inline std::string_view Directions{ "\xee\x94\xae" };                  // U+e52e
        constexpr static inline std::string_view DirectionsBike{ "\xee\x94\xaf" };              // U+e52f
        constexpr static inline std::string_view DirectionsBoat{ "\xee\x94\xb2" };              // U+e532
        constexpr static inline std::string_view DirectionsBoatFilled{ "\xee\xbf\xb5" };        // U+eff5
        constexpr static inline std::string_view DirectionsBus{ "\xee\x94\xb0" };               // U+e530
        constexpr static inline std::string_view DirectionsBusFilled{ "\xee\xbf\xb6" };         // U+eff6
        constexpr static inline std::string_view DirectionsCar{ "\xee\x94\xb1" };               // U+e531
        constexpr static inline std::string_view DirectionsCarFilled{ "\xee\xbf\xb7" };         // U+eff7
        constexpr static inline std::string_view DirectionsFerry{ "\xee\x94\xb2" };             // U+e532
        constexpr static inline std::string_view DirectionsOff{ "\xef\x84\x8f" };               // U+f10f
        constexpr static inline std::string_view DirectionsRailway{ "\xee\x94\xb4" };           // U+e534
        constexpr static inline std::string_view DirectionsRailwayFilled{ "\xee\xbf\xb8" };     // U+eff8
        constexpr static inline std::string_view DirectionsRun{ "\xee\x95\xa6" };               // U+e566
        constexpr static inline std::string_view DirectionsSubway{ "\xee\x94\xb3" };            // U+e533
        constexpr static inline std::string_view DirectionsSubwayFilled{ "\xee\xbf\xb9" };      // U+eff9
        constexpr static inline std::string_view DirectionsTrain{ "\xee\x94\xb4" };             // U+e534
        constexpr static inline std::string_view DirectionsTransit{ "\xee\x94\xb5" };           // U+e535
        constexpr static inline std::string_view DirectionsTransitFilled{ "\xee\xbf\xba" };     // U+effa
        constexpr static inline std::string_view DirectionsWalk{ "\xee\x94\xb6" };              // U+e536
        constexpr static inline std::string_view DirtyLens{ "\xee\xbd\x8b" };                   // U+ef4b
        constexpr static inline std::string_view DisabledByDefault{ "\xef\x88\xb0" };           // U+f230
        constexpr static inline std::string_view DisabledVisible{ "\xee\x9d\xae" };             // U+e76e
        constexpr static inline std::string_view DiscFull{ "\xee\x98\x90" };                    // U+e610
        constexpr static inline std::string_view Discord{ "\xee\xa9\xac" };                     // U+ea6c
        constexpr static inline std::string_view Discount{ "\xee\xaf\x89" };                    // U+ebc9
        constexpr static inline std::string_view DisplaySettings{ "\xee\xae\x97" };             // U+eb97
        constexpr static inline std::string_view Diversity_1{ "\xef\xa3\x97" };                 // U+f8d7
        constexpr static inline std::string_view Diversity_2{ "\xef\xa3\x98" };                 // U+f8d8
        constexpr static inline std::string_view Diversity_3{ "\xef\xa3\x99" };                 // U+f8d9
        constexpr static inline std::string_view DndForwardslash{ "\xee\x98\x91" };             // U+e611
        constexpr static inline std::string_view Dns{ "\xee\xa1\xb5" };                         // U+e875
        constexpr static inline std::string_view DoDisturb{ "\xef\x82\x8c" };                   // U+f08c
        constexpr static inline std::string_view DoDisturbAlt{ "\xef\x82\x8d" };                // U+f08d
        constexpr static inline std::string_view DoDisturbOff{ "\xef\x82\x8e" };                // U+f08e
        constexpr static inline std::string_view DoDisturbOn{ "\xef\x82\x8f" };                 // U+f08f
        constexpr static inline std::string_view DoNotDisturb{ "\xee\x98\x92" };                // U+e612
        constexpr static inline std::string_view DoNotDisturbAlt{ "\xee\x98\x91" };             // U+e611
        constexpr static inline std::string_view DoNotDisturbOff{ "\xee\x99\x83" };             // U+e643
        constexpr static inline std::string_view DoNotDisturbOn{ "\xee\x99\x84" };              // U+e644
        constexpr static inline std::string_view DoNotDisturbOnTotalSilence{ "\xee\xbf\xbb" };  // U+effb
        constexpr static inline std::string_view DoNotStep{ "\xef\x86\x9f" };                   // U+f19f
        constexpr static inline std::string_view DoNotTouch{ "\xef\x86\xb0" };                  // U+f1b0
        constexpr static inline std::string_view Dock{ "\xee\x8c\x8e" };                        // U+e30e
        constexpr static inline std::string_view DocumentScanner{ "\xee\x97\xba" };             // U+e5fa
        constexpr static inline std::string_view Domain{ "\xee\x9f\xae" };                      // U+e7ee
        constexpr static inline std::string_view DomainAdd{ "\xee\xad\xa2" };                   // U+eb62
        constexpr static inline std::string_view DomainDisabled{ "\xee\x83\xaf" };              // U+e0ef
        constexpr static inline std::string_view DomainVerification{ "\xee\xbd\x8c" };          // U+ef4c
        constexpr static inline std::string_view Done{ "\xee\xa1\xb6" };                        // U+e876
        constexpr static inline std::string_view DoneAll{ "\xee\xa1\xb7" };                     // U+e877
        constexpr static inline std::string_view DoneOutline{ "\xee\xa4\xaf" };                 // U+e92f
        constexpr static inline std::string_view DonutLarge{ "\xee\xa4\x97" };                  // U+e917
        constexpr static inline std::string_view DonutSmall{ "\xee\xa4\x98" };                  // U+e918
        constexpr static inline std::string_view DoorBack{ "\xee\xbf\xbc" };                    // U+effc
        constexpr static inline std::string_view DoorFront{ "\xee\xbf\xbd" };                   // U+effd
        constexpr static inline std::string_view DoorSliding{ "\xee\xbf\xbe" };                 // U+effe
        constexpr static inline std::string_view Doorbell{ "\xee\xbf\xbf" };                    // U+efff
        constexpr static inline std::string_view DoubleArrow{ "\xee\xa9\x90" };                 // U+ea50
        constexpr static inline std::string_view DownhillSkiing{ "\xee\x94\x89" };              // U+e509
        constexpr static inline std::string_view Download{ "\xef\x82\x90" };                    // U+f090
        constexpr static inline std::string_view DownloadDone{ "\xef\x82\x91" };                // U+f091
        constexpr static inline std::string_view DownloadForOffline{ "\xef\x80\x80" };          // U+f000
        constexpr static inline std::string_view Downloading{ "\xef\x80\x81" };                 // U+f001
        constexpr static inline std::string_view Drafts{ "\xee\x85\x91" };                      // U+e151
        constexpr static inline std::string_view DragHandle{ "\xee\x89\x9d" };                  // U+e25d
        constexpr static inline std::string_view DragIndicator{ "\xee\xa5\x85" };               // U+e945
        constexpr static inline std::string_view Draw{ "\xee\x9d\x86" };                        // U+e746
        constexpr static inline std::string_view DriveEta{ "\xee\x98\x93" };                    // U+e613
        constexpr static inline std::string_view DriveFileMove{ "\xee\x99\xb5" };               // U+e675
        constexpr static inline std::string_view DriveFileMoveOutline{ "\xee\xa6\xa1" };        // U+e9a1
        constexpr static inline std::string_view DriveFileMoveRtl{ "\xee\x9d\xad" };            // U+e76d
        constexpr static inline std::string_view DriveFileRenameOutline{ "\xee\xa6\xa2" };      // U+e9a2
        constexpr static inline std::string_view DriveFolderUpload{ "\xee\xa6\xa3" };           // U+e9a3
        constexpr static inline std::string_view Dry{ "\xef\x86\xb3" };                         // U+f1b3
        constexpr static inline std::string_view DryCleaning{ "\xee\xa9\x98" };                 // U+ea58
        constexpr static inline std::string_view Duo{ "\xee\xa6\xa5" };                         // U+e9a5
        constexpr static inline std::string_view Dvr{ "\xee\x86\xb2" };                         // U+e1b2
        constexpr static inline std::string_view DynamicFeed{ "\xee\xa8\x94" };                 // U+ea14
        constexpr static inline std::string_view DynamicForm{ "\xef\x86\xbf" };                 // U+f1bf
        constexpr static inline std::string_view EMobiledata{ "\xef\x80\x82" };                 // U+f002
        constexpr static inline std::string_view Earbuds{ "\xef\x80\x83" };                     // U+f003
        constexpr static inline std::string_view EarbudsBattery{ "\xef\x80\x84" };              // U+f004
        constexpr static inline std::string_view East{ "\xef\x87\x9f" };                        // U+f1df
        constexpr static inline std::string_view Eco{ "\xee\xa8\xb5" };                         // U+ea35
        constexpr static inline std::string_view EdgesensorHigh{ "\xef\x80\x85" };              // U+f005
        constexpr static inline std::string_view EdgesensorLow{ "\xef\x80\x86" };               // U+f006
        constexpr static inline std::string_view Edit{ "\xee\x8f\x89" };                        // U+e3c9
        constexpr static inline std::string_view EditAttributes{ "\xee\x95\xb8" };              // U+e578
        constexpr static inline std::string_view EditCalendar{ "\xee\x9d\x82" };                // U+e742
        constexpr static inline std::string_view EditDocument{ "\xef\xa2\x8c" };                // U+f88c
        constexpr static inline std::string_view EditLocation{ "\xee\x95\xa8" };                // U+e568
        constexpr static inline std::string_view EditLocationAlt{ "\xee\x87\x85" };             // U+e1c5
        constexpr static inline std::string_view EditNote{ "\xee\x9d\x85" };                    // U+e745
        constexpr static inline std::string_view EditNotifications{ "\xee\x94\xa5" };           // U+e525
        constexpr static inline std::string_view EditOff{ "\xee\xa5\x90" };                     // U+e950
        constexpr static inline std::string_view EditRoad{ "\xee\xbd\x8d" };                    // U+ef4d
        constexpr static inline std::string_view EditSquare{ "\xef\xa2\x8d" };                  // U+f88d
        constexpr static inline std::string_view Egg{ "\xee\xab\x8c" };                         // U+eacc
        constexpr static inline std::string_view EggAlt{ "\xee\xab\x88" };                      // U+eac8
        constexpr static inline std::string_view Eject{ "\xee\xa3\xbb" };                       // U+e8fb
        constexpr static inline std::string_view Elderly{ "\xef\x88\x9a" };                     // U+f21a
        constexpr static inline std::string_view ElderlyWoman{ "\xee\xad\xa9" };                // U+eb69
        constexpr static inline std::string_view ElectricBike{ "\xee\xac\x9b" };                // U+eb1b
        constexpr static inline std::string_view ElectricBolt{ "\xee\xb0\x9c" };                // U+ec1c
        constexpr static inline std::string_view ElectricCar{ "\xee\xac\x9c" };                 // U+eb1c
        constexpr static inline std::string_view ElectricMeter{ "\xee\xb0\x9b" };               // U+ec1b
        constexpr static inline std::string_view ElectricMoped{ "\xee\xac\x9d" };               // U+eb1d
        constexpr static inline std::string_view ElectricRickshaw{ "\xee\xac\x9e" };            // U+eb1e
        constexpr static inline std::string_view ElectricScooter{ "\xee\xac\x9f" };             // U+eb1f
        constexpr static inline std::string_view ElectricalServices{ "\xef\x84\x82" };          // U+f102
        constexpr static inline std::string_view Elevator{ "\xef\x86\xa0" };                    // U+f1a0
        constexpr static inline std::string_view Email{ "\xee\x82\xbe" };                       // U+e0be
        constexpr static inline std::string_view Emergency{ "\xee\x87\xab" };                   // U+e1eb
        constexpr static inline std::string_view EmergencyRecording{ "\xee\xaf\xb4" };          // U+ebf4
        constexpr static inline std::string_view EmergencyShare{ "\xee\xaf\xb6" };              // U+ebf6
        constexpr static inline std::string_view EmojiEmotions{ "\xee\xa8\xa2" };               // U+ea22
        constexpr static inline std::string_view EmojiEvents{ "\xee\xa8\xa3" };                 // U+ea23
        constexpr static inline std::string_view EmojiFlags{ "\xee\xa8\x9a" };                  // U+ea1a
        constexpr static inline std::string_view EmojiFoodBeverage{ "\xee\xa8\x9b" };           // U+ea1b
        constexpr static inline std::string_view EmojiNature{ "\xee\xa8\x9c" };                 // U+ea1c
        constexpr static inline std::string_view EmojiObjects{ "\xee\xa8\xa4" };                // U+ea24
        constexpr static inline std::string_view EmojiPeople{ "\xee\xa8\x9d" };                 // U+ea1d
        constexpr static inline std::string_view EmojiSymbols{ "\xee\xa8\x9e" };                // U+ea1e
        constexpr static inline std::string_view EmojiTransportation{ "\xee\xa8\x9f" };         // U+ea1f
        constexpr static inline std::string_view EnergySavingsLeaf{ "\xee\xb0\x9a" };           // U+ec1a
        constexpr static inline std::string_view Engineering{ "\xee\xa8\xbd" };                 // U+ea3d
        constexpr static inline std::string_view EnhancePhotoTranslate{ "\xee\xa3\xbc" };       // U+e8fc
        constexpr static inline std::string_view EnhancedEncryption{ "\xee\x98\xbf" };          // U+e63f
        constexpr static inline std::string_view Equalizer{ "\xee\x80\x9d" };                   // U+e01d
        constexpr static inline std::string_view Error{ "\xee\x80\x80" };                       // U+e000
        constexpr static inline std::string_view ErrorOutline{ "\xee\x80\x81" };                // U+e001
        constexpr static inline std::string_view Escalator{ "\xef\x86\xa1" };                   // U+f1a1
        constexpr static inline std::string_view EscalatorWarning{ "\xef\x86\xac" };            // U+f1ac
        constexpr static inline std::string_view Euro{ "\xee\xa8\x95" };                        // U+ea15
        constexpr static inline std::string_view EuroSymbol{ "\xee\xa4\xa6" };                  // U+e926
        constexpr static inline std::string_view EvStation{ "\xee\x95\xad" };                   // U+e56d
        constexpr static inline std::string_view Event{ "\xee\xa1\xb8" };                       // U+e878
        constexpr static inline std::string_view EventAvailable{ "\xee\x98\x94" };              // U+e614
        constexpr static inline std::string_view EventBusy{ "\xee\x98\x95" };                   // U+e615
        constexpr static inline std::string_view EventNote{ "\xee\x98\x96" };                   // U+e616
        constexpr static inline std::string_view EventRepeat{ "\xee\xad\xbb" };                 // U+eb7b
        constexpr static inline std::string_view EventSeat{ "\xee\xa4\x83" };                   // U+e903
        constexpr static inline std::string_view ExitToApp{ "\xee\xa1\xb9" };                   // U+e879
        constexpr static inline std::string_view Expand{ "\xee\xa5\x8f" };                      // U+e94f
        constexpr static inline std::string_view ExpandCircleDown{ "\xee\x9f\x8d" };            // U+e7cd
        constexpr static inline std::string_view ExpandLess{ "\xee\x97\x8e" };                  // U+e5ce
        constexpr static inline std::string_view ExpandMore{ "\xee\x97\x8f" };                  // U+e5cf
        constexpr static inline std::string_view Explicit{ "\xee\x80\x9e" };                    // U+e01e
        constexpr static inline std::string_view Explore{ "\xee\xa1\xba" };                     // U+e87a
        constexpr static inline std::string_view ExploreOff{ "\xee\xa6\xa8" };                  // U+e9a8
        constexpr static inline std::string_view Exposure{ "\xee\x8f\x8a" };                    // U+e3ca
        constexpr static inline std::string_view ExposureMinus_1{ "\xee\x8f\x8b" };             // U+e3cb
        constexpr static inline std::string_view ExposureMinus_2{ "\xee\x8f\x8c" };             // U+e3cc
        constexpr static inline std::string_view ExposureNeg_1{ "\xee\x8f\x8b" };               // U+e3cb
        constexpr static inline std::string_view ExposureNeg_2{ "\xee\x8f\x8c" };               // U+e3cc
        constexpr static inline std::string_view ExposurePlus_1{ "\xee\x8f\x8d" };              // U+e3cd
        constexpr static inline std::string_view ExposurePlus_2{ "\xee\x8f\x8e" };              // U+e3ce
        constexpr static inline std::string_view ExposureZero{ "\xee\x8f\x8f" };                // U+e3cf
        constexpr static inline std::string_view Extension{ "\xee\xa1\xbb" };                   // U+e87b
        constexpr static inline std::string_view ExtensionOff{ "\xee\x93\xb5" };                // U+e4f5
        constexpr static inline std::string_view Face{ "\xee\xa1\xbc" };                        // U+e87c
        constexpr static inline std::string_view Face_2{ "\xef\xa3\x9a" };                      // U+f8da
        constexpr static inline std::string_view Face_3{ "\xef\xa3\x9b" };                      // U+f8db
        constexpr static inline std::string_view Face_4{ "\xef\xa3\x9c" };                      // U+f8dc
        constexpr static inline std::string_view Face_5{ "\xef\xa3\x9d" };                      // U+f8dd
        constexpr static inline std::string_view Face_6{ "\xef\xa3\x9e" };                      // U+f8de
        constexpr static inline std::string_view FaceRetouchingNatural{ "\xee\xbd\x8e" };       // U+ef4e
        constexpr static inline std::string_view FaceRetouchingOff{ "\xef\x80\x87" };           // U+f007
        constexpr static inline std::string_view Facebook{ "\xef\x88\xb4" };                    // U+f234
        constexpr static inline std::string_view FactCheck{ "\xef\x83\x85" };                   // U+f0c5
        constexpr static inline std::string_view Factory{ "\xee\xae\xbc" };                     // U+ebbc
        constexpr static inline std::string_view FamilyRestroom{ "\xef\x86\xa2" };              // U+f1a2
        constexpr static inline std::string_view FastForward{ "\xee\x80\x9f" };                 // U+e01f
        constexpr static inline std::string_view FastRewind{ "\xee\x80\xa0" };                  // U+e020
        constexpr static inline std::string_view Fastfood{ "\xee\x95\xba" };                    // U+e57a
        constexpr static inline std::string_view Favorite{ "\xee\xa1\xbd" };                    // U+e87d
        constexpr static inline std::string_view FavoriteBorder{ "\xee\xa1\xbe" };              // U+e87e
        constexpr static inline std::string_view FavoriteOutline{ "\xee\xa1\xbe" };             // U+e87e
        constexpr static inline std::string_view Fax{ "\xee\xab\x98" };                         // U+ead8
        constexpr static inline std::string_view FeaturedPlayList{ "\xee\x81\xad" };            // U+e06d
        constexpr static inline std::string_view FeaturedVideo{ "\xee\x81\xae" };               // U+e06e
        constexpr static inline std::string_view Feed{ "\xef\x80\x89" };                        // U+f009
        constexpr static inline std::string_view Feedback{ "\xee\xa1\xbf" };                    // U+e87f
        constexpr static inline std::string_view Female{ "\xee\x96\x90" };                      // U+e590
        constexpr static inline std::string_view Fence{ "\xef\x87\xb6" };                       // U+f1f6
        constexpr static inline std::string_view Festival{ "\xee\xa9\xa8" };                    // U+ea68
        constexpr static inline std::string_view FiberDvr{ "\xee\x81\x9d" };                    // U+e05d
        constexpr static inline std::string_view FiberManualRecord{ "\xee\x81\xa1" };           // U+e061
        constexpr static inline std::string_view FiberNew{ "\xee\x81\x9e" };                    // U+e05e
        constexpr static inline std::string_view FiberPin{ "\xee\x81\xaa" };                    // U+e06a
        constexpr static inline std::string_view FiberSmartRecord{ "\xee\x81\xa2" };            // U+e062
        constexpr static inline std::string_view FileCopy{ "\xee\x85\xb3" };                    // U+e173
        constexpr static inline std::string_view FileDownload{ "\xee\x8b\x84" };                // U+e2c4
        constexpr static inline std::string_view FileDownloadDone{ "\xee\xa6\xaa" };            // U+e9aa
        constexpr static inline std::string_view FileDownloadOff{ "\xee\x93\xbe" };             // U+e4fe
        constexpr static inline std::string_view FileOpen{ "\xee\xab\xb3" };                    // U+eaf3
        constexpr static inline std::string_view FilePresent{ "\xee\xa8\x8e" };                 // U+ea0e
        constexpr static inline std::string_view FileUpload{ "\xee\x8b\x86" };                  // U+e2c6
        constexpr static inline std::string_view FileUploadOff{ "\xef\xa2\x86" };               // U+f886
        constexpr static inline std::string_view Filter{ "\xee\x8f\x93" };                      // U+e3d3
        constexpr static inline std::string_view Filter_1{ "\xee\x8f\x90" };                    // U+e3d0
        constexpr static inline std::string_view Filter_2{ "\xee\x8f\x91" };                    // U+e3d1
        constexpr static inline std::string_view Filter_3{ "\xee\x8f\x92" };                    // U+e3d2
        constexpr static inline std::string_view Filter_4{ "\xee\x8f\x94" };                    // U+e3d4
        constexpr static inline std::string_view Filter_5{ "\xee\x8f\x95" };                    // U+e3d5
        constexpr static inline std::string_view Filter_6{ "\xee\x8f\x96" };                    // U+e3d6
        constexpr static inline std::string_view Filter_7{ "\xee\x8f\x97" };                    // U+e3d7
        constexpr static inline std::string_view Filter_8{ "\xee\x8f\x98" };                    // U+e3d8
        constexpr static inline std::string_view Filter_9{ "\xee\x8f\x99" };                    // U+e3d9
        constexpr static inline std::string_view Filter_9Plus{ "\xee\x8f\x9a" };                // U+e3da
        constexpr static inline std::string_view FilterAlt{ "\xee\xbd\x8f" };                   // U+ef4f
        constexpr static inline std::string_view FilterAltOff{ "\xee\xac\xb2" };                // U+eb32
        constexpr static inline std::string_view FilterBAndW{ "\xee\x8f\x9b" };                 // U+e3db
        constexpr static inline std::string_view FilterCenterFocus{ "\xee\x8f\x9c" };           // U+e3dc
        constexpr static inline std::string_view FilterDrama{ "\xee\x8f\x9d" };                 // U+e3dd
        constexpr static inline std::string_view FilterFrames{ "\xee\x8f\x9e" };                // U+e3de
        constexpr static inline std::string_view FilterHdr{ "\xee\x8f\x9f" };                   // U+e3df
        constexpr static inline std::string_view FilterList{ "\xee\x85\x92" };                  // U+e152
        constexpr static inline std::string_view FilterListAlt{ "\xee\xa5\x8e" };               // U+e94e
        constexpr static inline std::string_view FilterListOff{ "\xee\xad\x97" };               // U+eb57
        constexpr static inline std::string_view FilterNone{ "\xee\x8f\xa0" };                  // U+e3e0
        constexpr static inline std::string_view FilterTiltShift{ "\xee\x8f\xa2" };             // U+e3e2
        constexpr static inline std::string_view FilterVintage{ "\xee\x8f\xa3" };               // U+e3e3
        constexpr static inline std::string_view FindInPage{ "\xee\xa2\x80" };                  // U+e880
        constexpr static inline std::string_view FindReplace{ "\xee\xa2\x81" };                 // U+e881
        constexpr static inline std::string_view Fingerprint{ "\xee\xa4\x8d" };                 // U+e90d
        constexpr static inline std::string_view FireExtinguisher{ "\xef\x87\x98" };            // U+f1d8
        constexpr static inline std::string_view FireHydrant{ "\xef\x86\xa3" };                 // U+f1a3
        constexpr static inline std::string_view FireHydrantAlt{ "\xef\xa3\xb1" };              // U+f8f1
        constexpr static inline std::string_view FireTruck{ "\xef\xa3\xb2" };                   // U+f8f2
        constexpr static inline std::string_view Fireplace{ "\xee\xa9\x83" };                   // U+ea43
        constexpr static inline std::string_view FirstPage{ "\xee\x97\x9c" };                   // U+e5dc
        constexpr static inline std::string_view FitScreen{ "\xee\xa8\x90" };                   // U+ea10
        constexpr static inline std::string_view Fitbit{ "\xee\xa0\xab" };                      // U+e82b
        constexpr static inline std::string_view FitnessCenter{ "\xee\xad\x83" };               // U+eb43
        constexpr static inline std::string_view Flag{ "\xee\x85\x93" };                        // U+e153
        constexpr static inline std::string_view FlagCircle{ "\xee\xab\xb8" };                  // U+eaf8
        constexpr static inline std::string_view Flaky{ "\xee\xbd\x90" };                       // U+ef50
        constexpr static inline std::string_view Flare{ "\xee\x8f\xa4" };                       // U+e3e4
        constexpr static inline std::string_view FlashAuto{ "\xee\x8f\xa5" };                   // U+e3e5
        constexpr static inline std::string_view FlashOff{ "\xee\x8f\xa6" };                    // U+e3e6
        constexpr static inline std::string_view FlashOn{ "\xee\x8f\xa7" };                     // U+e3e7
        constexpr static inline std::string_view FlashlightOff{ "\xef\x80\x8a" };               // U+f00a
        constexpr static inline std::string_view FlashlightOn{ "\xef\x80\x8b" };                // U+f00b
        constexpr static inline std::string_view Flatware{ "\xef\x80\x8c" };                    // U+f00c
        constexpr static inline std::string_view Flight{ "\xee\x94\xb9" };                      // U+e539
        constexpr static inline std::string_view FlightClass{ "\xee\x9f\x8b" };                 // U+e7cb
        constexpr static inline std::string_view FlightLand{ "\xee\xa4\x84" };                  // U+e904
        constexpr static inline std::string_view FlightTakeoff{ "\xee\xa4\x85" };               // U+e905
        constexpr static inline std::string_view Flip{ "\xee\x8f\xa8" };                        // U+e3e8
        constexpr static inline std::string_view FlipCameraAndroid{ "\xee\xa8\xb7" };           // U+ea37
        constexpr static inline std::string_view FlipCameraIos{ "\xee\xa8\xb8" };               // U+ea38
        constexpr static inline std::string_view FlipToBack{ "\xee\xa2\x82" };                  // U+e882
        constexpr static inline std::string_view FlipToFront{ "\xee\xa2\x83" };                 // U+e883
        constexpr static inline std::string_view Flood{ "\xee\xaf\xa6" };                       // U+ebe6
        constexpr static inline std::string_view Flourescent{ "\xef\x80\x8d" };                 // U+f00d
        constexpr static inline std::string_view Fluorescent{ "\xee\xb0\xb1" };                 // U+ec31
        constexpr static inline std::string_view FlutterDash{ "\xee\x80\x8b" };                 // U+e00b
        constexpr static inline std::string_view FmdBad{ "\xef\x80\x8e" };                      // U+f00e
        constexpr static inline std::string_view FmdGood{ "\xef\x80\x8f" };                     // U+f00f
        constexpr static inline std::string_view Foggy{ "\xee\xa0\x98" };                       // U+e818
        constexpr static inline std::string_view Folder{ "\xee\x8b\x87" };                      // U+e2c7
        constexpr static inline std::string_view FolderCopy{ "\xee\xae\xbd" };                  // U+ebbd
        constexpr static inline std::string_view FolderDelete{ "\xee\xac\xb4" };                // U+eb34
        constexpr static inline std::string_view FolderOff{ "\xee\xae\x83" };                   // U+eb83
        constexpr static inline std::string_view FolderOpen{ "\xee\x8b\x88" };                  // U+e2c8
        constexpr static inline std::string_view FolderShared{ "\xee\x8b\x89" };                // U+e2c9
        constexpr static inline std::string_view FolderSpecial{ "\xee\x98\x97" };               // U+e617
        constexpr static inline std::string_view FolderZip{ "\xee\xac\xac" };                   // U+eb2c
        constexpr static inline std::string_view FollowTheSigns{ "\xef\x88\xa2" };              // U+f222
        constexpr static inline std::string_view FontDownload{ "\xee\x85\xa7" };                // U+e167
        constexpr static inline std::string_view FontDownloadOff{ "\xee\x93\xb9" };             // U+e4f9
        constexpr static inline std::string_view FoodBank{ "\xef\x87\xb2" };                    // U+f1f2
        constexpr static inline std::string_view Forest{ "\xee\xaa\x99" };                      // U+ea99
        constexpr static inline std::string_view ForkLeft{ "\xee\xae\xa0" };                    // U+eba0
        constexpr static inline std::string_view ForkRight{ "\xee\xae\xac" };                   // U+ebac
        constexpr static inline std::string_view Forklift{ "\xef\xa1\xa8" };                    // U+f868
        constexpr static inline std::string_view FormatAlignCenter{ "\xee\x88\xb4" };           // U+e234
        constexpr static inline std::string_view FormatAlignJustify{ "\xee\x88\xb5" };          // U+e235
        constexpr static inline std::string_view FormatAlignLeft{ "\xee\x88\xb6" };             // U+e236
        constexpr static inline std::string_view FormatAlignRight{ "\xee\x88\xb7" };            // U+e237
        constexpr static inline std::string_view FormatBold{ "\xee\x88\xb8" };                  // U+e238
        constexpr static inline std::string_view FormatClear{ "\xee\x88\xb9" };                 // U+e239
        constexpr static inline std::string_view FormatColorFill{ "\xee\x88\xba" };             // U+e23a
        constexpr static inline std::string_view FormatColorReset{ "\xee\x88\xbb" };            // U+e23b
        constexpr static inline std::string_view FormatColorText{ "\xee\x88\xbc" };             // U+e23c
        constexpr static inline std::string_view FormatIndentDecrease{ "\xee\x88\xbd" };        // U+e23d
        constexpr static inline std::string_view FormatIndentIncrease{ "\xee\x88\xbe" };        // U+e23e
        constexpr static inline std::string_view FormatItalic{ "\xee\x88\xbf" };                // U+e23f
        constexpr static inline std::string_view FormatLineSpacing{ "\xee\x89\x80" };           // U+e240
        constexpr static inline std::string_view FormatListBulleted{ "\xee\x89\x81" };          // U+e241
        constexpr static inline std::string_view FormatListBulletedAdd{ "\xef\xa1\x89" };       // U+f849
        constexpr static inline std::string_view FormatListNumbered{ "\xee\x89\x82" };          // U+e242
        constexpr static inline std::string_view FormatListNumberedRtl{ "\xee\x89\xa7" };       // U+e267
        constexpr static inline std::string_view FormatOverline{ "\xee\xad\xa5" };              // U+eb65
        constexpr static inline std::string_view FormatPaint{ "\xee\x89\x83" };                 // U+e243
        constexpr static inline std::string_view FormatQuote{ "\xee\x89\x84" };                 // U+e244
        constexpr static inline std::string_view FormatShapes{ "\xee\x89\x9e" };                // U+e25e
        constexpr static inline std::string_view FormatSize{ "\xee\x89\x85" };                  // U+e245
        constexpr static inline std::string_view FormatStrikethrough{ "\xee\x89\x86" };         // U+e246
        constexpr static inline std::string_view FormatTextdirectionLToR{ "\xee\x89\x87" };     // U+e247
        constexpr static inline std::string_view FormatTextdirectionRToL{ "\xee\x89\x88" };     // U+e248
        constexpr static inline std::string_view FormatUnderline{ "\xee\x89\x89" };             // U+e249
        constexpr static inline std::string_view FormatUnderlined{ "\xee\x89\x89" };            // U+e249
        constexpr static inline std::string_view Fort{ "\xee\xaa\xad" };                        // U+eaad
        constexpr static inline std::string_view Forum{ "\xee\x82\xbf" };                       // U+e0bf
        constexpr static inline std::string_view Forward{ "\xee\x85\x94" };                     // U+e154
        constexpr static inline std::string_view Forward_10{ "\xee\x81\x96" };                  // U+e056
        constexpr static inline std::string_view Forward_30{ "\xee\x81\x97" };                  // U+e057
        constexpr static inline std::string_view Forward_5{ "\xee\x81\x98" };                   // U+e058
        constexpr static inline std::string_view ForwardToInbox{ "\xef\x86\x87" };              // U+f187
        constexpr static inline std::string_view Foundation{ "\xef\x88\x80" };                  // U+f200
        constexpr static inline std::string_view FreeBreakfast{ "\xee\xad\x84" };               // U+eb44
        constexpr static inline std::string_view FreeCancellation{ "\xee\x9d\x88" };            // U+e748
        constexpr static inline std::string_view FrontHand{ "\xee\x9d\xa9" };                   // U+e769
        constexpr static inline std::string_view FrontLoader{ "\xef\xa1\xa9" };                 // U+f869
        constexpr static inline std::string_view Fullscreen{ "\xee\x97\x90" };                  // U+e5d0
        constexpr static inline std::string_view FullscreenExit{ "\xee\x97\x91" };              // U+e5d1
        constexpr static inline std::string_view Functions{ "\xee\x89\x8a" };                   // U+e24a
        constexpr static inline std::string_view GMobiledata{ "\xef\x80\x90" };                 // U+f010
        constexpr static inline std::string_view GTranslate{ "\xee\xa4\xa7" };                  // U+e927
        constexpr static inline std::string_view Gamepad{ "\xee\x8c\x8f" };                     // U+e30f
        constexpr static inline std::string_view Games{ "\xee\x80\xa1" };                       // U+e021
        constexpr static inline std::string_view Garage{ "\xef\x80\x91" };                      // U+f011
        constexpr static inline std::string_view GasMeter{ "\xee\xb0\x99" };                    // U+ec19
        constexpr static inline std::string_view Gavel{ "\xee\xa4\x8e" };                       // U+e90e
        constexpr static inline std::string_view GeneratingTokens{ "\xee\x9d\x89" };            // U+e749
        constexpr static inline std::string_view Gesture{ "\xee\x85\x95" };                     // U+e155
        constexpr static inline std::string_view GetApp{ "\xee\xa2\x84" };                      // U+e884
        constexpr static inline std::string_view Gif{ "\xee\xa4\x88" };                         // U+e908
        constexpr static inline std::string_view GifBox{ "\xee\x9e\xa3" };                      // U+e7a3
        constexpr static inline std::string_view Girl{ "\xee\xad\xa8" };                        // U+eb68
        constexpr static inline std::string_view Gite{ "\xee\x96\x8b" };                        // U+e58b
        constexpr static inline std::string_view Goat
        {
            "\xf4\x8f\xbf\};xbd"                                                                                  // U+10fffd
                constexpr static inline std::string_view GolfCourse{ "\xee\xad\x85" };                            // U+eb45
            constexpr static inline std::string_view GppBad{ "\xef\x80\x92" };                                    // U+f012
            constexpr static inline std::string_view GppGood{ "\xef\x80\x93" };                                   // U+f013
            constexpr static inline std::string_view GppMaybe{ "\xef\x80\x94" };                                  // U+f014
            constexpr static inline std::string_view GpsFixed{ "\xee\x86\xb3" };                                  // U+e1b3
            constexpr static inline std::string_view GpsNotFixed{ "\xee\x86\xb4" };                               // U+e1b4
            constexpr static inline std::string_view GpsOff{ "\xee\x86\xb5" };                                    // U+e1b5
            constexpr static inline std::string_view Grade{ "\xee\xa2\x85" };                                     // U+e885
            constexpr static inline std::string_view Gradient{ "\xee\x8f\xa9" };                                  // U+e3e9
            constexpr static inline std::string_view Grading{ "\xee\xa9\x8f" };                                   // U+ea4f
            constexpr static inline std::string_view Grain{ "\xee\x8f\xaa" };                                     // U+e3ea
            constexpr static inline std::string_view GraphicEq{ "\xee\x86\xb8" };                                 // U+e1b8
            constexpr static inline std::string_view Grass{ "\xef\x88\x85" };                                     // U+f205
            constexpr static inline std::string_view Grid_3x3{ "\xef\x80\x95" };                                  // U+f015
            constexpr static inline std::string_view Grid_4x4{ "\xef\x80\x96" };                                  // U+f016
            constexpr static inline std::string_view GridGoldenratio{ "\xef\x80\x97" };                           // U+f017
            constexpr static inline std::string_view GridOff{ "\xee\x8f\xab" };                                   // U+e3eb
            constexpr static inline std::string_view GridOn{ "\xee\x8f\xac" };                                    // U+e3ec
            constexpr static inline std::string_view GridView{ "\xee\xa6\xb0" };                                  // U+e9b0
            constexpr static inline std::string_view Group{ "\xee\x9f\xaf" };                                     // U+e7ef
            constexpr static inline std::string_view GroupAdd{ "\xee\x9f\xb0" };                                  // U+e7f0
            constexpr static inline std::string_view GroupOff{ "\xee\x9d\x87" };                                  // U+e747
            constexpr static inline std::string_view GroupRemove{ "\xee\x9e\xad" };                               // U+e7ad
            constexpr static inline std::string_view GroupWork{ "\xee\xa2\x86" };                                 // U+e886
            constexpr static inline std::string_view Groups{ "\xef\x88\xb3" };                                    // U+f233
            constexpr static inline std::string_view Groups_2{ "\xef\xa3\x9f" };                                  // U+f8df
            constexpr static inline std::string_view Groups_3{ "\xef\xa3\xa0" };                                  // U+f8e0
            constexpr static inline std::string_view HMobiledata{ "\xef\x80\x98" };                               // U+f018
            constexpr static inline std::string_view HPlusMobiledata{ "\xef\x80\x99" };                           // U+f019
            constexpr static inline std::string_view Hail{ "\xee\xa6\xb1" };                                      // U+e9b1
            constexpr static inline std::string_view Handshake{ "\xee\xaf\x8b" };                                 // U+ebcb
            constexpr static inline std::string_view Handyman{ "\xef\x84\x8b" };                                  // U+f10b
            constexpr static inline std::string_view Hardware{ "\xee\xa9\x99" };                                  // U+ea59
            constexpr static inline std::string_view Hd{ "\xee\x81\x92" };                                        // U+e052
            constexpr static inline std::string_view HdrAuto{ "\xef\x80\x9a" };                                   // U+f01a
            constexpr static inline std::string_view HdrAutoSelect{ "\xef\x80\x9b" };                             // U+f01b
            constexpr static inline std::string_view HdrEnhancedSelect{ "\xee\xbd\x91" };                         // U+ef51
            constexpr static inline std::string_view HdrOff{ "\xee\x8f\xad" };                                    // U+e3ed
            constexpr static inline std::string_view HdrOffSelect{ "\xef\x80\x9c" };                              // U+f01c
            constexpr static inline std::string_view HdrOn{ "\xee\x8f\xae" };                                     // U+e3ee
            constexpr static inline std::string_view HdrOnSelect{ "\xef\x80\x9d" };                               // U+f01d
            constexpr static inline std::string_view HdrPlus{ "\xef\x80\x9e" };                                   // U+f01e
            constexpr static inline std::string_view HdrStrong{ "\xee\x8f\xb1" };                                 // U+e3f1
            constexpr static inline std::string_view HdrWeak{ "\xee\x8f\xb2" };                                   // U+e3f2
            constexpr static inline std::string_view Headphones{ "\xef\x80\x9f" };                                // U+f01f
            constexpr static inline std::string_view HeadphonesBattery{ "\xef\x80\xa0" };                         // U+f020
            constexpr static inline std::string_view Headset{ "\xee\x8c\x90" };                                   // U+e310
            constexpr static inline std::string_view HeadsetMic{ "\xee\x8c\x91" };                                // U+e311
            constexpr static inline std::string_view HeadsetOff{ "\xee\x8c\xba" };                                // U+e33a
            constexpr static inline std::string_view Healing{ "\xee\x8f\xb3" };                                   // U+e3f3
            constexpr static inline std::string_view HealthAndSafety{ "\xee\x87\x95" };                           // U+e1d5
            constexpr static inline std::string_view Hearing{ "\xee\x80\xa3" };                                   // U+e023
            constexpr static inline std::string_view HearingDisabled{ "\xef\x84\x84" };                           // U+f104
            constexpr static inline std::string_view HeartBroken{ "\xee\xab\x82" };                               // U+eac2
            constexpr static inline std::string_view HeatPump{ "\xee\xb0\x98" };                                  // U+ec18
            constexpr static inline std::string_view Height{ "\xee\xa8\x96" };                                    // U+ea16
            constexpr static inline std::string_view Help{ "\xee\xa2\x87" };                                      // U+e887
            constexpr static inline std::string_view HelpCenter{ "\xef\x87\x80" };                                // U+f1c0
            constexpr static inline std::string_view HelpOutline{ "\xee\xa3\xbd" };                               // U+e8fd
            constexpr static inline std::string_view Hevc{ "\xef\x80\xa1" };                                      // U+f021
            constexpr static inline std::string_view Hexagon{ "\xee\xac\xb9" };                                   // U+eb39
            constexpr static inline std::string_view HideImage{ "\xef\x80\xa2" };                                 // U+f022
            constexpr static inline std::string_view HideSource{ "\xef\x80\xa3" };                                // U+f023
            constexpr static inline std::string_view HighQuality{ "\xee\x80\xa4" };                               // U+e024
            constexpr static inline std::string_view Highlight{ "\xee\x89\x9f" };                                 // U+e25f
            constexpr static inline std::string_view HighlightAlt{ "\xee\xbd\x92" };                              // U+ef52
            constexpr static inline std::string_view HighlightOff{ "\xee\xa2\x88" };                              // U+e888
            constexpr static inline std::string_view HighlightRemove{ "\xee\xa2\x88" };                           // U+e888
            constexpr static inline std::string_view Hiking{ "\xee\x94\x8a" };                                    // U+e50a
            constexpr static inline std::string_view History{ "\xee\xa2\x89" };                                   // U+e889
            constexpr static inline std::string_view HistoryEdu{ "\xee\xa8\xbe" };                                // U+ea3e
            constexpr static inline std::string_view HistoryToggleOff{ "\xef\x85\xbd" };                          // U+f17d
            constexpr static inline std::string_view Hive{ "\xee\xaa\xa6" };                                      // U+eaa6
            constexpr static inline std::string_view Hls{ "\xee\xae\x8a" };                                       // U+eb8a
            constexpr static inline std::string_view HlsOff{ "\xee\xae\x8c" };                                    // U+eb8c
            constexpr static inline std::string_view HolidayVillage{ "\xee\x96\x8a" };                            // U+e58a
            constexpr static inline std::string_view Home{ "\xee\xa2\x8a" };                                      // U+e88a
            constexpr static inline std::string_view HomeFilled{ "\xee\xa6\xb2" };                                // U+e9b2
            constexpr static inline std::string_view HomeMax{ "\xef\x80\xa4" };                                   // U+f024
            constexpr static inline std::string_view HomeMini{ "\xef\x80\xa5" };                                  // U+f025
            constexpr static inline std::string_view HomeRepairService{ "\xef\x84\x80" };                         // U+f100
            constexpr static inline std::string_view HomeWork{ "\xee\xa8\x89" };                                  // U+ea09
            constexpr static inline std::string_view HorizontalDistribute{ "\xee\x80\x94" };                      // U+e014
            constexpr static inline std::string_view HorizontalRule{ "\xef\x84\x88" };                            // U+f108
            constexpr static inline std::string_view HorizontalSplit{ "\xee\xa5\x87" };                           // U+e947
            constexpr static inline std::string_view HotTub{ "\xee\xad\x86" };                                    // U+eb46
            constexpr static inline std::string_view Hotel{ "\xee\x94\xba" };                                     // U+e53a
            constexpr static inline std::string_view HotelClass{ "\xee\x9d\x83" };                                // U+e743
            constexpr static inline std::string_view HourglassBottom{ "\xee\xa9\x9c" };                           // U+ea5c
            constexpr static inline std::string_view HourglassDisabled{ "\xee\xbd\x93" };                         // U+ef53
            constexpr static inline std::string_view HourglassEmpty{ "\xee\xa2\x8b" };                            // U+e88b
            constexpr static inline std::string_view HourglassFull{ "\xee\xa2\x8c" };                             // U+e88c
            constexpr static inline std::string_view HourglassTop{ "\xee\xa9\x9b" };                              // U+ea5b
            constexpr static inline std::string_view House{ "\xee\xa9\x84" };                                     // U+ea44
            constexpr static inline std::string_view HouseSiding{ "\xef\x88\x82" };                               // U+f202
            constexpr static inline std::string_view Houseboat{ "\xee\x96\x84" };                                 // U+e584
            constexpr static inline std::string_view HowToReg{ "\xee\x85\xb4" };                                  // U+e174
            constexpr static inline std::string_view HowToVote{ "\xee\x85\xb5" };                                 // U+e175
            constexpr static inline std::string_view Html{ "\xee\xad\xbe" };                                      // U+eb7e
            constexpr static inline std::string_view Http{ "\xee\xa4\x82" };                                      // U+e902
            constexpr static inline std::string_view Https{ "\xee\xa2\x8d" };                                     // U+e88d
            constexpr static inline std::string_view Hub{ "\xee\xa7\xb4" };                                       // U+e9f4
            constexpr static inline std::string_view Hvac{ "\xef\x84\x8e" };                                      // U+f10e
            constexpr static inline std::string_view IceSkating{ "\xee\x94\x8b" };                                // U+e50b
            constexpr static inline std::string_view Icecream{ "\xee\xa9\xa9" };                                  // U+ea69
            constexpr static inline std::string_view Image{ "\xee\x8f\xb4" };                                     // U+e3f4
            constexpr static inline std::string_view ImageAspectRatio{ "\xee\x8f\xb5" };                          // U+e3f5
            constexpr static inline std::string_view ImageNotSupported{ "\xef\x84\x96" };                         // U+f116
            constexpr static inline std::string_view ImageSearch{ "\xee\x90\xbf" };                               // U+e43f
            constexpr static inline std::string_view ImagesearchRoller{ "\xee\xa6\xb4" };                         // U+e9b4
            constexpr static inline std::string_view ImportContacts{ "\xee\x83\xa0" };                            // U+e0e0
            constexpr static inline std::string_view ImportExport{ "\xee\x83\x83" };                              // U+e0c3
            constexpr static inline std::string_view ImportantDevices{ "\xee\xa4\x92" };                          // U+e912
            constexpr static inline std::string_view Inbox{ "\xee\x85\x96" };                                     // U+e156
            constexpr static inline std::string_view IncompleteCircle{ "\xee\x9e\x9b" };                          // U+e79b
            constexpr static inline std::string_view IndeterminateCheckBox{ "\xee\xa4\x89" };                     // U+e909
            constexpr static inline std::string_view Info{ "\xee\xa2\x8e" };                                      // U+e88e
            constexpr static inline std::string_view InfoOutline{ "\xee\xa2\x8f" };                               // U+e88f
            constexpr static inline std::string_view Input{ "\xee\xa2\x90" };                                     // U+e890
            constexpr static inline std::string_view InsertChart{ "\xee\x89\x8b" };                               // U+e24b
            constexpr static inline std::string_view InsertChartOutlined{ "\xee\x89\xaa" };                       // U+e26a
            constexpr static inline std::string_view InsertComment{ "\xee\x89\x8c" };                             // U+e24c
            constexpr static inline std::string_view InsertDriveFile{ "\xee\x89\x8d" };                           // U+e24d
            constexpr static inline std::string_view InsertEmoticon{ "\xee\x89\x8e" };                            // U+e24e
            constexpr static inline std::string_view InsertInvitation{ "\xee\x89\x8f" };                          // U+e24f
            constexpr static inline std::string_view InsertLink{ "\xee\x89\x90" };                                // U+e250
            constexpr static inline std::string_view InsertPageBreak{ "\xee\xab\x8a" };                           // U+eaca
            constexpr static inline std::string_view InsertPhoto{ "\xee\x89\x91" };                               // U+e251
            constexpr static inline std::string_view Insights{ "\xef\x82\x92" };                                  // U+f092
            constexpr static inline std::string_view InstallDesktop{ "\xee\xad\xb1" };                            // U+eb71
            constexpr static inline std::string_view InstallMobile{ "\xee\xad\xb2" };                             // U+eb72
            constexpr static inline std::string_view IntegrationInstructions{ "\xee\xbd\x94" };                   // U+ef54
            constexpr static inline std::string_view Interests{ "\xee\x9f\x88" };                                 // U+e7c8
            constexpr static inline std::string_view InterpreterMode{ "\xee\xa0\xbb" };                           // U+e83b
            constexpr static inline std::string_view Inventory{ "\xee\x85\xb9" };                                 // U+e179
            constexpr static inline std::string_view Inventory_2{ "\xee\x86\xa1" };                               // U+e1a1
            constexpr static inline std::string_view InvertColors{ "\xee\xa2\x91" };                              // U+e891
            constexpr static inline std::string_view InvertColorsOff{ "\xee\x83\x84" };                           // U+e0c4
            constexpr static inline std::string_view InvertColorsOn{ "\xee\xa2\x91" };                            // U+e891
            constexpr static inline std::string_view IosShare{ "\xee\x9a\xb8" };                                  // U+e6b8
            constexpr static inline std::string_view Iron{ "\xee\x96\x83" };                                      // U+e583
            constexpr static inline std::string_view Iso{ "\xee\x8f\xb6" };                                       // U+e3f6
            constexpr static inline std::string_view Javascript{ "\xee\xad\xbc" };                                // U+eb7c
            constexpr static inline std::string_view JoinFull{ "\xee\xab\xab" };                                  // U+eaeb
            constexpr static inline std::string_view JoinInner{ "\xee\xab\xb4" };                                 // U+eaf4
            constexpr static inline std::string_view JoinLeft{ "\xee\xab\xb2" };                                  // U+eaf2
            constexpr static inline std::string_view JoinRight{ "\xee\xab\xaa" };                                 // U+eaea
            constexpr static inline std::string_view Kayaking{ "\xee\x94\x8c" };                                  // U+e50c
            constexpr static inline std::string_view KebabDining{ "\xee\xa1\x82" };                               // U+e842
            constexpr static inline std::string_view Key{ "\xee\x9c\xbc" };                                       // U+e73c
            constexpr static inline std::string_view KeyOff{ "\xee\xae\x84" };                                    // U+eb84
            constexpr static inline std::string_view Keyboard{ "\xee\x8c\x92" };                                  // U+e312
            constexpr static inline std::string_view KeyboardAlt{ "\xef\x80\xa8" };                               // U+f028
            constexpr static inline std::string_view KeyboardArrowDown{ "\xee\x8c\x93" };                         // U+e313
            constexpr static inline std::string_view KeyboardArrowLeft{ "\xee\x8c\x94" };                         // U+e314
            constexpr static inline std::string_view KeyboardArrowRight{ "\xee\x8c\x95" };                        // U+e315
            constexpr static inline std::string_view KeyboardArrowUp{ "\xee\x8c\x96" };                           // U+e316
            constexpr static inline std::string_view KeyboardBackspace{ "\xee\x8c\x97" };                         // U+e317
            constexpr static inline std::string_view KeyboardCapslock{ "\xee\x8c\x98" };                          // U+e318
            constexpr static inline std::string_view KeyboardCommand{ "\xee\xab\xa0" };                           // U+eae0
            constexpr static inline std::string_view KeyboardCommandKey{ "\xee\xab\xa7" };                        // U+eae7
            constexpr static inline std::string_view KeyboardControl{ "\xee\x97\x93" };                           // U+e5d3
            constexpr static inline std::string_view KeyboardControlKey{ "\xee\xab\xa6" };                        // U+eae6
            constexpr static inline std::string_view KeyboardDoubleArrowDown{ "\xee\xab\x90" };                   // U+ead0
            constexpr static inline std::string_view KeyboardDoubleArrowLeft{ "\xee\xab\x83" };                   // U+eac3
            constexpr static inline std::string_view KeyboardDoubleArrowRight{ "\xee\xab\x89" };                  // U+eac9
            constexpr static inline std::string_view KeyboardDoubleArrowUp{ "\xee\xab\x8f" };                     // U+eacf
            constexpr static inline std::string_view KeyboardHide{ "\xee\x8c\x9a" };                              // U+e31a
            constexpr static inline std::string_view KeyboardOption{ "\xee\xab\x9f" };                            // U+eadf
            constexpr static inline std::string_view KeyboardOptionKey{ "\xee\xab\xa8" };                         // U+eae8
            constexpr static inline std::string_view KeyboardReturn{ "\xee\x8c\x9b" };                            // U+e31b
            constexpr static inline std::string_view KeyboardTab{ "\xee\x8c\x9c" };                               // U+e31c
            constexpr static inline std::string_view KeyboardVoice{ "\xee\x8c\x9d" };                             // U+e31d
            constexpr static inline std::string_view KingBed{ "\xee\xa9\x85" };                                   // U+ea45
            constexpr static inline std::string_view Kitchen{ "\xee\xad\x87" };                                   // U+eb47
            constexpr static inline std::string_view Kitesurfing{ "\xee\x94\x8d" };                               // U+e50d
            constexpr static inline std::string_view Label{ "\xee\xa2\x92" };                                     // U+e892
            constexpr static inline std::string_view LabelImportant{ "\xee\xa4\xb7" };                            // U+e937
            constexpr static inline std::string_view LabelImportantOutline{ "\xee\xa5\x88" };                     // U+e948
            constexpr static inline std::string_view LabelOff{ "\xee\xa6\xb6" };                                  // U+e9b6
            constexpr static inline std::string_view LabelOutline{ "\xee\xa2\x93" };                              // U+e893
            constexpr static inline std::string_view Lan{ "\xee\xac\xaf" };                                       // U+eb2f
            constexpr static inline std::string_view Landscape{ "\xee\x8f\xb7" };                                 // U+e3f7
            constexpr static inline std::string_view Landslide{ "\xee\xaf\x97" };                                 // U+ebd7
            constexpr static inline std::string_view Language{ "\xee\xa2\x94" };                                  // U+e894
            constexpr static inline std::string_view Laptop{ "\xee\x8c\x9e" };                                    // U+e31e
            constexpr static inline std::string_view LaptopChromebook{ "\xee\x8c\x9f" };                          // U+e31f
            constexpr static inline std::string_view LaptopMac{ "\xee\x8c\xa0" };                                 // U+e320
            constexpr static inline std::string_view LaptopWindows{ "\xee\x8c\xa1" };                             // U+e321
            constexpr static inline std::string_view LastPage{ "\xee\x97\x9d" };                                  // U+e5dd
            constexpr static inline std::string_view Launch{ "\xee\xa2\x95" };                                    // U+e895
            constexpr static inline std::string_view Layers{ "\xee\x94\xbb" };                                    // U+e53b
            constexpr static inline std::string_view LayersClear{ "\xee\x94\xbc" };                               // U+e53c
            constexpr static inline std::string_view Leaderboard{ "\xef\x88\x8c" };                               // U+f20c
            constexpr static inline std::string_view LeakAdd{ "\xee\x8f\xb8" };                                   // U+e3f8
            constexpr static inline std::string_view LeakRemove{ "\xee\x8f\xb9" };                                // U+e3f9
            constexpr static inline std::string_view LeaveBagsAtHome{ "\xef\x88\x9b" };                           // U+f21b
            constexpr static inline std::string_view LegendToggle{ "\xef\x84\x9b" };                              // U+f11b
            constexpr static inline std::string_view Lens{ "\xee\x8f\xba" };                                      // U+e3fa
            constexpr static inline std::string_view LensBlur{ "\xef\x80\xa9" };                                  // U+f029
            constexpr static inline std::string_view LibraryAdd{ "\xee\x80\xae" };                                // U+e02e
            constexpr static inline std::string_view LibraryAddCheck{ "\xee\xa6\xb7" };                           // U+e9b7
            constexpr static inline std::string_view LibraryBooks{ "\xee\x80\xaf" };                              // U+e02f
            constexpr static inline std::string_view LibraryMusic{ "\xee\x80\xb0" };                              // U+e030
            constexpr static inline std::string_view Light{ "\xef\x80\xaa" };                                     // U+f02a
            constexpr static inline std::string_view LightMode{ "\xee\x94\x98" };                                 // U+e518
            constexpr static inline std::string_view Lightbulb{ "\xee\x83\xb0" };                                 // U+e0f0
            constexpr static inline std::string_view LightbulbCircle{ "\xee\xaf\xbe" };                           // U+ebfe
            constexpr static inline std::string_view LightbulbOutline{ "\xee\xa4\x8f" };                          // U+e90f
            constexpr static inline std::string_view LineAxis{ "\xee\xaa\x9a" };                                  // U+ea9a
            constexpr static inline std::string_view LineStyle{ "\xee\xa4\x99" };                                 // U+e919
            constexpr static inline std::string_view LineWeight{ "\xee\xa4\x9a" };                                // U+e91a
            constexpr static inline std::string_view LinearScale{ "\xee\x89\xa0" };                               // U+e260
            constexpr static inline std::string_view Link{ "\xee\x85\x97" };                                      // U+e157
            constexpr static inline std::string_view LinkOff{ "\xee\x85\xaf" };                                   // U+e16f
            constexpr static inline std::string_view LinkedCamera{ "\xee\x90\xb8" };                              // U+e438
            constexpr static inline std::string_view Liquor{ "\xee\xa9\xa0" };                                    // U+ea60
            constexpr static inline std::string_view List{ "\xee\xa2\x96" };                                      // U+e896
            constexpr static inline std::string_view ListAlt{ "\xee\x83\xae" };                                   // U+e0ee
            constexpr static inline std::string_view LiveHelp{ "\xee\x83\x86" };                                  // U+e0c6
            constexpr static inline std::string_view LiveTv{ "\xee\x98\xb9" };                                    // U+e639
            constexpr static inline std::string_view Living{ "\xef\x80\xab" };                                    // U+f02b
            constexpr static inline std::string_view LocalActivity{ "\xee\x94\xbf" };                             // U+e53f
            constexpr static inline std::string_view LocalAirport{ "\xee\x94\xbd" };                              // U+e53d
            constexpr static inline std::string_view LocalAtm{ "\xee\x94\xbe" };                                  // U+e53e
            constexpr static inline std::string_view LocalAttraction{ "\xee\x94\xbf" };                           // U+e53f
            constexpr static inline std::string_view LocalBar{ "\xee\x95\x80" };                                  // U+e540
            constexpr static inline std::string_view LocalCafe{ "\xee\x95\x81" };                                 // U+e541
            constexpr static inline std::string_view LocalCarWash{ "\xee\x95\x82" };                              // U+e542
            constexpr static inline std::string_view LocalConvenienceStore{ "\xee\x95\x83" };                     // U+e543
            constexpr static inline std::string_view LocalDining{ "\xee\x95\x96" };                               // U+e556
            constexpr static inline std::string_view LocalDrink{ "\xee\x95\x84" };                                // U+e544
            constexpr static inline std::string_view LocalFireDepartment{ "\xee\xbd\x95" };                       // U+ef55
            constexpr static inline std::string_view LocalFlorist{ "\xee\x95\x85" };                              // U+e545
            constexpr static inline std::string_view LocalGasStation{ "\xee\x95\x86" };                           // U+e546
            constexpr static inline std::string_view LocalGroceryStore{ "\xee\x95\x87" };                         // U+e547
            constexpr static inline std::string_view LocalHospital{ "\xee\x95\x88" };                             // U+e548
            constexpr static inline std::string_view LocalHotel{ "\xee\x95\x89" };                                // U+e549
            constexpr static inline std::string_view LocalLaundryService{ "\xee\x95\x8a" };                       // U+e54a
            constexpr static inline std::string_view LocalLibrary{ "\xee\x95\x8b" };                              // U+e54b
            constexpr static inline std::string_view LocalMall{ "\xee\x95\x8c" };                                 // U+e54c
            constexpr static inline std::string_view LocalMovies{ "\xee\x95\x8d" };                               // U+e54d
            constexpr static inline std::string_view LocalOffer{ "\xee\x95\x8e" };                                // U+e54e
            constexpr static inline std::string_view LocalParking{ "\xee\x95\x8f" };                              // U+e54f
            constexpr static inline std::string_view LocalPharmacy{ "\xee\x95\x90" };                             // U+e550
            constexpr static inline std::string_view LocalPhone{ "\xee\x95\x91" };                                // U+e551
            constexpr static inline std::string_view LocalPizza{ "\xee\x95\x92" };                                // U+e552
            constexpr static inline std::string_view LocalPlay{ "\xee\x95\x93" };                                 // U+e553
            constexpr static inline std::string_view LocalPolice{ "\xee\xbd\x96" };                               // U+ef56
            constexpr static inline std::string_view LocalPostOffice{ "\xee\x95\x94" };                           // U+e554
            constexpr static inline std::string_view LocalPrintShop{ "\xee\x95\x95" };                            // U+e555
            constexpr static inline std::string_view LocalPrintshop{ "\xee\x95\x95" };                            // U+e555
            constexpr static inline std::string_view LocalRestaurant{ "\xee\x95\x96" };                           // U+e556
            constexpr static inline std::string_view LocalSee{ "\xee\x95\x97" };                                  // U+e557
            constexpr static inline std::string_view LocalShipping{ "\xee\x95\x98" };                             // U+e558
            constexpr static inline std::string_view LocalTaxi{ "\xee\x95\x99" };                                 // U+e559
            constexpr static inline std::string_view LocationCity{ "\xee\x9f\xb1" };                              // U+e7f1
            constexpr static inline std::string_view LocationDisabled{ "\xee\x86\xb6" };                          // U+e1b6
            constexpr static inline std::string_view LocationHistory{ "\xee\x95\x9a" };                           // U+e55a
            constexpr static inline std::string_view LocationOff{ "\xee\x83\x87" };                               // U+e0c7
            constexpr static inline std::string_view LocationOn{ "\xee\x83\x88" };                                // U+e0c8
            constexpr static inline std::string_view LocationPin{ "\xef\x87\x9b" };                               // U+f1db
            constexpr static inline std::string_view LocationSearching{ "\xee\x86\xb7" };                         // U+e1b7
            constexpr static inline std::string_view Lock{ "\xee\xa2\x97" };                                      // U+e897
            constexpr static inline std::string_view LockClock{ "\xee\xbd\x97" };                                 // U+ef57
            constexpr static inline std::string_view LockOpen{ "\xee\xa2\x98" };                                  // U+e898
            constexpr static inline std::string_view LockOutline{ "\xee\xa2\x99" };                               // U+e899
            constexpr static inline std::string_view LockPerson{ "\xef\xa3\xb3" };                                // U+f8f3
            constexpr static inline std::string_view LockReset{ "\xee\xab\x9e" };                                 // U+eade
            constexpr static inline std::string_view Login{ "\xee\xa9\xb7" };                                     // U+ea77
            constexpr static inline std::string_view LogoDev{ "\xee\xab\x96" };                                   // U+ead6
            constexpr static inline std::string_view Logout{ "\xee\xa6\xba" };                                    // U+e9ba
            constexpr static inline std::string_view Looks{ "\xee\x8f\xbc" };                                     // U+e3fc
            constexpr static inline std::string_view Looks_3{ "\xee\x8f\xbb" };                                   // U+e3fb
            constexpr static inline std::string_view Looks_4{ "\xee\x8f\xbd" };                                   // U+e3fd
            constexpr static inline std::string_view Looks_5{ "\xee\x8f\xbe" };                                   // U+e3fe
            constexpr static inline std::string_view Looks_6{ "\xee\x8f\xbf" };                                   // U+e3ff
            constexpr static inline std::string_view LooksOne{ "\xee\x90\x80" };                                  // U+e400
            constexpr static inline std::string_view LooksTwo{ "\xee\x90\x81" };                                  // U+e401
            constexpr static inline std::string_view Loop{ "\xee\x80\xa8" };                                      // U+e028
            constexpr static inline std::string_view Loupe{ "\xee\x90\x82" };                                     // U+e402
            constexpr static inline std::string_view LowPriority{ "\xee\x85\xad" };                               // U+e16d
            constexpr static inline std::string_view Loyalty{ "\xee\xa2\x9a" };                                   // U+e89a
            constexpr static inline std::string_view LteMobiledata{ "\xef\x80\xac" };                             // U+f02c
            constexpr static inline std::string_view LtePlusMobiledata{ "\xef\x80\xad" };                         // U+f02d
            constexpr static inline std::string_view Luggage{ "\xef\x88\xb5" };                                   // U+f235
            constexpr static inline std::string_view LunchDining{ "\xee\xa9\xa1" };                               // U+ea61
            constexpr static inline std::string_view Lyrics{ "\xee\xb0\x8b" };                                    // U+ec0b
            constexpr static inline std::string_view MacroOff{ "\xef\xa3\x92" };                                  // U+f8d2
            constexpr static inline std::string_view Mail{ "\xee\x85\x98" };                                      // U+e158
            constexpr static inline std::string_view MailLock{ "\xee\xb0\x8a" };                                  // U+ec0a
            constexpr static inline std::string_view MailOutline{ "\xee\x83\xa1" };                               // U+e0e1
            constexpr static inline std::string_view Male{ "\xee\x96\x8e" };                                      // U+e58e
            constexpr static inline std::string_view Man{ "\xee\x93\xab" };                                       // U+e4eb
            constexpr static inline std::string_view Man_2{ "\xef\xa3\xa1" };                                     // U+f8e1
            constexpr static inline std::string_view Man_3{ "\xef\xa3\xa2" };                                     // U+f8e2
            constexpr static inline std::string_view Man_4{ "\xef\xa3\xa3" };                                     // U+f8e3
            constexpr static inline std::string_view ManageAccounts{ "\xef\x80\xae" };                            // U+f02e
            constexpr static inline std::string_view ManageHistory{ "\xee\xaf\xa7" };                             // U+ebe7
            constexpr static inline std::string_view ManageSearch{ "\xef\x80\xaf" };                              // U+f02f
            constexpr static inline std::string_view Map{ "\xee\x95\x9b" };                                       // U+e55b
            constexpr static inline std::string_view MapsHomeWork{ "\xef\x80\xb0" };                              // U+f030
            constexpr static inline std::string_view MapsUgc{ "\xee\xbd\x98" };                                   // U+ef58
            constexpr static inline std::string_view Margin{ "\xee\xa6\xbb" };                                    // U+e9bb
            constexpr static inline std::string_view MarkAsUnread{ "\xee\xa6\xbc" };                              // U+e9bc
            constexpr static inline std::string_view MarkChatRead{ "\xef\x86\x8b" };                              // U+f18b
            constexpr static inline std::string_view MarkChatUnread{ "\xef\x86\x89" };                            // U+f189
            constexpr static inline std::string_view MarkEmailRead{ "\xef\x86\x8c" };                             // U+f18c
            constexpr static inline std::string_view MarkEmailUnread{ "\xef\x86\x8a" };                           // U+f18a
            constexpr static inline std::string_view MarkUnreadChatAlt{ "\xee\xae\x9d" };                         // U+eb9d
            constexpr static inline std::string_view Markunread{ "\xee\x85\x99" };                                // U+e159
            constexpr static inline std::string_view MarkunreadMailbox{ "\xee\xa2\x9b" };                         // U+e89b
            constexpr static inline std::string_view Masks{ "\xef\x88\x98" };                                     // U+f218
            constexpr static inline std::string_view Maximize{ "\xee\xa4\xb0" };                                  // U+e930
            constexpr static inline std::string_view MediaBluetoothOff{ "\xef\x80\xb1" };                         // U+f031
            constexpr static inline std::string_view MediaBluetoothOn{ "\xef\x80\xb2" };                          // U+f032
            constexpr static inline std::string_view Mediation{ "\xee\xbe\xa7" };                                 // U+efa7
            constexpr static inline std::string_view MedicalInformation{ "\xee\xaf\xad" };                        // U+ebed
            constexpr static inline std::string_view MedicalServices{ "\xef\x84\x89" };                           // U+f109
            constexpr static inline std::string_view Medication{ "\xef\x80\xb3" };                                // U+f033
            constexpr static inline std::string_view MedicationLiquid{ "\xee\xaa\x87" };                          // U+ea87
            constexpr static inline std::string_view MeetingRoom{ "\xee\xad\x8f" };                               // U+eb4f
            constexpr static inline std::string_view Memory{ "\xee\x8c\xa2" };                                    // U+e322
            constexpr static inline std::string_view Menu{ "\xee\x97\x92" };                                      // U+e5d2
            constexpr static inline std::string_view MenuBook{ "\xee\xa8\x99" };                                  // U+ea19
            constexpr static inline std::string_view MenuOpen{ "\xee\xa6\xbd" };                                  // U+e9bd
            constexpr static inline std::string_view Merge{ "\xee\xae\x98" };                                     // U+eb98
            constexpr static inline std::string_view MergeType{ "\xee\x89\x92" };                                 // U+e252
            constexpr static inline std::string_view Message{ "\xee\x83\x89" };                                   // U+e0c9
            constexpr static inline std::string_view Messenger{ "\xee\x83\x8a" };                                 // U+e0ca
            constexpr static inline std::string_view MessengerOutline{ "\xee\x83\x8b" };                          // U+e0cb
            constexpr static inline std::string_view Mic{ "\xee\x80\xa9" };                                       // U+e029
            constexpr static inline std::string_view MicExternalOff{ "\xee\xbd\x99" };                            // U+ef59
            constexpr static inline std::string_view MicExternalOn{ "\xee\xbd\x9a" };                             // U+ef5a
            constexpr static inline std::string_view MicNone{ "\xee\x80\xaa" };                                   // U+e02a
            constexpr static inline std::string_view MicOff{ "\xee\x80\xab" };                                    // U+e02b
            constexpr static inline std::string_view Microwave{ "\xef\x88\x84" };                                 // U+f204
            constexpr static inline std::string_view MilitaryTech{ "\xee\xa8\xbf" };                              // U+ea3f
            constexpr static inline std::string_view Minimize{ "\xee\xa4\xb1" };                                  // U+e931
            constexpr static inline std::string_view MinorCrash{ "\xee\xaf\xb1" };                                // U+ebf1
            constexpr static inline std::string_view MiscellaneousServices{ "\xef\x84\x8c" };                     // U+f10c
            constexpr static inline std::string_view MissedVideoCall{ "\xee\x81\xb3" };                           // U+e073
            constexpr static inline std::string_view Mms{ "\xee\x98\x98" };                                       // U+e618
            constexpr static inline std::string_view MobileFriendly{ "\xee\x88\x80" };                            // U+e200
            constexpr static inline std::string_view MobileOff{ "\xee\x88\x81" };                                 // U+e201
            constexpr static inline std::string_view MobileScreenShare{ "\xee\x83\xa7" };                         // U+e0e7
            constexpr static inline std::string_view MobiledataOff{ "\xef\x80\xb4" };                             // U+f034
            constexpr static inline std::string_view Mode{ "\xef\x82\x97" };                                      // U+f097
            constexpr static inline std::string_view ModeComment{ "\xee\x89\x93" };                               // U+e253
            constexpr static inline std::string_view ModeEdit{ "\xee\x89\x94" };                                  // U+e254
            constexpr static inline std::string_view ModeEditOutline{ "\xef\x80\xb5" };                           // U+f035
            constexpr static inline std::string_view ModeFanOff{ "\xee\xb0\x97" };                                // U+ec17
            constexpr static inline std::string_view ModeNight{ "\xef\x80\xb6" };                                 // U+f036
            constexpr static inline std::string_view ModeOfTravel{ "\xee\x9f\x8e" };                              // U+e7ce
            constexpr static inline std::string_view ModeStandby{ "\xef\x80\xb7" };                               // U+f037
            constexpr static inline std::string_view ModelTraining{ "\xef\x83\x8f" };                             // U+f0cf
            constexpr static inline std::string_view MonetizationOn{ "\xee\x89\xa3" };                            // U+e263
            constexpr static inline std::string_view Money{ "\xee\x95\xbd" };                                     // U+e57d
            constexpr static inline std::string_view MoneyOff{ "\xee\x89\x9c" };                                  // U+e25c
            constexpr static inline std::string_view MoneyOffCsred{ "\xef\x80\xb8" };                             // U+f038
            constexpr static inline std::string_view Monitor{ "\xee\xbd\x9b" };                                   // U+ef5b
            constexpr static inline std::string_view MonitorHeart{ "\xee\xaa\xa2" };                              // U+eaa2
            constexpr static inline std::string_view MonitorWeight{ "\xef\x80\xb9" };                             // U+f039
            constexpr static inline std::string_view MonochromePhotos{ "\xee\x90\x83" };                          // U+e403
            constexpr static inline std::string_view Mood{ "\xee\x9f\xb2" };                                      // U+e7f2
            constexpr static inline std::string_view MoodBad{ "\xee\x9f\xb3" };                                   // U+e7f3
            constexpr static inline std::string_view Moped{ "\xee\xac\xa8" };                                     // U+eb28
            constexpr static inline std::string_view More{ "\xee\x98\x99" };                                      // U+e619
            constexpr static inline std::string_view MoreHoriz{ "\xee\x97\x93" };                                 // U+e5d3
            constexpr static inline std::string_view MoreTime{ "\xee\xa9\x9d" };                                  // U+ea5d
            constexpr static inline std::string_view MoreVert{ "\xee\x97\x94" };                                  // U+e5d4
            constexpr static inline std::string_view Mosque{ "\xee\xaa\xb2" };                                    // U+eab2
            constexpr static inline std::string_view MotionPhotosAuto{ "\xef\x80\xba" };                          // U+f03a
            constexpr static inline std::string_view MotionPhotosOff{ "\xee\xa7\x80" };                           // U+e9c0
            constexpr static inline std::string_view MotionPhotosOn{ "\xee\xa7\x81" };                            // U+e9c1
            constexpr static inline std::string_view MotionPhotosPause{ "\xef\x88\xa7" };                         // U+f227
            constexpr static inline std::string_view MotionPhotosPaused{ "\xee\xa7\x82" };                        // U+e9c2
            constexpr static inline std::string_view Motorcycle{ "\xee\xa4\x9b" };                                // U+e91b
            constexpr static inline std::string_view Mouse{ "\xee\x8c\xa3" };                                     // U+e323
            constexpr static inline std::string_view MoveDown{ "\xee\xad\xa1" };                                  // U+eb61
            constexpr static inline std::string_view MoveToInbox{ "\xee\x85\xa8" };                               // U+e168
            constexpr static inline std::string_view MoveUp{ "\xee\xad\xa4" };                                    // U+eb64
            constexpr static inline std::string_view Movie{ "\xee\x80\xac" };                                     // U+e02c
            constexpr static inline std::string_view MovieCreation{ "\xee\x90\x84" };                             // U+e404
            constexpr static inline std::string_view MovieEdit{ "\xef\xa1\x80" };                                 // U+f840
            constexpr static inline std::string_view MovieFilter{ "\xee\x90\xba" };                               // U+e43a
            constexpr static inline std::string_view Moving{ "\xee\x94\x81" };                                    // U+e501
            constexpr static inline std::string_view Mp{ "\xee\xa7\x83" };                                        // U+e9c3
            constexpr static inline std::string_view MultilineChart{ "\xee\x9b\x9f" };                            // U+e6df
            constexpr static inline std::string_view MultipleStop{ "\xef\x86\xb9" };                              // U+f1b9
            constexpr static inline std::string_view MultitrackAudio{ "\xee\x86\xb8" };                           // U+e1b8
            constexpr static inline std::string_view Museum{ "\xee\xa8\xb6" };                                    // U+ea36
            constexpr static inline std::string_view MusicNote{ "\xee\x90\x85" };                                 // U+e405
            constexpr static inline std::string_view MusicOff{ "\xee\x91\x80" };                                  // U+e440
            constexpr static inline std::string_view MusicVideo{ "\xee\x81\xa3" };                                // U+e063
            constexpr static inline std::string_view MyLibraryAdd{ "\xee\x80\xae" };                              // U+e02e
            constexpr static inline std::string_view MyLibraryBooks{ "\xee\x80\xaf" };                            // U+e02f
            constexpr static inline std::string_view MyLibraryMusic{ "\xee\x80\xb0" };                            // U+e030
            constexpr static inline std::string_view MyLocation{ "\xee\x95\x9c" };                                // U+e55c
            constexpr static inline std::string_view Nat{ "\xee\xbd\x9c" };                                       // U+ef5c
            constexpr static inline std::string_view Nature{ "\xee\x90\x86" };                                    // U+e406
            constexpr static inline std::string_view NaturePeople{ "\xee\x90\x87" };                              // U+e407
            constexpr static inline std::string_view NavigateBefore{ "\xee\x90\x88" };                            // U+e408
            constexpr static inline std::string_view NavigateNext{ "\xee\x90\x89" };                              // U+e409
            constexpr static inline std::string_view Navigation{ "\xee\x95\x9d" };                                // U+e55d
            constexpr static inline std::string_view NearMe{ "\xee\x95\xa9" };                                    // U+e569
            constexpr static inline std::string_view NearMeDisabled{ "\xef\x87\xaf" };                            // U+f1ef
            constexpr static inline std::string_view NearbyError{ "\xef\x80\xbb" };                               // U+f03b
            constexpr static inline std::string_view NearbyOff{ "\xef\x80\xbc" };                                 // U+f03c
            constexpr static inline std::string_view NestCamWiredStand{ "\xee\xb0\x96" };                         // U+ec16
            constexpr static inline std::string_view NetworkCell{ "\xee\x86\xb9" };                               // U+e1b9
            constexpr static inline std::string_view NetworkCheck{ "\xee\x99\x80" };                              // U+e640
            constexpr static inline std::string_view NetworkLocked{ "\xee\x98\x9a" };                             // U+e61a
            constexpr static inline std::string_view NetworkPing{ "\xee\xaf\x8a" };                               // U+ebca
            constexpr static inline std::string_view NetworkWifi{ "\xee\x86\xba" };                               // U+e1ba
            constexpr static inline std::string_view NetworkWifi_1Bar{ "\xee\xaf\xa4" };                          // U+ebe4
            constexpr static inline std::string_view NetworkWifi_2Bar{ "\xee\xaf\x96" };                          // U+ebd6
            constexpr static inline std::string_view NetworkWifi_3Bar{ "\xee\xaf\xa1" };                          // U+ebe1
            constexpr static inline std::string_view NewLabel{ "\xee\x98\x89" };                                  // U+e609
            constexpr static inline std::string_view NewReleases{ "\xee\x80\xb1" };                               // U+e031
            constexpr static inline std::string_view Newspaper{ "\xee\xae\x81" };                                 // U+eb81
            constexpr static inline std::string_view NextPlan{ "\xee\xbd\x9d" };                                  // U+ef5d
            constexpr static inline std::string_view NextWeek{ "\xee\x85\xaa" };                                  // U+e16a
            constexpr static inline std::string_view Nfc{ "\xee\x86\xbb" };                                       // U+e1bb
            constexpr static inline std::string_view NightShelter{ "\xef\x87\xb1" };                              // U+f1f1
            constexpr static inline std::string_view Nightlife{ "\xee\xa9\xa2" };                                 // U+ea62
            constexpr static inline std::string_view Nightlight{ "\xef\x80\xbd" };                                // U+f03d
            constexpr static inline std::string_view NightlightRound{ "\xee\xbd\x9e" };                           // U+ef5e
            constexpr static inline std::string_view NightsStay{ "\xee\xa9\x86" };                                // U+ea46
            constexpr static inline std::string_view NoAccounts{ "\xef\x80\xbe" };                                // U+f03e
            constexpr static inline std::string_view NoAdultContent{ "\xef\xa3\xbe" };                            // U+f8fe
            constexpr static inline std::string_view NoBackpack{ "\xef\x88\xb7" };                                // U+f237
            constexpr static inline std::string_view NoCell{ "\xef\x86\xa4" };                                    // U+f1a4
            constexpr static inline std::string_view NoCrash{ "\xee\xaf\xb0" };                                   // U+ebf0
            constexpr static inline std::string_view NoDrinks{ "\xef\x86\xa5" };                                  // U+f1a5
            constexpr static inline std::string_view NoEncryption{ "\xee\x99\x81" };                              // U+e641
            constexpr static inline std::string_view NoEncryptionGmailerrorred{ "\xef\x80\xbf" };                 // U+f03f
            constexpr static inline std::string_view NoFlash{ "\xef\x86\xa6" };                                   // U+f1a6
            constexpr static inline std::string_view NoFood{ "\xef\x86\xa7" };                                    // U+f1a7
            constexpr static inline std::string_view NoLuggage{ "\xef\x88\xbb" };                                 // U+f23b
            constexpr static inline std::string_view NoMeals{ "\xef\x87\x96" };                                   // U+f1d6
            constexpr static inline std::string_view NoMealsOuline{ "\xef\x88\xa9" };                             // U+f229
            constexpr static inline std::string_view NoMeetingRoom{ "\xee\xad\x8e" };                             // U+eb4e
            constexpr static inline std::string_view NoPhotography{ "\xef\x86\xa8" };                             // U+f1a8
            constexpr static inline std::string_view NoSim{ "\xee\x83\x8c" };                                     // U+e0cc
            constexpr static inline std::string_view NoStroller{ "\xef\x86\xaf" };                                // U+f1af
            constexpr static inline std::string_view NoTransfer{ "\xef\x87\x95" };                                // U+f1d5
            constexpr static inline std::string_view NoiseAware{ "\xee\xaf\xac" };                                // U+ebec
            constexpr static inline std::string_view NoiseControlOff{ "\xee\xaf\xb3" };                           // U+ebf3
            constexpr static inline std::string_view NordicWalking{ "\xee\x94\x8e" };                             // U+e50e
            constexpr static inline std::string_view North{ "\xef\x87\xa0" };                                     // U+f1e0
            constexpr static inline std::string_view NorthEast{ "\xef\x87\xa1" };                                 // U+f1e1
            constexpr static inline std::string_view NorthWest{ "\xef\x87\xa2" };                                 // U+f1e2
            constexpr static inline std::string_view NotAccessible{ "\xef\x83\xbe" };                             // U+f0fe
            constexpr static inline std::string_view NotInterested{ "\xee\x80\xb3" };                             // U+e033
            constexpr static inline std::string_view NotListedLocation{ "\xee\x95\xb5" };                         // U+e575
            constexpr static inline std::string_view NotStarted{ "\xef\x83\x91" };                                // U+f0d1
            constexpr static inline std::string_view Note{ "\xee\x81\xaf" };                                      // U+e06f
            constexpr static inline std::string_view NoteAdd{ "\xee\xa2\x9c" };                                   // U+e89c
            constexpr static inline std::string_view NoteAlt{ "\xef\x81\x80" };                                   // U+f040
            constexpr static inline std::string_view Notes{ "\xee\x89\xac" };                                     // U+e26c
            constexpr static inline std::string_view NotificationAdd{ "\xee\x8e\x99" };                           // U+e399
            constexpr static inline std::string_view NotificationImportant{ "\xee\x80\x84" };                     // U+e004
            constexpr static inline std::string_view Notifications{ "\xee\x9f\xb4" };                             // U+e7f4
            constexpr static inline std::string_view NotificationsActive{ "\xee\x9f\xb7" };                       // U+e7f7
            constexpr static inline std::string_view NotificationsNone{ "\xee\x9f\xb5" };                         // U+e7f5
            constexpr static inline std::string_view NotificationsOff{ "\xee\x9f\xb6" };                          // U+e7f6
            constexpr static inline std::string_view NotificationsOn{ "\xee\x9f\xb7" };                           // U+e7f7
            constexpr static inline std::string_view NotificationsPaused{ "\xee\x9f\xb8" };                       // U+e7f8
            constexpr static inline std::string_view NowWallpaper{ "\xee\x86\xbc" };                              // U+e1bc
            constexpr static inline std::string_view NowWidgets{ "\xee\x86\xbd" };                                // U+e1bd
            constexpr static inline std::string_view Numbers{ "\xee\xab\x87" };                                   // U+eac7
            constexpr static inline std::string_view OfflineBolt{ "\xee\xa4\xb2" };                               // U+e932
            constexpr static inline std::string_view OfflinePin{ "\xee\xa4\x8a" };                                // U+e90a
            constexpr static inline std::string_view OfflineShare{ "\xee\xa7\x85" };                              // U+e9c5
            constexpr static inline std::string_view OilBarrel{ "\xee\xb0\x95" };                                 // U+ec15
            constexpr static inline std::string_view OnDeviceTraining{ "\xee\xaf\xbd" };                          // U+ebfd
            constexpr static inline std::string_view OndemandVideo{ "\xee\x98\xba" };                             // U+e63a
            constexpr static inline std::string_view OnlinePrediction{ "\xef\x83\xab" };                          // U+f0eb
            constexpr static inline std::string_view Opacity{ "\xee\xa4\x9c" };                                   // U+e91c
            constexpr static inline std::string_view OpenInBrowser{ "\xee\xa2\x9d" };                             // U+e89d
            constexpr static inline std::string_view OpenInFull{ "\xef\x87\x8e" };                                // U+f1ce
            constexpr static inline std::string_view OpenInNew{ "\xee\xa2\x9e" };                                 // U+e89e
            constexpr static inline std::string_view OpenInNewOff{ "\xee\x93\xb6" };                              // U+e4f6
            constexpr static inline std::string_view OpenWith{ "\xee\xa2\x9f" };                                  // U+e89f
            constexpr static inline std::string_view OtherHouses{ "\xee\x96\x8c" };                               // U+e58c
            constexpr static inline std::string_view Outbond{ "\xef\x88\xa8" };                                   // U+f228
            constexpr static inline std::string_view Outbound{ "\xee\x87\x8a" };                                  // U+e1ca
            constexpr static inline std::string_view Outbox{ "\xee\xbd\x9f" };                                    // U+ef5f
            constexpr static inline std::string_view OutdoorGrill{ "\xee\xa9\x87" };                              // U+ea47
            constexpr static inline std::string_view OutgoingMail{ "\xef\x83\x92" };                              // U+f0d2
            constexpr static inline std::string_view Outlet{ "\xef\x87\x94" };                                    // U+f1d4
            constexpr static inline std::string_view OutlinedFlag{ "\xee\x85\xae" };                              // U+e16e
            constexpr static inline std::string_view Output{ "\xee\xae\xbe" };                                    // U+ebbe
            constexpr static inline std::string_view Padding{ "\xee\xa7\x88" };                                   // U+e9c8
            constexpr static inline std::string_view Pages{ "\xee\x9f\xb9" };                                     // U+e7f9
            constexpr static inline std::string_view Pageview{ "\xee\xa2\xa0" };                                  // U+e8a0
            constexpr static inline std::string_view Paid{ "\xef\x81\x81" };                                      // U+f041
            constexpr static inline std::string_view Palette{ "\xee\x90\x8a" };                                   // U+e40a
            constexpr static inline std::string_view Pallet{ "\xef\xa1\xaa" };                                    // U+f86a
            constexpr static inline std::string_view PanTool{ "\xee\xa4\xa5" };                                   // U+e925
            constexpr static inline std::string_view PanToolAlt{ "\xee\xae\xb9" };                                // U+ebb9
            constexpr static inline std::string_view Panorama{ "\xee\x90\x8b" };                                  // U+e40b
            constexpr static inline std::string_view PanoramaFishEye{ "\xee\x90\x8c" };                           // U+e40c
            constexpr static inline std::string_view PanoramaFisheye{ "\xee\x90\x8c" };                           // U+e40c
            constexpr static inline std::string_view PanoramaHorizontal{ "\xee\x90\x8d" };                        // U+e40d
            constexpr static inline std::string_view PanoramaHorizontalSelect{ "\xee\xbd\xa0" };                  // U+ef60
            constexpr static inline std::string_view PanoramaPhotosphere{ "\xee\xa7\x89" };                       // U+e9c9
            constexpr static inline std::string_view PanoramaPhotosphereSelect{ "\xee\xa7\x8a" };                 // U+e9ca
            constexpr static inline std::string_view PanoramaVertical{ "\xee\x90\x8e" };                          // U+e40e
            constexpr static inline std::string_view PanoramaVerticalSelect{ "\xee\xbd\xa1" };                    // U+ef61
            constexpr static inline std::string_view PanoramaWideAngle{ "\xee\x90\x8f" };                         // U+e40f
            constexpr static inline std::string_view PanoramaWideAngleSelect{ "\xee\xbd\xa2" };                   // U+ef62
            constexpr static inline std::string_view Paragliding{ "\xee\x94\x8f" };                               // U+e50f
            constexpr static inline std::string_view Park{ "\xee\xa9\xa3" };                                      // U+ea63
            constexpr static inline std::string_view PartyMode{ "\xee\x9f\xba" };                                 // U+e7fa
            constexpr static inline std::string_view Password{ "\xef\x81\x82" };                                  // U+f042
            constexpr static inline std::string_view Pattern{ "\xef\x81\x83" };                                   // U+f043
            constexpr static inline std::string_view Pause{ "\xee\x80\xb4" };                                     // U+e034
            constexpr static inline std::string_view PauseCircle{ "\xee\x86\xa2" };                               // U+e1a2
            constexpr static inline std::string_view PauseCircleFilled{ "\xee\x80\xb5" };                         // U+e035
            constexpr static inline std::string_view PauseCircleOutline{ "\xee\x80\xb6" };                        // U+e036
            constexpr static inline std::string_view PausePresentation{ "\xee\x83\xaa" };                         // U+e0ea
            constexpr static inline std::string_view Payment{ "\xee\xa2\xa1" };                                   // U+e8a1
            constexpr static inline std::string_view Payments{ "\xee\xbd\xa3" };                                  // U+ef63
            constexpr static inline std::string_view Paypal{ "\xee\xaa\x8d" };                                    // U+ea8d
            constexpr static inline std::string_view PedalBike{ "\xee\xac\xa9" };                                 // U+eb29
            constexpr static inline std::string_view Pending{ "\xee\xbd\xa4" };                                   // U+ef64
            constexpr static inline std::string_view PendingActions{ "\xef\x86\xbb" };                            // U+f1bb
            constexpr static inline std::string_view Pentagon{ "\xee\xad\x90" };                                  // U+eb50
            constexpr static inline std::string_view People{ "\xee\x9f\xbb" };                                    // U+e7fb
            constexpr static inline std::string_view PeopleAlt{ "\xee\xa8\xa1" };                                 // U+ea21
            constexpr static inline std::string_view PeopleOutline{ "\xee\x9f\xbc" };                             // U+e7fc
            constexpr static inline std::string_view Percent{ "\xee\xad\x98" };                                   // U+eb58
            constexpr static inline std::string_view PermCameraMic{ "\xee\xa2\xa2" };                             // U+e8a2
            constexpr static inline std::string_view PermContactCal{ "\xee\xa2\xa3" };                            // U+e8a3
            constexpr static inline std::string_view PermContactCalendar{ "\xee\xa2\xa3" };                       // U+e8a3
            constexpr static inline std::string_view PermDataSetting{ "\xee\xa2\xa4" };                           // U+e8a4
            constexpr static inline std::string_view PermDeviceInfo{ "\xee\xa2\xa5" };                            // U+e8a5
            constexpr static inline std::string_view PermDeviceInformation{ "\xee\xa2\xa5" };                     // U+e8a5
            constexpr static inline std::string_view PermIdentity{ "\xee\xa2\xa6" };                              // U+e8a6
            constexpr static inline std::string_view PermMedia{ "\xee\xa2\xa7" };                                 // U+e8a7
            constexpr static inline std::string_view PermPhoneMsg{ "\xee\xa2\xa8" };                              // U+e8a8
            constexpr static inline std::string_view PermScanWifi{ "\xee\xa2\xa9" };                              // U+e8a9
            constexpr static inline std::string_view Person{ "\xee\x9f\xbd" };                                    // U+e7fd
            constexpr static inline std::string_view Person_2{ "\xef\xa3\xa4" };                                  // U+f8e4
            constexpr static inline std::string_view Person_3{ "\xef\xa3\xa5" };                                  // U+f8e5
            constexpr static inline std::string_view Person_4{ "\xef\xa3\xa6" };                                  // U+f8e6
            constexpr static inline std::string_view PersonAdd{ "\xee\x9f\xbe" };                                 // U+e7fe
            constexpr static inline std::string_view PersonAddAlt{ "\xee\xa9\x8d" };                              // U+ea4d
            constexpr static inline std::string_view PersonAddAlt_1{ "\xee\xbd\xa5" };                            // U+ef65
            constexpr static inline std::string_view PersonAddDisabled{ "\xee\xa7\x8b" };                         // U+e9cb
            constexpr static inline std::string_view PersonOff{ "\xee\x94\x90" };                                 // U+e510
            constexpr static inline std::string_view PersonOutline{ "\xee\x9f\xbf" };                             // U+e7ff
            constexpr static inline std::string_view PersonPin{ "\xee\x95\x9a" };                                 // U+e55a
            constexpr static inline std::string_view PersonPinCircle{ "\xee\x95\xaa" };                           // U+e56a
            constexpr static inline std::string_view PersonRemove{ "\xee\xbd\xa6" };                              // U+ef66
            constexpr static inline std::string_view PersonRemoveAlt_1{ "\xee\xbd\xa7" };                         // U+ef67
            constexpr static inline std::string_view PersonSearch{ "\xef\x84\x86" };                              // U+f106
            constexpr static inline std::string_view PersonalInjury{ "\xee\x9b\x9a" };                            // U+e6da
            constexpr static inline std::string_view PersonalVideo{ "\xee\x98\xbb" };                             // U+e63b
            constexpr static inline std::string_view PestControl{ "\xef\x83\xba" };                               // U+f0fa
            constexpr static inline std::string_view PestControlRodent{ "\xef\x83\xbd" };                         // U+f0fd
            constexpr static inline std::string_view Pets{ "\xee\xa4\x9d" };                                      // U+e91d
            constexpr static inline std::string_view Phishing{ "\xee\xab\x97" };                                  // U+ead7
            constexpr static inline std::string_view Phone{ "\xee\x83\x8d" };                                     // U+e0cd
            constexpr static inline std::string_view PhoneAndroid{ "\xee\x8c\xa4" };                              // U+e324
            constexpr static inline std::string_view PhoneBluetoothSpeaker{ "\xee\x98\x9b" };                     // U+e61b
            constexpr static inline std::string_view PhoneCallback{ "\xee\x99\x89" };                             // U+e649
            constexpr static inline std::string_view PhoneDisabled{ "\xee\xa7\x8c" };                             // U+e9cc
            constexpr static inline std::string_view PhoneEnabled{ "\xee\xa7\x8d" };                              // U+e9cd
            constexpr static inline std::string_view PhoneForwarded{ "\xee\x98\x9c" };                            // U+e61c
            constexpr static inline std::string_view PhoneInTalk{ "\xee\x98\x9d" };                               // U+e61d
            constexpr static inline std::string_view PhoneIphone{ "\xee\x8c\xa5" };                               // U+e325
            constexpr static inline std::string_view PhoneLocked{ "\xee\x98\x9e" };                               // U+e61e
            constexpr static inline std::string_view PhoneMissed{ "\xee\x98\x9f" };                               // U+e61f
            constexpr static inline std::string_view PhonePaused{ "\xee\x98\xa0" };                               // U+e620
            constexpr static inline std::string_view Phonelink{ "\xee\x8c\xa6" };                                 // U+e326
            constexpr static inline std::string_view PhonelinkErase{ "\xee\x83\x9b" };                            // U+e0db
            constexpr static inline std::string_view PhonelinkLock{ "\xee\x83\x9c" };                             // U+e0dc
            constexpr static inline std::string_view PhonelinkOff{ "\xee\x8c\xa7" };                              // U+e327
            constexpr static inline std::string_view PhonelinkRing{ "\xee\x83\x9d" };                             // U+e0dd
            constexpr static inline std::string_view PhonelinkSetup{ "\xee\x83\x9e" };                            // U+e0de
            constexpr static inline std::string_view Photo{ "\xee\x90\x90" };                                     // U+e410
            constexpr static inline std::string_view PhotoAlbum{ "\xee\x90\x91" };                                // U+e411
            constexpr static inline std::string_view PhotoCamera{ "\xee\x90\x92" };                               // U+e412
            constexpr static inline std::string_view PhotoCameraBack{ "\xee\xbd\xa8" };                           // U+ef68
            constexpr static inline std::string_view PhotoCameraFront{ "\xee\xbd\xa9" };                          // U+ef69
            constexpr static inline std::string_view PhotoFilter{ "\xee\x90\xbb" };                               // U+e43b
            constexpr static inline std::string_view PhotoLibrary{ "\xee\x90\x93" };                              // U+e413
            constexpr static inline std::string_view PhotoSizeSelectActual{ "\xee\x90\xb2" };                     // U+e432
            constexpr static inline std::string_view PhotoSizeSelectLarge{ "\xee\x90\xb3" };                      // U+e433
            constexpr static inline std::string_view PhotoSizeSelectSmall{ "\xee\x90\xb4" };                      // U+e434
            constexpr static inline std::string_view Php{ "\xee\xae\x8f" };                                       // U+eb8f
            constexpr static inline std::string_view Piano{ "\xee\x94\xa1" };                                     // U+e521
            constexpr static inline std::string_view PianoOff{ "\xee\x94\xa0" };                                  // U+e520
            constexpr static inline std::string_view PictureAsPdf{ "\xee\x90\x95" };                              // U+e415
            constexpr static inline std::string_view PictureInPicture{ "\xee\xa2\xaa" };                          // U+e8aa
            constexpr static inline std::string_view PictureInPictureAlt{ "\xee\xa4\x91" };                       // U+e911
            constexpr static inline std::string_view PieChart{ "\xee\x9b\x84" };                                  // U+e6c4
            constexpr static inline std::string_view PieChartOutline{ "\xef\x81\x84" };                           // U+f044
            constexpr static inline std::string_view PieChartOutlined{ "\xee\x9b\x85" };                          // U+e6c5
            constexpr static inline std::string_view Pin{ "\xef\x81\x85" };                                       // U+f045
            constexpr static inline std::string_view PinDrop{ "\xee\x95\x9e" };                                   // U+e55e
            constexpr static inline std::string_view PinEnd{ "\xee\x9d\xa7" };                                    // U+e767
            constexpr static inline std::string_view PinInvoke{ "\xee\x9d\xa3" };                                 // U+e763
            constexpr static inline std::string_view Pinch{ "\xee\xac\xb8" };                                     // U+eb38
            constexpr static inline std::string_view PivotTableChart{ "\xee\xa7\x8e" };                           // U+e9ce
            constexpr static inline std::string_view Pix{ "\xee\xaa\xa3" };                                       // U+eaa3
            constexpr static inline std::string_view Place{ "\xee\x95\x9f" };                                     // U+e55f
            constexpr static inline std::string_view Plagiarism{ "\xee\xa9\x9a" };                                // U+ea5a
            constexpr static inline std::string_view PlayArrow{ "\xee\x80\xb7" };                                 // U+e037
            constexpr static inline std::string_view PlayCircle{ "\xee\x87\x84" };                                // U+e1c4
            constexpr static inline std::string_view PlayCircleFill{ "\xee\x80\xb8" };                            // U+e038
            constexpr static inline std::string_view PlayCircleFilled{ "\xee\x80\xb8" };                          // U+e038
            constexpr static inline std::string_view PlayCircleOutline{ "\xee\x80\xb9" };                         // U+e039
            constexpr static inline std::string_view PlayDisabled{ "\xee\xbd\xaa" };                              // U+ef6a
            constexpr static inline std::string_view PlayForWork{ "\xee\xa4\x86" };                               // U+e906
            constexpr static inline std::string_view PlayLesson{ "\xef\x81\x87" };                                // U+f047
            constexpr static inline std::string_view PlaylistAdd{ "\xee\x80\xbb" };                               // U+e03b
            constexpr static inline std::string_view PlaylistAddCheck{ "\xee\x81\xa5" };                          // U+e065
            constexpr static inline std::string_view PlaylistAddCheckCircle{ "\xee\x9f\xa6" };                    // U+e7e6
            constexpr static inline std::string_view PlaylistAddCircle{ "\xee\x9f\xa5" };                         // U+e7e5
            constexpr static inline std::string_view PlaylistPlay{ "\xee\x81\x9f" };                              // U+e05f
            constexpr static inline std::string_view PlaylistRemove{ "\xee\xae\x80" };                            // U+eb80
            constexpr static inline std::string_view Plumbing{ "\xef\x84\x87" };                                  // U+f107
            constexpr static inline std::string_view PlusOne{ "\xee\xa0\x80" };                                   // U+e800
            constexpr static inline std::string_view Podcasts{ "\xef\x81\x88" };                                  // U+f048
            constexpr static inline std::string_view PointOfSale{ "\xef\x85\xbe" };                               // U+f17e
            constexpr static inline std::string_view Policy{ "\xee\xa8\x97" };                                    // U+ea17
            constexpr static inline std::string_view Poll{ "\xee\xa0\x81" };                                      // U+e801
            constexpr static inline std::string_view Polyline{ "\xee\xae\xbb" };                                  // U+ebbb
            constexpr static inline std::string_view Polymer{ "\xee\xa2\xab" };                                   // U+e8ab
            constexpr static inline std::string_view Pool{ "\xee\xad\x88" };                                      // U+eb48
            constexpr static inline std::string_view PortableWifiOff{ "\xee\x83\x8e" };                           // U+e0ce
            constexpr static inline std::string_view Portrait{ "\xee\x90\x96" };                                  // U+e416
            constexpr static inline std::string_view PostAdd{ "\xee\xa8\xa0" };                                   // U+ea20
            constexpr static inline std::string_view Power{ "\xee\x98\xbc" };                                     // U+e63c
            constexpr static inline std::string_view PowerInput{ "\xee\x8c\xb6" };                                // U+e336
            constexpr static inline std::string_view PowerOff{ "\xee\x99\x86" };                                  // U+e646
            constexpr static inline std::string_view PowerSettingsNew{ "\xee\xa2\xac" };                          // U+e8ac
            constexpr static inline std::string_view PrecisionManufacturing{ "\xef\x81\x89" };                    // U+f049
            constexpr static inline std::string_view PregnantWoman{ "\xee\xa4\x9e" };                             // U+e91e
            constexpr static inline std::string_view PresentToAll{ "\xee\x83\x9f" };                              // U+e0df
            constexpr static inline std::string_view Preview{ "\xef\x87\x85" };                                   // U+f1c5
            constexpr static inline std::string_view PriceChange{ "\xef\x81\x8a" };                               // U+f04a
            constexpr static inline std::string_view PriceCheck{ "\xef\x81\x8b" };                                // U+f04b
            constexpr static inline std::string_view Print{ "\xee\xa2\xad" };                                     // U+e8ad
            constexpr static inline std::string_view PrintDisabled{ "\xee\xa7\x8f" };                             // U+e9cf
            constexpr static inline std::string_view PriorityHigh{ "\xee\x99\x85" };                              // U+e645
            constexpr static inline std::string_view PrivacyTip{ "\xef\x83\x9c" };                                // U+f0dc
            constexpr static inline std::string_view PrivateConnectivity{ "\xee\x9d\x84" };                       // U+e744
            constexpr static inline std::string_view ProductionQuantityLimits{ "\xee\x87\x91" };                  // U+e1d1
            constexpr static inline std::string_view Propane{ "\xee\xb0\x94" };                                   // U+ec14
            constexpr static inline std::string_view PropaneTank{ "\xee\xb0\x93" };                               // U+ec13
            constexpr static inline std::string_view Psychology{ "\xee\xa9\x8a" };                                // U+ea4a
            constexpr static inline std::string_view PsychologyAlt{ "\xef\xa3\xaa" };                             // U+f8ea
            constexpr static inline std::string_view Public{ "\xee\xa0\x8b" };                                    // U+e80b
            constexpr static inline std::string_view PublicOff{ "\xef\x87\x8a" };                                 // U+f1ca
            constexpr static inline std::string_view Publish{ "\xee\x89\x95" };                                   // U+e255
            constexpr static inline std::string_view PublishedWithChanges{ "\xef\x88\xb2" };                      // U+f232
            constexpr static inline std::string_view PunchClock{ "\xee\xaa\xa8" };                                // U+eaa8
            constexpr static inline std::string_view PushPin{ "\xef\x84\x8d" };                                   // U+f10d
            constexpr static inline std::string_view QrCode{ "\xee\xbd\xab" };                                    // U+ef6b
            constexpr static inline std::string_view QrCode_2{ "\xee\x80\x8a" };                                  // U+e00a
            constexpr static inline std::string_view QrCodeScanner{ "\xef\x88\x86" };                             // U+f206
            constexpr static inline std::string_view QueryBuilder{ "\xee\xa2\xae" };                              // U+e8ae
            constexpr static inline std::string_view QueryStats{ "\xee\x93\xbc" };                                // U+e4fc
            constexpr static inline std::string_view QuestionAnswer{ "\xee\xa2\xaf" };                            // U+e8af
            constexpr static inline std::string_view QuestionMark{ "\xee\xae\x8b" };                              // U+eb8b
            constexpr static inline std::string_view Queue{ "\xee\x80\xbc" };                                     // U+e03c
            constexpr static inline std::string_view QueueMusic{ "\xee\x80\xbd" };                                // U+e03d
            constexpr static inline std::string_view QueuePlayNext{ "\xee\x81\xa6" };                             // U+e066
            constexpr static inline std::string_view QuickContactsDialer{ "\xee\x83\x8f" };                       // U+e0cf
            constexpr static inline std::string_view QuickContactsMail{ "\xee\x83\x90" };                         // U+e0d0
            constexpr static inline std::string_view Quickreply{ "\xee\xbd\xac" };                                // U+ef6c
            constexpr static inline std::string_view Quiz{ "\xef\x81\x8c" };                                      // U+f04c
            constexpr static inline std::string_view Quora{ "\xee\xaa\x98" };                                     // U+ea98
            constexpr static inline std::string_view RMobiledata{ "\xef\x81\x8d" };                               // U+f04d
            constexpr static inline std::string_view Radar{ "\xef\x81\x8e" };                                     // U+f04e
            constexpr static inline std::string_view Radio{ "\xee\x80\xbe" };                                     // U+e03e
            constexpr static inline std::string_view RadioButtonChecked{ "\xee\xa0\xb7" };                        // U+e837
            constexpr static inline std::string_view RadioButtonOff{ "\xee\xa0\xb6" };                            // U+e836
            constexpr static inline std::string_view RadioButtonOn{ "\xee\xa0\xb7" };                             // U+e837
            constexpr static inline std::string_view RadioButtonUnchecked{ "\xee\xa0\xb6" };                      // U+e836
            constexpr static inline std::string_view RailwayAlert{ "\xee\xa7\x91" };                              // U+e9d1
            constexpr static inline std::string_view RamenDining{ "\xee\xa9\xa4" };                               // U+ea64
            constexpr static inline std::string_view RampLeft{ "\xee\xae\x9c" };                                  // U+eb9c
            constexpr static inline std::string_view RampRight{ "\xee\xae\x96" };                                 // U+eb96
            constexpr static inline std::string_view RateReview{ "\xee\x95\xa0" };                                // U+e560
            constexpr static inline std::string_view RawOff{ "\xef\x81\x8f" };                                    // U+f04f
            constexpr static inline std::string_view RawOn{ "\xef\x81\x90" };                                     // U+f050
            constexpr static inline std::string_view ReadMore{ "\xee\xbd\xad" };                                  // U+ef6d
            constexpr static inline std::string_view RealEstateAgent{ "\xee\x9c\xba" };                           // U+e73a
            constexpr static inline std::string_view RebaseEdit{ "\xef\xa1\x86" };                                // U+f846
            constexpr static inline std::string_view Receipt{ "\xee\xa2\xb0" };                                   // U+e8b0
            constexpr static inline std::string_view ReceiptLong{ "\xee\xbd\xae" };                               // U+ef6e
            constexpr static inline std::string_view RecentActors{ "\xee\x80\xbf" };                              // U+e03f
            constexpr static inline std::string_view Recommend{ "\xee\xa7\x92" };                                 // U+e9d2
            constexpr static inline std::string_view RecordVoiceOver{ "\xee\xa4\x9f" };                           // U+e91f
            constexpr static inline std::string_view Rectangle{ "\xee\xad\x94" };                                 // U+eb54
            constexpr static inline std::string_view Recycling{ "\xee\x9d\xa0" };                                 // U+e760
            constexpr static inline std::string_view Reddit{ "\xee\xaa\xa0" };                                    // U+eaa0
            constexpr static inline std::string_view Redeem{ "\xee\xa2\xb1" };                                    // U+e8b1
            constexpr static inline std::string_view Redo{ "\xee\x85\x9a" };                                      // U+e15a
            constexpr static inline std::string_view ReduceCapacity{ "\xef\x88\x9c" };                            // U+f21c
            constexpr static inline std::string_view Refresh{ "\xee\x97\x95" };                                   // U+e5d5
            constexpr static inline std::string_view RememberMe{ "\xef\x81\x91" };                                // U+f051
            constexpr static inline std::string_view Remove{ "\xee\x85\x9b" };                                    // U+e15b
            constexpr static inline std::string_view RemoveCircle{ "\xee\x85\x9c" };                              // U+e15c
            constexpr static inline std::string_view RemoveCircleOutline{ "\xee\x85\x9d" };                       // U+e15d
            constexpr static inline std::string_view RemoveDone{ "\xee\xa7\x93" };                                // U+e9d3
            constexpr static inline std::string_view RemoveFromQueue{ "\xee\x81\xa7" };                           // U+e067
            constexpr static inline std::string_view RemoveModerator{ "\xee\xa7\x94" };                           // U+e9d4
            constexpr static inline std::string_view RemoveRedEye{ "\xee\x90\x97" };                              // U+e417
            constexpr static inline std::string_view RemoveRoad{ "\xee\xaf\xbc" };                                // U+ebfc
            constexpr static inline std::string_view RemoveShoppingCart{ "\xee\xa4\xa8" };                        // U+e928
            constexpr static inline std::string_view Reorder{ "\xee\xa3\xbe" };                                   // U+e8fe
            constexpr static inline std::string_view Repartition{ "\xef\xa3\xa8" };                               // U+f8e8
            constexpr static inline std::string_view Repeat{ "\xee\x81\x80" };                                    // U+e040
            constexpr static inline std::string_view RepeatOn{ "\xee\xa7\x96" };                                  // U+e9d6
            constexpr static inline std::string_view RepeatOne{ "\xee\x81\x81" };                                 // U+e041
            constexpr static inline std::string_view RepeatOneOn{ "\xee\xa7\x97" };                               // U+e9d7
            constexpr static inline std::string_view Replay{ "\xee\x81\x82" };                                    // U+e042
            constexpr static inline std::string_view Replay_10{ "\xee\x81\x99" };                                 // U+e059
            constexpr static inline std::string_view Replay_30{ "\xee\x81\x9a" };                                 // U+e05a
            constexpr static inline std::string_view Replay_5{ "\xee\x81\x9b" };                                  // U+e05b
            constexpr static inline std::string_view ReplayCircleFilled{ "\xee\xa7\x98" };                        // U+e9d8
            constexpr static inline std::string_view Reply{ "\xee\x85\x9e" };                                     // U+e15e
            constexpr static inline std::string_view ReplyAll{ "\xee\x85\x9f" };                                  // U+e15f
            constexpr static inline std::string_view Report{ "\xee\x85\xa0" };                                    // U+e160
            constexpr static inline std::string_view ReportGmailerrorred{ "\xef\x81\x92" };                       // U+f052
            constexpr static inline std::string_view ReportOff{ "\xee\x85\xb0" };                                 // U+e170
            constexpr static inline std::string_view ReportProblem{ "\xee\xa2\xb2" };                             // U+e8b2
            constexpr static inline std::string_view RequestPage{ "\xef\x88\xac" };                               // U+f22c
            constexpr static inline std::string_view RequestQuote{ "\xef\x86\xb6" };                              // U+f1b6
            constexpr static inline std::string_view ResetTv{ "\xee\xa7\x99" };                                   // U+e9d9
            constexpr static inline std::string_view RestartAlt{ "\xef\x81\x93" };                                // U+f053
            constexpr static inline std::string_view Restaurant{ "\xee\x95\xac" };                                // U+e56c
            constexpr static inline std::string_view RestaurantMenu{ "\xee\x95\xa1" };                            // U+e561
            constexpr static inline std::string_view Restore{ "\xee\xa2\xb3" };                                   // U+e8b3
            constexpr static inline std::string_view RestoreFromTrash{ "\xee\xa4\xb8" };                          // U+e938
            constexpr static inline std::string_view RestorePage{ "\xee\xa4\xa9" };                               // U+e929
            constexpr static inline std::string_view Reviews{ "\xef\x81\x94" };                                   // U+f054
            constexpr static inline std::string_view RiceBowl{ "\xef\x87\xb5" };                                  // U+f1f5
            constexpr static inline std::string_view RingVolume{ "\xee\x83\x91" };                                // U+e0d1
            constexpr static inline std::string_view Rocket{ "\xee\xae\xa5" };                                    // U+eba5
            constexpr static inline std::string_view RocketLaunch{ "\xee\xae\x9b" };                              // U+eb9b
            constexpr static inline std::string_view RollerShades{ "\xee\xb0\x92" };                              // U+ec12
            constexpr static inline std::string_view RollerShadesClosed{ "\xee\xb0\x91" };                        // U+ec11
            constexpr static inline std::string_view RollerSkating{ "\xee\xaf\x8d" };                             // U+ebcd
            constexpr static inline std::string_view Roofing{ "\xef\x88\x81" };                                   // U+f201
            constexpr static inline std::string_view Room{ "\xee\xa2\xb4" };                                      // U+e8b4
            constexpr static inline std::string_view RoomPreferences{ "\xef\x86\xb8" };                           // U+f1b8
            constexpr static inline std::string_view RoomService{ "\xee\xad\x89" };                               // U+eb49
            constexpr static inline std::string_view Rotate_90DegreesCcw{ "\xee\x90\x98" };                       // U+e418
            constexpr static inline std::string_view Rotate_90DegreesCw{ "\xee\xaa\xab" };                        // U+eaab
            constexpr static inline std::string_view RotateLeft{ "\xee\x90\x99" };                                // U+e419
            constexpr static inline std::string_view RotateRight{ "\xee\x90\x9a" };                               // U+e41a
            constexpr static inline std::string_view RoundaboutLeft{ "\xee\xae\x99" };                            // U+eb99
            constexpr static inline std::string_view RoundaboutRight{ "\xee\xae\xa3" };                           // U+eba3
            constexpr static inline std::string_view RoundedCorner{ "\xee\xa4\xa0" };                             // U+e920
            constexpr static inline std::string_view Route{ "\xee\xab\x8d" };                                     // U+eacd
            constexpr static inline std::string_view Router{ "\xee\x8c\xa8" };                                    // U+e328
            constexpr static inline std::string_view Rowing{ "\xee\xa4\xa1" };                                    // U+e921
            constexpr static inline std::string_view RssFeed{ "\xee\x83\xa5" };                                   // U+e0e5
            constexpr static inline std::string_view Rsvp{ "\xef\x81\x95" };                                      // U+f055
            constexpr static inline std::string_view Rtt{ "\xee\xa6\xad" };                                       // U+e9ad
            constexpr static inline std::string_view Rule{ "\xef\x87\x82" };                                      // U+f1c2
            constexpr static inline std::string_view RuleFolder{ "\xef\x87\x89" };                                // U+f1c9
            constexpr static inline std::string_view RunCircle{ "\xee\xbd\xaf" };                                 // U+ef6f
            constexpr static inline std::string_view RunningWithErrors{ "\xee\x94\x9d" };                         // U+e51d
            constexpr static inline std::string_view RvHookup{ "\xee\x99\x82" };                                  // U+e642
            constexpr static inline std::string_view SafetyCheck{ "\xee\xaf\xaf" };                               // U+ebef
            constexpr static inline std::string_view SafetyDivider{ "\xee\x87\x8c" };                             // U+e1cc
            constexpr static inline std::string_view Sailing{ "\xee\x94\x82" };                                   // U+e502
            constexpr static inline std::string_view Sanitizer{ "\xef\x88\x9d" };                                 // U+f21d
            constexpr static inline std::string_view Satellite{ "\xee\x95\xa2" };                                 // U+e562
            constexpr static inline std::string_view SatelliteAlt{ "\xee\xac\xba" };                              // U+eb3a
            constexpr static inline std::string_view Save{ "\xee\x85\xa1" };                                      // U+e161
            constexpr static inline std::string_view SaveAlt{ "\xee\x85\xb1" };                                   // U+e171
            constexpr static inline std::string_view SaveAs{ "\xee\xad\xa0" };                                    // U+eb60
            constexpr static inline std::string_view SavedSearch{ "\xee\xa8\x91" };                               // U+ea11
            constexpr static inline std::string_view Savings{ "\xee\x8b\xab" };                                   // U+e2eb
            constexpr static inline std::string_view Scale{ "\xee\xad\x9f" };                                     // U+eb5f
            constexpr static inline std::string_view Scanner{ "\xee\x8c\xa9" };                                   // U+e329
            constexpr static inline std::string_view ScatterPlot{ "\xee\x89\xa8" };                               // U+e268
            constexpr static inline std::string_view Schedule{ "\xee\xa2\xb5" };                                  // U+e8b5
            constexpr static inline std::string_view ScheduleSend{ "\xee\xa8\x8a" };                              // U+ea0a
            constexpr static inline std::string_view Schema{ "\xee\x93\xbd" };                                    // U+e4fd
            constexpr static inline std::string_view School{ "\xee\xa0\x8c" };                                    // U+e80c
            constexpr static inline std::string_view Science{ "\xee\xa9\x8b" };                                   // U+ea4b
            constexpr static inline std::string_view Score{ "\xee\x89\xa9" };                                     // U+e269
            constexpr static inline std::string_view Scoreboard{ "\xee\xaf\x90" };                                // U+ebd0
            constexpr static inline std::string_view ScreenLockLandscape{ "\xee\x86\xbe" };                       // U+e1be
            constexpr static inline std::string_view ScreenLockPortrait{ "\xee\x86\xbf" };                        // U+e1bf
            constexpr static inline std::string_view ScreenLockRotation{ "\xee\x87\x80" };                        // U+e1c0
            constexpr static inline std::string_view ScreenRotation{ "\xee\x87\x81" };                            // U+e1c1
            constexpr static inline std::string_view ScreenRotationAlt{ "\xee\xaf\xae" };                         // U+ebee
            constexpr static inline std::string_view ScreenSearchDesktop{ "\xee\xbd\xb0" };                       // U+ef70
            constexpr static inline std::string_view ScreenShare{ "\xee\x83\xa2" };                               // U+e0e2
            constexpr static inline std::string_view Screenshot{ "\xef\x81\x96" };                                // U+f056
            constexpr static inline std::string_view ScreenshotMonitor{ "\xee\xb0\x88" };                         // U+ec08
            constexpr static inline std::string_view ScubaDiving{ "\xee\xaf\x8e" };                               // U+ebce
            constexpr static inline std::string_view Sd{ "\xee\xa7\x9d" };                                        // U+e9dd
            constexpr static inline std::string_view SdCard{ "\xee\x98\xa3" };                                    // U+e623
            constexpr static inline std::string_view SdCardAlert{ "\xef\x81\x97" };                               // U+f057
            constexpr static inline std::string_view SdStorage{ "\xee\x87\x82" };                                 // U+e1c2
            constexpr static inline std::string_view Search{ "\xee\xa2\xb6" };                                    // U+e8b6
            constexpr static inline std::string_view SearchOff{ "\xee\xa9\xb6" };                                 // U+ea76
            constexpr static inline std::string_view Security{ "\xee\x8c\xaa" };                                  // U+e32a
            constexpr static inline std::string_view SecurityUpdate{ "\xef\x81\x98" };                            // U+f058
            constexpr static inline std::string_view SecurityUpdateGood{ "\xef\x81\x99" };                        // U+f059
            constexpr static inline std::string_view SecurityUpdateWarning{ "\xef\x81\x9a" };                     // U+f05a
            constexpr static inline std::string_view Segment{ "\xee\xa5\x8b" };                                   // U+e94b
            constexpr static inline std::string_view SelectAll{ "\xee\x85\xa2" };                                 // U+e162
            constexpr static inline std::string_view SelfImprovement{ "\xee\xa9\xb8" };                           // U+ea78
            constexpr static inline std::string_view Sell{ "\xef\x81\x9b" };                                      // U+f05b
            constexpr static inline std::string_view Send{ "\xee\x85\xa3" };                                      // U+e163
            constexpr static inline std::string_view SendAndArchive{ "\xee\xa8\x8c" };                            // U+ea0c
            constexpr static inline std::string_view SendTimeExtension{ "\xee\xab\x9b" };                         // U+eadb
            constexpr static inline std::string_view SendToMobile{ "\xef\x81\x9c" };                              // U+f05c
            constexpr static inline std::string_view SensorDoor{ "\xef\x86\xb5" };                                // U+f1b5
            constexpr static inline std::string_view SensorOccupied{ "\xee\xb0\x90" };                            // U+ec10
            constexpr static inline std::string_view SensorWindow{ "\xef\x86\xb4" };                              // U+f1b4
            constexpr static inline std::string_view Sensors{ "\xee\x94\x9e" };                                   // U+e51e
            constexpr static inline std::string_view SensorsOff{ "\xee\x94\x9f" };                                // U+e51f
            constexpr static inline std::string_view SentimentDissatisfied{ "\xee\xa0\x91" };                     // U+e811
            constexpr static inline std::string_view SentimentNeutral{ "\xee\xa0\x92" };                          // U+e812
            constexpr static inline std::string_view SentimentSatisfied{ "\xee\xa0\x93" };                        // U+e813
            constexpr static inline std::string_view SentimentSatisfiedAlt{ "\xee\x83\xad" };                     // U+e0ed
            constexpr static inline std::string_view SentimentVeryDissatisfied{ "\xee\xa0\x94" };                 // U+e814
            constexpr static inline std::string_view SentimentVerySatisfied{ "\xee\xa0\x95" };                    // U+e815
            constexpr static inline std::string_view SetMeal{ "\xef\x87\xaa" };                                   // U+f1ea
            constexpr static inline std::string_view Settings{ "\xee\xa2\xb8" };                                  // U+e8b8
            constexpr static inline std::string_view SettingsAccessibility{ "\xef\x81\x9d" };                     // U+f05d
            constexpr static inline std::string_view SettingsApplications{ "\xee\xa2\xb9" };                      // U+e8b9
            constexpr static inline std::string_view SettingsBackupRestore{ "\xee\xa2\xba" };                     // U+e8ba
            constexpr static inline std::string_view SettingsBluetooth{ "\xee\xa2\xbb" };                         // U+e8bb
            constexpr static inline std::string_view SettingsBrightness{ "\xee\xa2\xbd" };                        // U+e8bd
            constexpr static inline std::string_view SettingsCell{ "\xee\xa2\xbc" };                              // U+e8bc
            constexpr static inline std::string_view SettingsDisplay{ "\xee\xa2\xbd" };                           // U+e8bd
            constexpr static inline std::string_view SettingsEthernet{ "\xee\xa2\xbe" };                          // U+e8be
            constexpr static inline std::string_view SettingsInputAntenna{ "\xee\xa2\xbf" };                      // U+e8bf
            constexpr static inline std::string_view SettingsInputComponent{ "\xee\xa3\x80" };                    // U+e8c0
            constexpr static inline std::string_view SettingsInputComposite{ "\xee\xa3\x81" };                    // U+e8c1
            constexpr static inline std::string_view SettingsInputHdmi{ "\xee\xa3\x82" };                         // U+e8c2
            constexpr static inline std::string_view SettingsInputSvideo{ "\xee\xa3\x83" };                       // U+e8c3
            constexpr static inline std::string_view SettingsOverscan{ "\xee\xa3\x84" };                          // U+e8c4
            constexpr static inline std::string_view SettingsPhone{ "\xee\xa3\x85" };                             // U+e8c5
            constexpr static inline std::string_view SettingsPower{ "\xee\xa3\x86" };                             // U+e8c6
            constexpr static inline std::string_view SettingsRemote{ "\xee\xa3\x87" };                            // U+e8c7
            constexpr static inline std::string_view SettingsSuggest{ "\xef\x81\x9e" };                           // U+f05e
            constexpr static inline std::string_view SettingsSystemDaydream{ "\xee\x87\x83" };                    // U+e1c3
            constexpr static inline std::string_view SettingsVoice{ "\xee\xa3\x88" };                             // U+e8c8
            constexpr static inline std::string_view SevereCold{ "\xee\xaf\x93" };                                // U+ebd3
            constexpr static inline std::string_view ShapeLine{ "\xef\xa3\x93" };                                 // U+f8d3
            constexpr static inline std::string_view Share{ "\xee\xa0\x8d" };                                     // U+e80d
            constexpr static inline std::string_view ShareArrivalTime{ "\xee\x94\xa4" };                          // U+e524
            constexpr static inline std::string_view ShareLocation{ "\xef\x81\x9f" };                             // U+f05f
            constexpr static inline std::string_view Shelves{ "\xef\xa1\xae" };                                   // U+f86e
            constexpr static inline std::string_view Shield{ "\xee\xa7\xa0" };                                    // U+e9e0
            constexpr static inline std::string_view ShieldMoon{ "\xee\xaa\xa9" };                                // U+eaa9
            constexpr static inline std::string_view Shop{ "\xee\xa3\x89" };                                      // U+e8c9
            constexpr static inline std::string_view Shop_2{ "\xee\x86\x9e" };                                    // U+e19e
            constexpr static inline std::string_view ShopTwo{ "\xee\xa3\x8a" };                                   // U+e8ca
            constexpr static inline std::string_view Shopify{ "\xee\xaa\x9d" };                                   // U+ea9d
            constexpr static inline std::string_view ShoppingBag{ "\xef\x87\x8c" };                               // U+f1cc
            constexpr static inline std::string_view ShoppingBasket{ "\xee\xa3\x8b" };                            // U+e8cb
            constexpr static inline std::string_view ShoppingCart{ "\xee\xa3\x8c" };                              // U+e8cc
            constexpr static inline std::string_view ShoppingCartCheckout{ "\xee\xae\x88" };                      // U+eb88
            constexpr static inline std::string_view ShortText{ "\xee\x89\xa1" };                                 // U+e261
            constexpr static inline std::string_view Shortcut{ "\xef\x81\xa0" };                                  // U+f060
            constexpr static inline std::string_view ShowChart{ "\xee\x9b\xa1" };                                 // U+e6e1
            constexpr static inline std::string_view Shower{ "\xef\x81\xa1" };                                    // U+f061
            constexpr static inline std::string_view Shuffle{ "\xee\x81\x83" };                                   // U+e043
            constexpr static inline std::string_view ShuffleOn{ "\xee\xa7\xa1" };                                 // U+e9e1
            constexpr static inline std::string_view ShutterSpeed{ "\xee\x90\xbd" };                              // U+e43d
            constexpr static inline std::string_view Sick{ "\xef\x88\xa0" };                                      // U+f220
            constexpr static inline std::string_view SignLanguage{ "\xee\xaf\xa5" };                              // U+ebe5
            constexpr static inline std::string_view SignalCellular_0Bar{ "\xef\x82\xa8" };                       // U+f0a8
            constexpr static inline std::string_view SignalCellular_4Bar{ "\xee\x87\x88" };                       // U+e1c8
            constexpr static inline std::string_view SignalCellularAlt{ "\xee\x88\x82" };                         // U+e202
            constexpr static inline std::string_view SignalCellularAlt_1Bar{ "\xee\xaf\x9f" };                    // U+ebdf
            constexpr static inline std::string_view SignalCellularAlt_2Bar{ "\xee\xaf\xa3" };                    // U+ebe3
            constexpr static inline std::string_view SignalCellularConnectedNoInternet_0Bar{ "\xef\x82\xac" };    // U+f0ac
            constexpr static inline std::string_view SignalCellularConnectedNoInternet_4Bar{ "\xee\x87\x8d" };    // U+e1cd
            constexpr static inline std::string_view SignalCellularNoSim{ "\xee\x87\x8e" };                       // U+e1ce
            constexpr static inline std::string_view SignalCellularNodata{ "\xef\x81\xa2" };                      // U+f062
            constexpr static inline std::string_view SignalCellularNull{ "\xee\x87\x8f" };                        // U+e1cf
            constexpr static inline std::string_view SignalCellularOff{ "\xee\x87\x90" };                         // U+e1d0
            constexpr static inline std::string_view SignalWifi_0Bar{ "\xef\x82\xb0" };                           // U+f0b0
            constexpr static inline std::string_view SignalWifi_4Bar{ "\xee\x87\x98" };                           // U+e1d8
            constexpr static inline std::string_view SignalWifi_4BarLock{ "\xee\x87\x99" };                       // U+e1d9
            constexpr static inline std::string_view SignalWifiBad{ "\xef\x81\xa3" };                             // U+f063
            constexpr static inline std::string_view SignalWifiConnectedNoInternet_4{ "\xef\x81\xa4" };           // U+f064
            constexpr static inline std::string_view SignalWifiOff{ "\xee\x87\x9a" };                             // U+e1da
            constexpr static inline std::string_view SignalWifiStatusbar_4Bar{ "\xef\x81\xa5" };                  // U+f065
            constexpr static inline std::string_view SignalWifiStatusbarConnectedNoInternet_4{ "\xef\x81\xa6" };  // U+f066
            constexpr static inline std::string_view SignalWifiStatusbarNull{ "\xef\x81\xa7" };                   // U+f067
            constexpr static inline std::string_view Signpost{ "\xee\xae\x91" };                                  // U+eb91
            constexpr static inline std::string_view SimCard{ "\xee\x8c\xab" };                                   // U+e32b
            constexpr static inline std::string_view SimCardAlert{ "\xee\x98\xa4" };                              // U+e624
            constexpr static inline std::string_view SimCardDownload{ "\xef\x81\xa8" };                           // U+f068
            constexpr static inline std::string_view SingleBed{ "\xee\xa9\x88" };                                 // U+ea48
            constexpr static inline std::string_view Sip{ "\xef\x81\xa9" };                                       // U+f069
            constexpr static inline std::string_view Skateboarding{ "\xee\x94\x91" };                             // U+e511
            constexpr static inline std::string_view SkipNext{ "\xee\x81\x84" };                                  // U+e044
            constexpr static inline std::string_view SkipPrevious{ "\xee\x81\x85" };                              // U+e045
            constexpr static inline std::string_view Sledding{ "\xee\x94\x92" };                                  // U+e512
            constexpr static inline std::string_view Slideshow{ "\xee\x90\x9b" };                                 // U+e41b
            constexpr static inline std::string_view SlowMotionVideo{ "\xee\x81\xa8" };                           // U+e068
            constexpr static inline std::string_view SmartButton{ "\xef\x87\x81" };                               // U+f1c1
            constexpr static inline std::string_view SmartDisplay{ "\xef\x81\xaa" };                              // U+f06a
            constexpr static inline std::string_view SmartScreen{ "\xef\x81\xab" };                               // U+f06b
            constexpr static inline std::string_view SmartToy{ "\xef\x81\xac" };                                  // U+f06c
            constexpr static inline std::string_view Smartphone{ "\xee\x8c\xac" };                                // U+e32c
            constexpr static inline std::string_view SmokeFree{ "\xee\xad\x8a" };                                 // U+eb4a
            constexpr static inline std::string_view SmokingRooms{ "\xee\xad\x8b" };                              // U+eb4b
            constexpr static inline std::string_view Sms{ "\xee\x98\xa5" };                                       // U+e625
            constexpr static inline std::string_view SmsFailed{ "\xee\x98\xa6" };                                 // U+e626
            constexpr static inline std::string_view Snapchat{ "\xee\xa9\xae" };                                  // U+ea6e
            constexpr static inline std::string_view SnippetFolder{ "\xef\x87\x87" };                             // U+f1c7
            constexpr static inline std::string_view Snooze{ "\xee\x81\x86" };                                    // U+e046
            constexpr static inline std::string_view Snowboarding{ "\xee\x94\x93" };                              // U+e513
            constexpr static inline std::string_view Snowing{ "\xee\xa0\x8f" };                                   // U+e80f
            constexpr static inline std::string_view Snowmobile{ "\xee\x94\x83" };                                // U+e503
            constexpr static inline std::string_view Snowshoeing{ "\xee\x94\x94" };                               // U+e514
            constexpr static inline std::string_view Soap{ "\xef\x86\xb2" };                                      // U+f1b2
            constexpr static inline std::string_view SocialDistance{ "\xee\x87\x8b" };                            // U+e1cb
            constexpr static inline std::string_view SolarPower{ "\xee\xb0\x8f" };                                // U+ec0f
            constexpr static inline std::string_view Sort{ "\xee\x85\xa4" };                                      // U+e164
            constexpr static inline std::string_view SortByAlpha{ "\xee\x81\x93" };                               // U+e053
            constexpr static inline std::string_view Sos{ "\xee\xaf\xb7" };                                       // U+ebf7
            constexpr static inline std::string_view SoupKitchen{ "\xee\x9f\x93" };                               // U+e7d3
            constexpr static inline std::string_view Source{ "\xef\x87\x84" };                                    // U+f1c4
            constexpr static inline std::string_view South{ "\xef\x87\xa3" };                                     // U+f1e3
            constexpr static inline std::string_view SouthAmerica{ "\xee\x9f\xa4" };                              // U+e7e4
            constexpr static inline std::string_view SouthEast{ "\xef\x87\xa4" };                                 // U+f1e4
            constexpr static inline std::string_view SouthWest{ "\xef\x87\xa5" };                                 // U+f1e5
            constexpr static inline std::string_view Spa{ "\xee\xad\x8c" };                                       // U+eb4c
            constexpr static inline std::string_view SpaceBar{ "\xee\x89\x96" };                                  // U+e256
            constexpr static inline std::string_view SpaceDashboard{ "\xee\x99\xab" };                            // U+e66b
            constexpr static inline std::string_view SpatialAudio{ "\xee\xaf\xab" };                              // U+ebeb
            constexpr static inline std::string_view SpatialAudioOff{ "\xee\xaf\xa8" };                           // U+ebe8
            constexpr static inline std::string_view SpatialTracking{ "\xee\xaf\xaa" };                           // U+ebea
            constexpr static inline std::string_view Speaker{ "\xee\x8c\xad" };                                   // U+e32d
            constexpr static inline std::string_view SpeakerGroup{ "\xee\x8c\xae" };                              // U+e32e
            constexpr static inline std::string_view SpeakerNotes{ "\xee\xa3\x8d" };                              // U+e8cd
            constexpr static inline std::string_view SpeakerNotesOff{ "\xee\xa4\xaa" };                           // U+e92a
            constexpr static inline std::string_view SpeakerPhone{ "\xee\x83\x92" };                              // U+e0d2
            constexpr static inline std::string_view Speed{ "\xee\xa7\xa4" };                                     // U+e9e4
            constexpr static inline std::string_view Spellcheck{ "\xee\xa3\x8e" };                                // U+e8ce
            constexpr static inline std::string_view Splitscreen{ "\xef\x81\xad" };                               // U+f06d
            constexpr static inline std::string_view Spoke{ "\xee\xa6\xa7" };                                     // U+e9a7
            constexpr static inline std::string_view Sports{ "\xee\xa8\xb0" };                                    // U+ea30
            constexpr static inline std::string_view SportsBar{ "\xef\x87\xb3" };                                 // U+f1f3
            constexpr static inline std::string_view SportsBaseball{ "\xee\xa9\x91" };                            // U+ea51
            constexpr static inline std::string_view SportsBasketball{ "\xee\xa8\xa6" };                          // U+ea26
            constexpr static inline std::string_view SportsCricket{ "\xee\xa8\xa7" };                             // U+ea27
            constexpr static inline std::string_view SportsEsports{ "\xee\xa8\xa8" };                             // U+ea28
            constexpr static inline std::string_view SportsFootball{ "\xee\xa8\xa9" };                            // U+ea29
            constexpr static inline std::string_view SportsGolf{ "\xee\xa8\xaa" };                                // U+ea2a
            constexpr static inline std::string_view SportsGymnastics{ "\xee\xaf\x84" };                          // U+ebc4
            constexpr static inline std::string_view SportsHandball{ "\xee\xa8\xb3" };                            // U+ea33
            constexpr static inline std::string_view SportsHockey{ "\xee\xa8\xab" };                              // U+ea2b
            constexpr static inline std::string_view SportsKabaddi{ "\xee\xa8\xb4" };                             // U+ea34
            constexpr static inline std::string_view SportsMartialArts{ "\xee\xab\xa9" };                         // U+eae9
            constexpr static inline std::string_view SportsMma{ "\xee\xa8\xac" };                                 // U+ea2c
            constexpr static inline std::string_view SportsMotorsports{ "\xee\xa8\xad" };                         // U+ea2d
            constexpr static inline std::string_view SportsRugby{ "\xee\xa8\xae" };                               // U+ea2e
            constexpr static inline std::string_view SportsScore{ "\xef\x81\xae" };                               // U+f06e
            constexpr static inline std::string_view SportsSoccer{ "\xee\xa8\xaf" };                              // U+ea2f
            constexpr static inline std::string_view SportsTennis{ "\xee\xa8\xb2" };                              // U+ea32
            constexpr static inline std::string_view SportsVolleyball{ "\xee\xa8\xb1" };                          // U+ea31
            constexpr static inline std::string_view Square{ "\xee\xac\xb6" };                                    // U+eb36
            constexpr static inline std::string_view SquareFoot{ "\xee\xa9\x89" };                                // U+ea49
            constexpr static inline std::string_view SsidChart{ "\xee\xad\xa6" };                                 // U+eb66
            constexpr static inline std::string_view StackedBarChart{ "\xee\xa7\xa6" };                           // U+e9e6
            constexpr static inline std::string_view StackedLineChart{ "\xef\x88\xab" };                          // U+f22b
            constexpr static inline std::string_view Stadium{ "\xee\xae\x90" };                                   // U+eb90
            constexpr static inline std::string_view Stairs{ "\xef\x86\xa9" };                                    // U+f1a9
            constexpr static inline std::string_view Star{ "\xee\xa0\xb8" };                                      // U+e838
            constexpr static inline std::string_view StarBorder{ "\xee\xa0\xba" };                                // U+e83a
            constexpr static inline std::string_view StarBorderPurple500{ "\xef\x82\x99" };                       // U+f099
            constexpr static inline std::string_view StarHalf{ "\xee\xa0\xb9" };                                  // U+e839
            constexpr static inline std::string_view StarOutline{ "\xef\x81\xaf" };                               // U+f06f
            constexpr static inline std::string_view StarPurple500{ "\xef\x82\x9a" };                             // U+f09a
            constexpr static inline std::string_view StarRate{ "\xef\x83\xac" };                                  // U+f0ec
            constexpr static inline std::string_view Stars{ "\xee\xa3\x90" };                                     // U+e8d0
            constexpr static inline std::string_view Start{ "\xee\x82\x89" };                                     // U+e089
            constexpr static inline std::string_view StayCurrentLandscape{ "\xee\x83\x93" };                      // U+e0d3
            constexpr static inline std::string_view StayCurrentPortrait{ "\xee\x83\x94" };                       // U+e0d4
            constexpr static inline std::string_view StayPrimaryLandscape{ "\xee\x83\x95" };                      // U+e0d5
            constexpr static inline std::string_view StayPrimaryPortrait{ "\xee\x83\x96" };                       // U+e0d6
            constexpr static inline std::string_view StickyNote_2{ "\xef\x87\xbc" };                              // U+f1fc
            constexpr static inline std::string_view Stop{ "\xee\x81\x87" };                                      // U+e047
            constexpr static inline std::string_view StopCircle{ "\xee\xbd\xb1" };                                // U+ef71
            constexpr static inline std::string_view StopScreenShare{ "\xee\x83\xa3" };                           // U+e0e3
            constexpr static inline std::string_view Storage{ "\xee\x87\x9b" };                                   // U+e1db
            constexpr static inline std::string_view Store{ "\xee\xa3\x91" };                                     // U+e8d1
            constexpr static inline std::string_view StoreMallDirectory{ "\xee\x95\xa3" };                        // U+e563
            constexpr static inline std::string_view Storefront{ "\xee\xa8\x92" };                                // U+ea12
            constexpr static inline std::string_view Storm{ "\xef\x81\xb0" };                                     // U+f070
            constexpr static inline std::string_view Straight{ "\xee\xae\x95" };                                  // U+eb95
            constexpr static inline std::string_view Straighten{ "\xee\x90\x9c" };                                // U+e41c
            constexpr static inline std::string_view Stream{ "\xee\xa7\xa9" };                                    // U+e9e9
            constexpr static inline std::string_view Streetview{ "\xee\x95\xae" };                                // U+e56e
            constexpr static inline std::string_view StrikethroughS{ "\xee\x89\x97" };                            // U+e257
            constexpr static inline std::string_view Stroller{ "\xef\x86\xae" };                                  // U+f1ae
            constexpr static inline std::string_view Style{ "\xee\x90\x9d" };                                     // U+e41d
            constexpr static inline std::string_view SubdirectoryArrowLeft{ "\xee\x97\x99" };                     // U+e5d9
            constexpr static inline std::string_view SubdirectoryArrowRight{ "\xee\x97\x9a" };                    // U+e5da
            constexpr static inline std::string_view Subject{ "\xee\xa3\x92" };                                   // U+e8d2
            constexpr static inline std::string_view Subscript{ "\xef\x84\x91" };                                 // U+f111
            constexpr static inline std::string_view Subscriptions{ "\xee\x81\xa4" };                             // U+e064
            constexpr static inline std::string_view Subtitles{ "\xee\x81\x88" };                                 // U+e048
            constexpr static inline std::string_view SubtitlesOff{ "\xee\xbd\xb2" };                              // U+ef72
            constexpr static inline std::string_view Subway{ "\xee\x95\xaf" };                                    // U+e56f
            constexpr static inline std::string_view Summarize{ "\xef\x81\xb1" };                                 // U+f071
            constexpr static inline std::string_view Sunny{ "\xee\xa0\x9a" };                                     // U+e81a
            constexpr static inline std::string_view SunnySnowing{ "\xee\xa0\x99" };                              // U+e819
            constexpr static inline std::string_view Superscript{ "\xef\x84\x92" };                               // U+f112
            constexpr static inline std::string_view SupervisedUserCircle{ "\xee\xa4\xb9" };                      // U+e939
            constexpr static inline std::string_view SupervisorAccount{ "\xee\xa3\x93" };                         // U+e8d3
            constexpr static inline std::string_view Support{ "\xee\xbd\xb3" };                                   // U+ef73
            constexpr static inline std::string_view SupportAgent{ "\xef\x83\xa2" };                              // U+f0e2
            constexpr static inline std::string_view Surfing{ "\xee\x94\x95" };                                   // U+e515
            constexpr static inline std::string_view SurroundSound{ "\xee\x81\x89" };                             // U+e049
            constexpr static inline std::string_view SwapCalls{ "\xee\x83\x97" };                                 // U+e0d7
            constexpr static inline std::string_view SwapHoriz{ "\xee\xa3\x94" };                                 // U+e8d4
            constexpr static inline std::string_view SwapHorizontalCircle{ "\xee\xa4\xb3" };                      // U+e933
            constexpr static inline std::string_view SwapVert{ "\xee\xa3\x95" };                                  // U+e8d5
            constexpr static inline std::string_view SwapVertCircle{ "\xee\xa3\x96" };                            // U+e8d6
            constexpr static inline std::string_view SwapVerticalCircle{ "\xee\xa3\x96" };                        // U+e8d6
            constexpr static inline std::string_view Swipe{ "\xee\xa7\xac" };                                     // U+e9ec
            constexpr static inline std::string_view SwipeDown{ "\xee\xad\x93" };                                 // U+eb53
            constexpr static inline std::string_view SwipeDownAlt{ "\xee\xac\xb0" };                              // U+eb30
            constexpr static inline std::string_view SwipeLeft{ "\xee\xad\x99" };                                 // U+eb59
            constexpr static inline std::string_view SwipeLeftAlt{ "\xee\xac\xb3" };                              // U+eb33
            constexpr static inline std::string_view SwipeRight{ "\xee\xad\x92" };                                // U+eb52
            constexpr static inline std::string_view SwipeRightAlt{ "\xee\xad\x96" };                             // U+eb56
            constexpr static inline std::string_view SwipeUp{ "\xee\xac\xae" };                                   // U+eb2e
            constexpr static inline std::string_view SwipeUpAlt{ "\xee\xac\xb5" };                                // U+eb35
            constexpr static inline std::string_view SwipeVertical{ "\xee\xad\x91" };                             // U+eb51
            constexpr static inline std::string_view SwitchAccessShortcut{ "\xee\x9f\xa1" };                      // U+e7e1
            constexpr static inline std::string_view SwitchAccessShortcutAdd{ "\xee\x9f\xa2" };                   // U+e7e2
            constexpr static inline std::string_view SwitchAccount{ "\xee\xa7\xad" };                             // U+e9ed
            constexpr static inline std::string_view SwitchCamera{ "\xee\x90\x9e" };                              // U+e41e
            constexpr static inline std::string_view SwitchLeft{ "\xef\x87\x91" };                                // U+f1d1
            constexpr static inline std::string_view SwitchRight{ "\xef\x87\x92" };                               // U+f1d2
            constexpr static inline std::string_view SwitchVideo{ "\xee\x90\x9f" };                               // U+e41f
            constexpr static inline std::string_view Synagogue{ "\xee\xaa\xb0" };                                 // U+eab0
            constexpr static inline std::string_view Sync{ "\xee\x98\xa7" };                                      // U+e627
            constexpr static inline std::string_view SyncAlt{ "\xee\xa8\x98" };                                   // U+ea18
            constexpr static inline std::string_view SyncDisabled{ "\xee\x98\xa8" };                              // U+e628
            constexpr static inline std::string_view SyncLock{ "\xee\xab\xae" };                                  // U+eaee
            constexpr static inline std::string_view SyncProblem{ "\xee\x98\xa9" };                               // U+e629
            constexpr static inline std::string_view SystemSecurityUpdate{ "\xef\x81\xb2" };                      // U+f072
            constexpr static inline std::string_view SystemSecurityUpdateGood{ "\xef\x81\xb3" };                  // U+f073
            constexpr static inline std::string_view SystemSecurityUpdateWarning{ "\xef\x81\xb4" };               // U+f074
            constexpr static inline std::string_view SystemUpdate{ "\xee\x98\xaa" };                              // U+e62a
            constexpr static inline std::string_view SystemUpdateAlt{ "\xee\xa3\x97" };                           // U+e8d7
            constexpr static inline std::string_view SystemUpdateTv{ "\xee\xa3\x97" };                            // U+e8d7
            constexpr static inline std::string_view Tab{ "\xee\xa3\x98" };                                       // U+e8d8
            constexpr static inline std::string_view TabUnselected{ "\xee\xa3\x99" };                             // U+e8d9
            constexpr static inline std::string_view TableBar{ "\xee\xab\x92" };                                  // U+ead2
            constexpr static inline std::string_view TableChart{ "\xee\x89\xa5" };                                // U+e265
            constexpr static inline std::string_view TableRestaurant{ "\xee\xab\x86" };                           // U+eac6
            constexpr static inline std::string_view TableRows{ "\xef\x84\x81" };                                 // U+f101
            constexpr static inline std::string_view TableView{ "\xef\x86\xbe" };                                 // U+f1be
            constexpr static inline std::string_view Tablet{ "\xee\x8c\xaf" };                                    // U+e32f
            constexpr static inline std::string_view TabletAndroid{ "\xee\x8c\xb0" };                             // U+e330
            constexpr static inline std::string_view TabletMac{ "\xee\x8c\xb1" };                                 // U+e331
            constexpr static inline std::string_view Tag{ "\xee\xa7\xaf" };                                       // U+e9ef
            constexpr static inline std::string_view TagFaces{ "\xee\x90\xa0" };                                  // U+e420
            constexpr static inline std::string_view TakeoutDining{ "\xee\xa9\xb4" };                             // U+ea74
            constexpr static inline std::string_view TapAndPlay{ "\xee\x98\xab" };                                // U+e62b
            constexpr static inline std::string_view Tapas{ "\xef\x87\xa9" };                                     // U+f1e9
            constexpr static inline std::string_view Task{ "\xef\x81\xb5" };                                      // U+f075
            constexpr static inline std::string_view TaskAlt{ "\xee\x8b\xa6" };                                   // U+e2e6
            constexpr static inline std::string_view TaxiAlert{ "\xee\xbd\xb4" };                                 // U+ef74
            constexpr static inline std::string_view Telegram{ "\xee\xa9\xab" };                                  // U+ea6b
            constexpr static inline std::string_view TempleBuddhist{ "\xee\xaa\xb3" };                            // U+eab3
            constexpr static inline std::string_view TempleHindu{ "\xee\xaa\xaf" };                               // U+eaaf
            constexpr static inline std::string_view Terminal{ "\xee\xae\x8e" };                                  // U+eb8e
            constexpr static inline std::string_view Terrain{ "\xee\x95\xa4" };                                   // U+e564
            constexpr static inline std::string_view TextDecrease{ "\xee\xab\x9d" };                              // U+eadd
            constexpr static inline std::string_view TextFields{ "\xee\x89\xa2" };                                // U+e262
            constexpr static inline std::string_view TextFormat{ "\xee\x85\xa5" };                                // U+e165
            constexpr static inline std::string_view TextIncrease{ "\xee\xab\xa2" };                              // U+eae2
            constexpr static inline std::string_view TextRotateUp{ "\xee\xa4\xba" };                              // U+e93a
            constexpr static inline std::string_view TextRotateVertical{ "\xee\xa4\xbb" };                        // U+e93b
            constexpr static inline std::string_view TextRotationAngledown{ "\xee\xa4\xbc" };                     // U+e93c
            constexpr static inline std::string_view TextRotationAngleup{ "\xee\xa4\xbd" };                       // U+e93d
            constexpr static inline std::string_view TextRotationDown{ "\xee\xa4\xbe" };                          // U+e93e
            constexpr static inline std::string_view TextRotationNone{ "\xee\xa4\xbf" };                          // U+e93f
            constexpr static inline std::string_view TextSnippet{ "\xef\x87\x86" };                               // U+f1c6
            constexpr static inline std::string_view Textsms{ "\xee\x83\x98" };                                   // U+e0d8
            constexpr static inline std::string_view Texture{ "\xee\x90\xa1" };                                   // U+e421
            constexpr static inline std::string_view TheaterComedy{ "\xee\xa9\xa6" };                             // U+ea66
            constexpr static inline std::string_view Theaters{ "\xee\xa3\x9a" };                                  // U+e8da
            constexpr static inline std::string_view Thermostat{ "\xef\x81\xb6" };                                // U+f076
            constexpr static inline std::string_view ThermostatAuto{ "\xef\x81\xb7" };                            // U+f077
            constexpr static inline std::string_view ThumbDown{ "\xee\xa3\x9b" };                                 // U+e8db
            constexpr static inline std::string_view ThumbDownAlt{ "\xee\xa0\x96" };                              // U+e816
            constexpr static inline std::string_view ThumbDownOffAlt{ "\xee\xa7\xb2" };                           // U+e9f2
            constexpr static inline std::string_view ThumbUp{ "\xee\xa3\x9c" };                                   // U+e8dc
            constexpr static inline std::string_view ThumbUpAlt{ "\xee\xa0\x97" };                                // U+e817
            constexpr static inline std::string_view ThumbUpOffAlt{ "\xee\xa7\xb3" };                             // U+e9f3
            constexpr static inline std::string_view ThumbsUpDown{ "\xee\xa3\x9d" };                              // U+e8dd
            constexpr static inline std::string_view Thunderstorm{ "\xee\xaf\x9b" };                              // U+ebdb
            constexpr static inline std::string_view Tiktok{ "\xee\xa9\xbe" };                                    // U+ea7e
            constexpr static inline std::string_view TimeToLeave{ "\xee\x98\xac" };                               // U+e62c
            constexpr static inline std::string_view Timelapse{ "\xee\x90\xa2" };                                 // U+e422
            constexpr static inline std::string_view Timeline{ "\xee\xa4\xa2" };                                  // U+e922
            constexpr static inline std::string_view Timer{ "\xee\x90\xa5" };                                     // U+e425
            constexpr static inline std::string_view Timer_10{ "\xee\x90\xa3" };                                  // U+e423
            constexpr static inline std::string_view Timer_10Select{ "\xef\x81\xba" };                            // U+f07a
            constexpr static inline std::string_view Timer_3{ "\xee\x90\xa4" };                                   // U+e424
            constexpr static inline std::string_view Timer_3Select{ "\xef\x81\xbb" };                             // U+f07b
            constexpr static inline std::string_view TimerOff{ "\xee\x90\xa6" };                                  // U+e426
            constexpr static inline std::string_view TipsAndUpdates{ "\xee\x9e\x9a" };                            // U+e79a
            constexpr static inline std::string_view TireRepair{ "\xee\xaf\x88" };                                // U+ebc8
            constexpr static inline std::string_view Title{ "\xee\x89\xa4" };                                     // U+e264
            constexpr static inline std::string_view Toc{ "\xee\xa3\x9e" };                                       // U+e8de
            constexpr static inline std::string_view Today{ "\xee\xa3\x9f" };                                     // U+e8df
            constexpr static inline std::string_view ToggleOff{ "\xee\xa7\xb5" };                                 // U+e9f5
            constexpr static inline std::string_view ToggleOn{ "\xee\xa7\xb6" };                                  // U+e9f6
            constexpr static inline std::string_view Token{ "\xee\xa8\xa5" };                                     // U+ea25
            constexpr static inline std::string_view Toll{ "\xee\xa3\xa0" };                                      // U+e8e0
            constexpr static inline std::string_view Tonality{ "\xee\x90\xa7" };                                  // U+e427
            constexpr static inline std::string_view Topic{ "\xef\x87\x88" };                                     // U+f1c8
            constexpr static inline std::string_view Tornado{ "\xee\x86\x99" };                                   // U+e199
            constexpr static inline std::string_view TouchApp{ "\xee\xa4\x93" };                                  // U+e913
            constexpr static inline std::string_view Tour{ "\xee\xbd\xb5" };                                      // U+ef75
            constexpr static inline std::string_view Toys{ "\xee\x8c\xb2" };                                      // U+e332
            constexpr static inline std::string_view TrackChanges{ "\xee\xa3\xa1" };                              // U+e8e1
            constexpr static inline std::string_view Traffic{ "\xee\x95\xa5" };                                   // U+e565
            constexpr static inline std::string_view Train{ "\xee\x95\xb0" };                                     // U+e570
            constexpr static inline std::string_view Tram{ "\xee\x95\xb1" };                                      // U+e571
            constexpr static inline std::string_view Transcribe{ "\xef\xa3\xac" };                                // U+f8ec
            constexpr static inline std::string_view TransferWithinAStation{ "\xee\x95\xb2" };                    // U+e572
            constexpr static inline std::string_view Transform{ "\xee\x90\xa8" };                                 // U+e428
            constexpr static inline std::string_view Transgender{ "\xee\x96\x8d" };                               // U+e58d
            constexpr static inline std::string_view TransitEnterexit{ "\xee\x95\xb9" };                          // U+e579
            constexpr static inline std::string_view Translate{ "\xee\xa3\xa2" };                                 // U+e8e2
            constexpr static inline std::string_view TravelExplore{ "\xee\x8b\x9b" };                             // U+e2db
            constexpr static inline std::string_view TrendingDown{ "\xee\xa3\xa3" };                              // U+e8e3
            constexpr static inline std::string_view TrendingFlat{ "\xee\xa3\xa4" };                              // U+e8e4
            constexpr static inline std::string_view TrendingNeutral{ "\xee\xa3\xa4" };                           // U+e8e4
            constexpr static inline std::string_view TrendingUp{ "\xee\xa3\xa5" };                                // U+e8e5
            constexpr static inline std::string_view TripOrigin{ "\xee\x95\xbb" };                                // U+e57b
            constexpr static inline std::string_view Trolley{ "\xef\xa1\xab" };                                   // U+f86b
            constexpr static inline std::string_view Troubleshoot{ "\xee\x87\x92" };                              // U+e1d2
            constexpr static inline std::string_view Try{ "\xef\x81\xbc" };                                       // U+f07c
            constexpr static inline std::string_view Tsunami{ "\xee\xaf\x98" };                                   // U+ebd8
            constexpr static inline std::string_view Tty{ "\xef\x86\xaa" };                                       // U+f1aa
            constexpr static inline std::string_view Tune{ "\xee\x90\xa9" };                                      // U+e429
            constexpr static inline std::string_view Tungsten{ "\xef\x81\xbd" };                                  // U+f07d
            constexpr static inline std::string_view TurnLeft{ "\xee\xae\xa6" };                                  // U+eba6
            constexpr static inline std::string_view TurnRight{ "\xee\xae\xab" };                                 // U+ebab
            constexpr static inline std::string_view TurnSharpLeft{ "\xee\xae\xa7" };                             // U+eba7
            constexpr static inline std::string_view TurnSharpRight{ "\xee\xae\xaa" };                            // U+ebaa
            constexpr static inline std::string_view TurnSlightLeft{ "\xee\xae\xa4" };                            // U+eba4
            constexpr static inline std::string_view TurnSlightRight{ "\xee\xae\x9a" };                           // U+eb9a
            constexpr static inline std::string_view TurnedIn{ "\xee\xa3\xa6" };                                  // U+e8e6
            constexpr static inline std::string_view TurnedInNot{ "\xee\xa3\xa7" };                               // U+e8e7
            constexpr static inline std::string_view Tv{ "\xee\x8c\xb3" };                                        // U+e333
            constexpr static inline std::string_view TvOff{ "\xee\x99\x87" };                                     // U+e647
            constexpr static inline std::string_view TwoWheeler{ "\xee\xa7\xb9" };                                // U+e9f9
            constexpr static inline std::string_view TypeSpecimen{ "\xef\xa3\xb0" };                              // U+f8f0
            constexpr static inline std::string_view UTurnLeft{ "\xee\xae\xa1" };                                 // U+eba1
            constexpr static inline std::string_view UTurnRight{ "\xee\xae\xa2" };                                // U+eba2
            constexpr static inline std::string_view Umbrella{ "\xef\x86\xad" };                                  // U+f1ad
            constexpr static inline std::string_view Unarchive{ "\xee\x85\xa9" };                                 // U+e169
            constexpr static inline std::string_view Undo{ "\xee\x85\xa6" };                                      // U+e166
            constexpr static inline std::string_view UnfoldLess{ "\xee\x97\x96" };                                // U+e5d6
            constexpr static inline std::string_view UnfoldLessDouble{ "\xef\xa3\x8f" };                          // U+f8cf
            constexpr static inline std::string_view UnfoldMore{ "\xee\x97\x97" };                                // U+e5d7
            constexpr static inline std::string_view UnfoldMoreDouble{ "\xef\xa3\x90" };                          // U+f8d0
            constexpr static inline std::string_view Unpublished{ "\xef\x88\xb6" };                               // U+f236
            constexpr static inline std::string_view Unsubscribe{ "\xee\x83\xab" };                               // U+e0eb
            constexpr static inline std::string_view Upcoming{ "\xef\x81\xbe" };                                  // U+f07e
            constexpr static inline std::string_view Update{ "\xee\xa4\xa3" };                                    // U+e923
            constexpr static inline std::string_view UpdateDisabled{ "\xee\x81\xb5" };                            // U+e075
            constexpr static inline std::string_view Upgrade{ "\xef\x83\xbb" };                                   // U+f0fb
            constexpr static inline std::string_view Upload{ "\xef\x82\x9b" };                                    // U+f09b
            constexpr static inline std::string_view UploadFile{ "\xee\xa7\xbc" };                                // U+e9fc
            constexpr static inline std::string_view Usb{ "\xee\x87\xa0" };                                       // U+e1e0
            constexpr static inline std::string_view UsbOff{ "\xee\x93\xba" };                                    // U+e4fa
            constexpr static inline std::string_view Vaccines{ "\xee\x84\xb8" };                                  // U+e138
            constexpr static inline std::string_view VapeFree{ "\xee\xaf\x86" };                                  // U+ebc6
            constexpr static inline std::string_view VapingRooms{ "\xee\xaf\x8f" };                               // U+ebcf
            constexpr static inline std::string_view Verified{ "\xee\xbd\xb6" };                                  // U+ef76
            constexpr static inline std::string_view VerifiedUser{ "\xee\xa3\xa8" };                              // U+e8e8
            constexpr static inline std::string_view VerticalAlignBottom{ "\xee\x89\x98" };                       // U+e258
            constexpr static inline std::string_view VerticalAlignCenter{ "\xee\x89\x99" };                       // U+e259
            constexpr static inline std::string_view VerticalAlignTop{ "\xee\x89\x9a" };                          // U+e25a
            constexpr static inline std::string_view VerticalDistribute{ "\xee\x81\xb6" };                        // U+e076
            constexpr static inline std::string_view VerticalShades{ "\xee\xb0\x8e" };                            // U+ec0e
            constexpr static inline std::string_view VerticalShadesClosed{ "\xee\xb0\x8d" };                      // U+ec0d
            constexpr static inline std::string_view VerticalSplit{ "\xee\xa5\x89" };                             // U+e949
            constexpr static inline std::string_view Vibration{ "\xee\x98\xad" };                                 // U+e62d
            constexpr static inline std::string_view VideoCall{ "\xee\x81\xb0" };                                 // U+e070
            constexpr static inline std::string_view VideoCameraBack{ "\xef\x81\xbf" };                           // U+f07f
            constexpr static inline std::string_view VideoCameraFront{ "\xef\x82\x80" };                          // U+f080
            constexpr static inline std::string_view VideoChat{ "\xef\xa2\xa0" };                                 // U+f8a0
            constexpr static inline std::string_view VideoCollection{ "\xee\x81\x8a" };                           // U+e04a
            constexpr static inline std::string_view VideoFile{ "\xee\xae\x87" };                                 // U+eb87
            constexpr static inline std::string_view VideoLabel{ "\xee\x81\xb1" };                                // U+e071
            constexpr static inline std::string_view VideoLibrary{ "\xee\x81\x8a" };                              // U+e04a
            constexpr static inline std::string_view VideoSettings{ "\xee\xa9\xb5" };                             // U+ea75
            constexpr static inline std::string_view VideoStable{ "\xef\x82\x81" };                               // U+f081
            constexpr static inline std::string_view Videocam{ "\xee\x81\x8b" };                                  // U+e04b
            constexpr static inline std::string_view VideocamOff{ "\xee\x81\x8c" };                               // U+e04c
            constexpr static inline std::string_view VideogameAsset{ "\xee\x8c\xb8" };                            // U+e338
            constexpr static inline std::string_view VideogameAssetOff{ "\xee\x94\x80" };                         // U+e500
            constexpr static inline std::string_view ViewAgenda{ "\xee\xa3\xa9" };                                // U+e8e9
            constexpr static inline std::string_view ViewArray{ "\xee\xa3\xaa" };                                 // U+e8ea
            constexpr static inline std::string_view ViewCarousel{ "\xee\xa3\xab" };                              // U+e8eb
            constexpr static inline std::string_view ViewColumn{ "\xee\xa3\xac" };                                // U+e8ec
            constexpr static inline std::string_view ViewComfortable{ "\xee\x90\xaa" };                           // U+e42a
            constexpr static inline std::string_view ViewComfy{ "\xee\x90\xaa" };                                 // U+e42a
            constexpr static inline std::string_view ViewComfyAlt{ "\xee\xad\xb3" };                              // U+eb73
            constexpr static inline std::string_view ViewCompact{ "\xee\x90\xab" };                               // U+e42b
            constexpr static inline std::string_view ViewCompactAlt{ "\xee\xad\xb4" };                            // U+eb74
            constexpr static inline std::string_view ViewCozy{ "\xee\xad\xb5" };                                  // U+eb75
            constexpr static inline std::string_view ViewDay{ "\xee\xa3\xad" };                                   // U+e8ed
            constexpr static inline std::string_view ViewHeadline{ "\xee\xa3\xae" };                              // U+e8ee
            constexpr static inline std::string_view ViewInAr{ "\xee\xa7\xbe" };                                  // U+e9fe
            constexpr static inline std::string_view ViewKanban{ "\xee\xad\xbf" };                                // U+eb7f
            constexpr static inline std::string_view ViewList{ "\xee\xa3\xaf" };                                  // U+e8ef
            constexpr static inline std::string_view ViewModule{ "\xee\xa3\xb0" };                                // U+e8f0
            constexpr static inline std::string_view ViewQuilt{ "\xee\xa3\xb1" };                                 // U+e8f1
            constexpr static inline std::string_view ViewSidebar{ "\xef\x84\x94" };                               // U+f114
            constexpr static inline std::string_view ViewStream{ "\xee\xa3\xb2" };                                // U+e8f2
            constexpr static inline std::string_view ViewTimeline{ "\xee\xae\x85" };                              // U+eb85
            constexpr static inline std::string_view ViewWeek{ "\xee\xa3\xb3" };                                  // U+e8f3
            constexpr static inline std::string_view Vignette{ "\xee\x90\xb5" };                                  // U+e435
            constexpr static inline std::string_view Villa{ "\xee\x96\x86" };                                     // U+e586
            constexpr static inline std::string_view Visibility{ "\xee\xa3\xb4" };                                // U+e8f4
            constexpr static inline std::string_view VisibilityOff{ "\xee\xa3\xb5" };                             // U+e8f5
            constexpr static inline std::string_view VoiceChat{ "\xee\x98\xae" };                                 // U+e62e
            constexpr static inline std::string_view VoiceOverOff{ "\xee\xa5\x8a" };                              // U+e94a
            constexpr static inline std::string_view Voicemail{ "\xee\x83\x99" };                                 // U+e0d9
            constexpr static inline std::string_view Volcano{ "\xee\xaf\x9a" };                                   // U+ebda
            constexpr static inline std::string_view VolumeDown{ "\xee\x81\x8d" };                                // U+e04d
            constexpr static inline std::string_view VolumeDownAlt{ "\xee\x9e\x9c" };                             // U+e79c
            constexpr static inline std::string_view VolumeMute{ "\xee\x81\x8e" };                                // U+e04e
            constexpr static inline std::string_view VolumeOff{ "\xee\x81\x8f" };                                 // U+e04f
            constexpr static inline std::string_view VolumeUp{ "\xee\x81\x90" };                                  // U+e050
            constexpr static inline std::string_view VolunteerActivism{ "\xee\xa9\xb0" };                         // U+ea70
            constexpr static inline std::string_view VpnKey{ "\xee\x83\x9a" };                                    // U+e0da
            constexpr static inline std::string_view VpnKeyOff{ "\xee\xad\xba" };                                 // U+eb7a
            constexpr static inline std::string_view VpnLock{ "\xee\x98\xaf" };                                   // U+e62f
            constexpr static inline std::string_view Vrpano{ "\xef\x82\x82" };                                    // U+f082
            constexpr static inline std::string_view Wallet{ "\xef\xa3\xbf" };                                    // U+f8ff
            constexpr static inline std::string_view WalletGiftcard{ "\xee\xa3\xb6" };                            // U+e8f6
            constexpr static inline std::string_view WalletMembership{ "\xee\xa3\xb7" };                          // U+e8f7
            constexpr static inline std::string_view WalletTravel{ "\xee\xa3\xb8" };                              // U+e8f8
            constexpr static inline std::string_view Wallpaper{ "\xee\x86\xbc" };                                 // U+e1bc
            constexpr static inline std::string_view Warehouse{ "\xee\xae\xb8" };                                 // U+ebb8
            constexpr static inline std::string_view Warning{ "\xee\x80\x82" };                                   // U+e002
            constexpr static inline std::string_view WarningAmber{ "\xef\x82\x83" };                              // U+f083
            constexpr static inline std::string_view Wash{ "\xef\x86\xb1" };                                      // U+f1b1
            constexpr static inline std::string_view Watch{ "\xee\x8c\xb4" };                                     // U+e334
            constexpr static inline std::string_view WatchLater{ "\xee\xa4\xa4" };                                // U+e924
            constexpr static inline std::string_view WatchOff{ "\xee\xab\xa3" };                                  // U+eae3
            constexpr static inline std::string_view Water{ "\xef\x82\x84" };                                     // U+f084
            constexpr static inline std::string_view WaterDamage{ "\xef\x88\x83" };                               // U+f203
            constexpr static inline std::string_view WaterDrop{ "\xee\x9e\x98" };                                 // U+e798
            constexpr static inline std::string_view WaterfallChart{ "\xee\xa8\x80" };                            // U+ea00
            constexpr static inline std::string_view Waves{ "\xee\x85\xb6" };                                     // U+e176
            constexpr static inline std::string_view WavingHand{ "\xee\x9d\xa6" };                                // U+e766
            constexpr static inline std::string_view WbAuto{ "\xee\x90\xac" };                                    // U+e42c
            constexpr static inline std::string_view WbCloudy{ "\xee\x90\xad" };                                  // U+e42d
            constexpr static inline std::string_view WbIncandescent{ "\xee\x90\xae" };                            // U+e42e
            constexpr static inline std::string_view WbIridescent{ "\xee\x90\xb6" };                              // U+e436
            constexpr static inline std::string_view WbShade{ "\xee\xa8\x81" };                                   // U+ea01
            constexpr static inline std::string_view WbSunny{ "\xee\x90\xb0" };                                   // U+e430
            constexpr static inline std::string_view WbTwighlight{ "\xee\xa8\x82" };                              // U+ea02
            constexpr static inline std::string_view WbTwilight{ "\xee\x87\x86" };                                // U+e1c6
            constexpr static inline std::string_view Wc{ "\xee\x98\xbd" };                                        // U+e63d
            constexpr static inline std::string_view Web{ "\xee\x81\x91" };                                       // U+e051
            constexpr static inline std::string_view WebAsset{ "\xee\x81\xa9" };                                  // U+e069
            constexpr static inline std::string_view WebAssetOff{ "\xee\x93\xb7" };                               // U+e4f7
            constexpr static inline std::string_view WebStories{ "\xee\x96\x95" };                                // U+e595
            constexpr static inline std::string_view Webhook{ "\xee\xae\x92" };                                   // U+eb92
            constexpr static inline std::string_view Wechat{ "\xee\xaa\x81" };                                    // U+ea81
            constexpr static inline std::string_view Weekend{ "\xee\x85\xab" };                                   // U+e16b
            constexpr static inline std::string_view West{ "\xef\x87\xa6" };                                      // U+f1e6
            constexpr static inline std::string_view Whatshot{ "\xee\xa0\x8e" };                                  // U+e80e
            constexpr static inline std::string_view WheelchairPickup{ "\xef\x86\xab" };                          // U+f1ab
            constexpr static inline std::string_view WhereToVote{ "\xee\x85\xb7" };                               // U+e177
            constexpr static inline std::string_view Widgets{ "\xee\x86\xbd" };                                   // U+e1bd
            constexpr static inline std::string_view WidthFull{ "\xef\xa3\xb5" };                                 // U+f8f5
            constexpr static inline std::string_view WidthNormal{ "\xef\xa3\xb6" };                               // U+f8f6
            constexpr static inline std::string_view WidthWide{ "\xef\xa3\xb7" };                                 // U+f8f7
            constexpr static inline std::string_view Wifi{ "\xee\x98\xbe" };                                      // U+e63e
            constexpr static inline std::string_view Wifi_1Bar{ "\xee\x93\x8a" };                                 // U+e4ca
            constexpr static inline std::string_view Wifi_2Bar{ "\xee\x93\x99" };                                 // U+e4d9
            constexpr static inline std::string_view WifiCalling{ "\xee\xbd\xb7" };                               // U+ef77
            constexpr static inline std::string_view WifiCalling_3{ "\xef\x82\x85" };                             // U+f085
            constexpr static inline std::string_view WifiChannel{ "\xee\xad\xaa" };                               // U+eb6a
            constexpr static inline std::string_view WifiFind{ "\xee\xac\xb1" };                                  // U+eb31
            constexpr static inline std::string_view WifiLock{ "\xee\x87\xa1" };                                  // U+e1e1
            constexpr static inline std::string_view WifiOff{ "\xee\x99\x88" };                                   // U+e648
            constexpr static inline std::string_view WifiPassword{ "\xee\xad\xab" };                              // U+eb6b
            constexpr static inline std::string_view WifiProtectedSetup{ "\xef\x83\xbc" };                        // U+f0fc
            constexpr static inline std::string_view WifiTethering{ "\xee\x87\xa2" };                             // U+e1e2
            constexpr static inline std::string_view WifiTetheringError{ "\xee\xab\x99" };                        // U+ead9
            constexpr static inline std::string_view WifiTetheringErrorRounded{ "\xef\x82\x86" };                 // U+f086
            constexpr static inline std::string_view WifiTetheringOff{ "\xef\x82\x87" };                          // U+f087
            constexpr static inline std::string_view WindPower{ "\xee\xb0\x8c" };                                 // U+ec0c
            constexpr static inline std::string_view Window{ "\xef\x82\x88" };                                    // U+f088
            constexpr static inline std::string_view WineBar{ "\xef\x87\xa8" };                                   // U+f1e8
            constexpr static inline std::string_view Woman{ "\xee\x84\xbe" };                                     // U+e13e
            constexpr static inline std::string_view Woman_2{ "\xef\xa3\xa7" };                                   // U+f8e7
            constexpr static inline std::string_view WooCommerce{ "\xee\xa9\xad" };                               // U+ea6d
            constexpr static inline std::string_view Wordpress{ "\xee\xaa\x9f" };                                 // U+ea9f
            constexpr static inline std::string_view Work{ "\xee\xa3\xb9" };                                      // U+e8f9
            constexpr static inline std::string_view WorkHistory{ "\xee\xb0\x89" };                               // U+ec09
            constexpr static inline std::string_view WorkOff{ "\xee\xa5\x82" };                                   // U+e942
            constexpr static inline std::string_view WorkOutline{ "\xee\xa5\x83" };                               // U+e943
            constexpr static inline std::string_view WorkspacePremium{ "\xee\x9e\xaf" };                          // U+e7af
            constexpr static inline std::string_view Workspaces{ "\xee\x86\xa0" };                                // U+e1a0
            constexpr static inline std::string_view WorkspacesFilled{ "\xee\xa8\x8d" };                          // U+ea0d
            constexpr static inline std::string_view WorkspacesOutline{ "\xee\xa8\x8f" };                         // U+ea0f
            constexpr static inline std::string_view WrapText{ "\xee\x89\x9b" };                                  // U+e25b
            constexpr static inline std::string_view WrongLocation{ "\xee\xbd\xb8" };                             // U+ef78
            constexpr static inline std::string_view Wysiwyg{ "\xef\x87\x83" };                                   // U+f1c3
            constexpr static inline std::string_view Yard{ "\xef\x82\x89" };                                      // U+f089
            constexpr static inline std::string_view YoutubeSearchedFor{ "\xee\xa3\xba" };                        // U+e8fa
            constexpr static inline std::string_view ZoomIn{ "\xee\xa3\xbf" };                                    // U+e8ff
            constexpr static inline std::string_view ZoomInMap{ "\xee\xac\xad" };                                 // U+eb2d
            constexpr static inline std::string_view ZoomOut{ "\xee\xa4\x80" };                                   // U+e900
            constexpr static inline std::string_view ZoomOutMap{ "\xee\x95\xab" };                                // U+e56b
        };
    }
