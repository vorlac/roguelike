#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct ForkAwesome
    {
        constexpr static inline std::string_view FILE_NAME{ "forkawesome-webfont.ttf" };

        constexpr static inline u16 IconMin{ 0xf000 };
        constexpr static inline u16 IconMax_16{ 0xf372 };
        constexpr static inline u16 IconMax{ 0xf372 };

        constexpr static inline std::string_view Glass{ "\xef\x80\x80" };                             // U+f000
        constexpr static inline std::string_view Music{ "\xef\x80\x81" };                             // U+f001
        constexpr static inline std::string_view Search{ "\xef\x80\x82" };                            // U+f002
        constexpr static inline std::string_view EnvelopeO{ "\xef\x80\x83" };                         // U+f003
        constexpr static inline std::string_view Heart{ "\xef\x80\x84" };                             // U+f004
        constexpr static inline std::string_view Star{ "\xef\x80\x85" };                              // U+f005
        constexpr static inline std::string_view StarO{ "\xef\x80\x86" };                             // U+f006
        constexpr static inline std::string_view User{ "\xef\x80\x87" };                              // U+f007
        constexpr static inline std::string_view Film{ "\xef\x80\x88" };                              // U+f008
        constexpr static inline std::string_view ThLarge{ "\xef\x80\x89" };                           // U+f009
        constexpr static inline std::string_view Th{ "\xef\x80\x8a" };                                // U+f00a
        constexpr static inline std::string_view ThList{ "\xef\x80\x8b" };                            // U+f00b
        constexpr static inline std::string_view Check{ "\xef\x80\x8c" };                             // U+f00c
        constexpr static inline std::string_view Times{ "\xef\x80\x8d" };                             // U+f00d
        constexpr static inline std::string_view SearchPlus{ "\xef\x80\x8e" };                        // U+f00e
        constexpr static inline std::string_view SearchMinus{ "\xef\x80\x90" };                       // U+f010
        constexpr static inline std::string_view PowerOff{ "\xef\x80\x91" };                          // U+f011
        constexpr static inline std::string_view Signal{ "\xef\x80\x92" };                            // U+f012
        constexpr static inline std::string_view Cog{ "\xef\x80\x93" };                               // U+f013
        constexpr static inline std::string_view TrashO{ "\xef\x80\x94" };                            // U+f014
        constexpr static inline std::string_view Home{ "\xef\x80\x95" };                              // U+f015
        constexpr static inline std::string_view FileO{ "\xef\x80\x96" };                             // U+f016
        constexpr static inline std::string_view ClockO{ "\xef\x80\x97" };                            // U+f017
        constexpr static inline std::string_view Road{ "\xef\x80\x98" };                              // U+f018
        constexpr static inline std::string_view Download{ "\xef\x80\x99" };                          // U+f019
        constexpr static inline std::string_view ArrowCircleODown{ "\xef\x80\x9a" };                  // U+f01a
        constexpr static inline std::string_view ArrowCircleOUp{ "\xef\x80\x9b" };                    // U+f01b
        constexpr static inline std::string_view Inbox{ "\xef\x80\x9c" };                             // U+f01c
        constexpr static inline std::string_view PlayCircleO{ "\xef\x80\x9d" };                       // U+f01d
        constexpr static inline std::string_view Repeat{ "\xef\x80\x9e" };                            // U+f01e
        constexpr static inline std::string_view Refresh{ "\xef\x80\xa1" };                           // U+f021
        constexpr static inline std::string_view ListAlt{ "\xef\x80\xa2" };                           // U+f022
        constexpr static inline std::string_view Lock{ "\xef\x80\xa3" };                              // U+f023
        constexpr static inline std::string_view Flag{ "\xef\x80\xa4" };                              // U+f024
        constexpr static inline std::string_view Headphones{ "\xef\x80\xa5" };                        // U+f025
        constexpr static inline std::string_view VolumeOff{ "\xef\x80\xa6" };                         // U+f026
        constexpr static inline std::string_view VolumeDown{ "\xef\x80\xa7" };                        // U+f027
        constexpr static inline std::string_view VolumeUp{ "\xef\x80\xa8" };                          // U+f028
        constexpr static inline std::string_view Qrcode{ "\xef\x80\xa9" };                            // U+f029
        constexpr static inline std::string_view Barcode{ "\xef\x80\xaa" };                           // U+f02a
        constexpr static inline std::string_view Tag{ "\xef\x80\xab" };                               // U+f02b
        constexpr static inline std::string_view Tags{ "\xef\x80\xac" };                              // U+f02c
        constexpr static inline std::string_view Book{ "\xef\x80\xad" };                              // U+f02d
        constexpr static inline std::string_view Bookmark{ "\xef\x80\xae" };                          // U+f02e
        constexpr static inline std::string_view Print{ "\xef\x80\xaf" };                             // U+f02f
        constexpr static inline std::string_view Camera{ "\xef\x80\xb0" };                            // U+f030
        constexpr static inline std::string_view Font{ "\xef\x80\xb1" };                              // U+f031
        constexpr static inline std::string_view Bold{ "\xef\x80\xb2" };                              // U+f032
        constexpr static inline std::string_view Italic{ "\xef\x80\xb3" };                            // U+f033
        constexpr static inline std::string_view TextHeight{ "\xef\x80\xb4" };                        // U+f034
        constexpr static inline std::string_view TextWidth{ "\xef\x80\xb5" };                         // U+f035
        constexpr static inline std::string_view AlignLeft{ "\xef\x80\xb6" };                         // U+f036
        constexpr static inline std::string_view AlignCenter{ "\xef\x80\xb7" };                       // U+f037
        constexpr static inline std::string_view AlignRight{ "\xef\x80\xb8" };                        // U+f038
        constexpr static inline std::string_view AlignJustify{ "\xef\x80\xb9" };                      // U+f039
        constexpr static inline std::string_view List{ "\xef\x80\xba" };                              // U+f03a
        constexpr static inline std::string_view Outdent{ "\xef\x80\xbb" };                           // U+f03b
        constexpr static inline std::string_view Indent{ "\xef\x80\xbc" };                            // U+f03c
        constexpr static inline std::string_view VideoCamera{ "\xef\x80\xbd" };                       // U+f03d
        constexpr static inline std::string_view PictureO{ "\xef\x80\xbe" };                          // U+f03e
        constexpr static inline std::string_view Pencil{ "\xef\x81\x80" };                            // U+f040
        constexpr static inline std::string_view MapMarker{ "\xef\x81\x81" };                         // U+f041
        constexpr static inline std::string_view Adjust{ "\xef\x81\x82" };                            // U+f042
        constexpr static inline std::string_view Tint{ "\xef\x81\x83" };                              // U+f043
        constexpr static inline std::string_view PencilSquareO{ "\xef\x81\x84" };                     // U+f044
        constexpr static inline std::string_view ShareSquareO{ "\xef\x81\x85" };                      // U+f045
        constexpr static inline std::string_view CheckSquareO{ "\xef\x81\x86" };                      // U+f046
        constexpr static inline std::string_view Arrows{ "\xef\x81\x87" };                            // U+f047
        constexpr static inline std::string_view StepBackward{ "\xef\x81\x88" };                      // U+f048
        constexpr static inline std::string_view FastBackward{ "\xef\x81\x89" };                      // U+f049
        constexpr static inline std::string_view Backward{ "\xef\x81\x8a" };                          // U+f04a
        constexpr static inline std::string_view Play{ "\xef\x81\x8b" };                              // U+f04b
        constexpr static inline std::string_view Pause{ "\xef\x81\x8c" };                             // U+f04c
        constexpr static inline std::string_view Stop{ "\xef\x81\x8d" };                              // U+f04d
        constexpr static inline std::string_view Forward{ "\xef\x81\x8e" };                           // U+f04e
        constexpr static inline std::string_view FastForward{ "\xef\x81\x90" };                       // U+f050
        constexpr static inline std::string_view StepForward{ "\xef\x81\x91" };                       // U+f051
        constexpr static inline std::string_view Eject{ "\xef\x81\x92" };                             // U+f052
        constexpr static inline std::string_view ChevronLeft{ "\xef\x81\x93" };                       // U+f053
        constexpr static inline std::string_view ChevronRight{ "\xef\x81\x94" };                      // U+f054
        constexpr static inline std::string_view PlusCircle{ "\xef\x81\x95" };                        // U+f055
        constexpr static inline std::string_view MinusCircle{ "\xef\x81\x96" };                       // U+f056
        constexpr static inline std::string_view TimesCircle{ "\xef\x81\x97" };                       // U+f057
        constexpr static inline std::string_view CheckCircle{ "\xef\x81\x98" };                       // U+f058
        constexpr static inline std::string_view QuestionCircle{ "\xef\x81\x99" };                    // U+f059
        constexpr static inline std::string_view InfoCircle{ "\xef\x81\x9a" };                        // U+f05a
        constexpr static inline std::string_view Crosshairs{ "\xef\x81\x9b" };                        // U+f05b
        constexpr static inline std::string_view TimesCircleO{ "\xef\x81\x9c" };                      // U+f05c
        constexpr static inline std::string_view CheckCircleO{ "\xef\x81\x9d" };                      // U+f05d
        constexpr static inline std::string_view Ban{ "\xef\x81\x9e" };                               // U+f05e
        constexpr static inline std::string_view ArrowLeft{ "\xef\x81\xa0" };                         // U+f060
        constexpr static inline std::string_view ArrowRight{ "\xef\x81\xa1" };                        // U+f061
        constexpr static inline std::string_view ArrowUp{ "\xef\x81\xa2" };                           // U+f062
        constexpr static inline std::string_view ArrowDown{ "\xef\x81\xa3" };                         // U+f063
        constexpr static inline std::string_view Share{ "\xef\x81\xa4" };                             // U+f064
        constexpr static inline std::string_view Expand{ "\xef\x81\xa5" };                            // U+f065
        constexpr static inline std::string_view Compress{ "\xef\x81\xa6" };                          // U+f066
        constexpr static inline std::string_view Plus{ "\xef\x81\xa7" };                              // U+f067
        constexpr static inline std::string_view Minus{ "\xef\x81\xa8" };                             // U+f068
        constexpr static inline std::string_view Asterisk{ "\xef\x81\xa9" };                          // U+f069
        constexpr static inline std::string_view ExclamationCircle{ "\xef\x81\xaa" };                 // U+f06a
        constexpr static inline std::string_view Gift{ "\xef\x81\xab" };                              // U+f06b
        constexpr static inline std::string_view Leaf{ "\xef\x81\xac" };                              // U+f06c
        constexpr static inline std::string_view Fire{ "\xef\x81\xad" };                              // U+f06d
        constexpr static inline std::string_view Eye{ "\xef\x81\xae" };                               // U+f06e
        constexpr static inline std::string_view EyeSlash{ "\xef\x81\xb0" };                          // U+f070
        constexpr static inline std::string_view ExclamationTriangle{ "\xef\x81\xb1" };               // U+f071
        constexpr static inline std::string_view Plane{ "\xef\x81\xb2" };                             // U+f072
        constexpr static inline std::string_view Calendar{ "\xef\x81\xb3" };                          // U+f073
        constexpr static inline std::string_view Random{ "\xef\x81\xb4" };                            // U+f074
        constexpr static inline std::string_view Comment{ "\xef\x81\xb5" };                           // U+f075
        constexpr static inline std::string_view Magnet{ "\xef\x81\xb6" };                            // U+f076
        constexpr static inline std::string_view ChevronUp{ "\xef\x81\xb7" };                         // U+f077
        constexpr static inline std::string_view ChevronDown{ "\xef\x81\xb8" };                       // U+f078
        constexpr static inline std::string_view Retweet{ "\xef\x81\xb9" };                           // U+f079
        constexpr static inline std::string_view ShoppingCart{ "\xef\x81\xba" };                      // U+f07a
        constexpr static inline std::string_view Folder{ "\xef\x81\xbb" };                            // U+f07b
        constexpr static inline std::string_view FolderOpen{ "\xef\x81\xbc" };                        // U+f07c
        constexpr static inline std::string_view ArrowsV{ "\xef\x81\xbd" };                           // U+f07d
        constexpr static inline std::string_view ArrowsH{ "\xef\x81\xbe" };                           // U+f07e
        constexpr static inline std::string_view BarChart{ "\xef\x82\x80" };                          // U+f080
        constexpr static inline std::string_view TwitterSquare{ "\xef\x82\x81" };                     // U+f081
        constexpr static inline std::string_view FacebookSquare{ "\xef\x82\x82" };                    // U+f082
        constexpr static inline std::string_view CameraRetro{ "\xef\x82\x83" };                       // U+f083
        constexpr static inline std::string_view Key{ "\xef\x82\x84" };                               // U+f084
        constexpr static inline std::string_view Cogs{ "\xef\x82\x85" };                              // U+f085
        constexpr static inline std::string_view Comments{ "\xef\x82\x86" };                          // U+f086
        constexpr static inline std::string_view ThumbsOUp{ "\xef\x82\x87" };                         // U+f087
        constexpr static inline std::string_view ThumbsODown{ "\xef\x82\x88" };                       // U+f088
        constexpr static inline std::string_view StarHalf{ "\xef\x82\x89" };                          // U+f089
        constexpr static inline std::string_view HeartO{ "\xef\x82\x8a" };                            // U+f08a
        constexpr static inline std::string_view SignOut{ "\xef\x82\x8b" };                           // U+f08b
        constexpr static inline std::string_view LinkedinSquare{ "\xef\x82\x8c" };                    // U+f08c
        constexpr static inline std::string_view ThumbTack{ "\xef\x82\x8d" };                         // U+f08d
        constexpr static inline std::string_view ExternalLink{ "\xef\x82\x8e" };                      // U+f08e
        constexpr static inline std::string_view SignIn{ "\xef\x82\x90" };                            // U+f090
        constexpr static inline std::string_view Trophy{ "\xef\x82\x91" };                            // U+f091
        constexpr static inline std::string_view GithubSquare{ "\xef\x82\x92" };                      // U+f092
        constexpr static inline std::string_view Upload{ "\xef\x82\x93" };                            // U+f093
        constexpr static inline std::string_view LemonO{ "\xef\x82\x94" };                            // U+f094
        constexpr static inline std::string_view Phone{ "\xef\x82\x95" };                             // U+f095
        constexpr static inline std::string_view SquareO{ "\xef\x82\x96" };                           // U+f096
        constexpr static inline std::string_view BookmarkO{ "\xef\x82\x97" };                         // U+f097
        constexpr static inline std::string_view PhoneSquare{ "\xef\x82\x98" };                       // U+f098
        constexpr static inline std::string_view Twitter{ "\xef\x82\x99" };                           // U+f099
        constexpr static inline std::string_view Facebook{ "\xef\x82\x9a" };                          // U+f09a
        constexpr static inline std::string_view Github{ "\xef\x82\x9b" };                            // U+f09b
        constexpr static inline std::string_view Unlock{ "\xef\x82\x9c" };                            // U+f09c
        constexpr static inline std::string_view CreditCard{ "\xef\x82\x9d" };                        // U+f09d
        constexpr static inline std::string_view Rss{ "\xef\x82\x9e" };                               // U+f09e
        constexpr static inline std::string_view HddO{ "\xef\x82\xa0" };                              // U+f0a0
        constexpr static inline std::string_view Bullhorn{ "\xef\x82\xa1" };                          // U+f0a1
        constexpr static inline std::string_view BellO{ "\xef\x83\xb3" };                             // U+f0f3
        constexpr static inline std::string_view Certificate{ "\xef\x82\xa3" };                       // U+f0a3
        constexpr static inline std::string_view HandORight{ "\xef\x82\xa4" };                        // U+f0a4
        constexpr static inline std::string_view HandOLeft{ "\xef\x82\xa5" };                         // U+f0a5
        constexpr static inline std::string_view HandOUp{ "\xef\x82\xa6" };                           // U+f0a6
        constexpr static inline std::string_view HandODown{ "\xef\x82\xa7" };                         // U+f0a7
        constexpr static inline std::string_view ArrowCircleLeft{ "\xef\x82\xa8" };                   // U+f0a8
        constexpr static inline std::string_view ArrowCircleRight{ "\xef\x82\xa9" };                  // U+f0a9
        constexpr static inline std::string_view ArrowCircleUp{ "\xef\x82\xaa" };                     // U+f0aa
        constexpr static inline std::string_view ArrowCircleDown{ "\xef\x82\xab" };                   // U+f0ab
        constexpr static inline std::string_view Globe{ "\xef\x82\xac" };                             // U+f0ac
        constexpr static inline std::string_view GlobeE{ "\xef\x8c\x84" };                            // U+f304
        constexpr static inline std::string_view GlobeW{ "\xef\x8c\x85" };                            // U+f305
        constexpr static inline std::string_view Wrench{ "\xef\x82\xad" };                            // U+f0ad
        constexpr static inline std::string_view Tasks{ "\xef\x82\xae" };                             // U+f0ae
        constexpr static inline std::string_view Filter{ "\xef\x82\xb0" };                            // U+f0b0
        constexpr static inline std::string_view Briefcase{ "\xef\x82\xb1" };                         // U+f0b1
        constexpr static inline std::string_view ArrowsAlt{ "\xef\x82\xb2" };                         // U+f0b2
        constexpr static inline std::string_view Users{ "\xef\x83\x80" };                             // U+f0c0
        constexpr static inline std::string_view Link{ "\xef\x83\x81" };                              // U+f0c1
        constexpr static inline std::string_view Cloud{ "\xef\x83\x82" };                             // U+f0c2
        constexpr static inline std::string_view Flask{ "\xef\x83\x83" };                             // U+f0c3
        constexpr static inline std::string_view Scissors{ "\xef\x83\x84" };                          // U+f0c4
        constexpr static inline std::string_view FilesO{ "\xef\x83\x85" };                            // U+f0c5
        constexpr static inline std::string_view Paperclip{ "\xef\x83\x86" };                         // U+f0c6
        constexpr static inline std::string_view FloppyO{ "\xef\x83\x87" };                           // U+f0c7
        constexpr static inline std::string_view Square{ "\xef\x83\x88" };                            // U+f0c8
        constexpr static inline std::string_view Bars{ "\xef\x83\x89" };                              // U+f0c9
        constexpr static inline std::string_view ListUl{ "\xef\x83\x8a" };                            // U+f0ca
        constexpr static inline std::string_view ListOl{ "\xef\x83\x8b" };                            // U+f0cb
        constexpr static inline std::string_view Strikethrough{ "\xef\x83\x8c" };                     // U+f0cc
        constexpr static inline std::string_view Underline{ "\xef\x83\x8d" };                         // U+f0cd
        constexpr static inline std::string_view Table{ "\xef\x83\x8e" };                             // U+f0ce
        constexpr static inline std::string_view Magic{ "\xef\x83\x90" };                             // U+f0d0
        constexpr static inline std::string_view Truck{ "\xef\x83\x91" };                             // U+f0d1
        constexpr static inline std::string_view Pinterest{ "\xef\x83\x92" };                         // U+f0d2
        constexpr static inline std::string_view PinterestSquare{ "\xef\x83\x93" };                   // U+f0d3
        constexpr static inline std::string_view GooglePlusSquare{ "\xef\x83\x94" };                  // U+f0d4
        constexpr static inline std::string_view GooglePlus{ "\xef\x83\x95" };                        // U+f0d5
        constexpr static inline std::string_view Money{ "\xef\x83\x96" };                             // U+f0d6
        constexpr static inline std::string_view CaretDown{ "\xef\x83\x97" };                         // U+f0d7
        constexpr static inline std::string_view CaretUp{ "\xef\x83\x98" };                           // U+f0d8
        constexpr static inline std::string_view CaretLeft{ "\xef\x83\x99" };                         // U+f0d9
        constexpr static inline std::string_view CaretRight{ "\xef\x83\x9a" };                        // U+f0da
        constexpr static inline std::string_view Columns{ "\xef\x83\x9b" };                           // U+f0db
        constexpr static inline std::string_view Sort{ "\xef\x83\x9c" };                              // U+f0dc
        constexpr static inline std::string_view SortDesc{ "\xef\x83\x9d" };                          // U+f0dd
        constexpr static inline std::string_view SortAsc{ "\xef\x83\x9e" };                           // U+f0de
        constexpr static inline std::string_view Envelope{ "\xef\x83\xa0" };                          // U+f0e0
        constexpr static inline std::string_view Linkedin{ "\xef\x83\xa1" };                          // U+f0e1
        constexpr static inline std::string_view Undo{ "\xef\x83\xa2" };                              // U+f0e2
        constexpr static inline std::string_view Gavel{ "\xef\x83\xa3" };                             // U+f0e3
        constexpr static inline std::string_view Tachometer{ "\xef\x83\xa4" };                        // U+f0e4
        constexpr static inline std::string_view CommentO{ "\xef\x83\xa5" };                          // U+f0e5
        constexpr static inline std::string_view CommentsO{ "\xef\x83\xa6" };                         // U+f0e6
        constexpr static inline std::string_view Bolt{ "\xef\x83\xa7" };                              // U+f0e7
        constexpr static inline std::string_view Sitemap{ "\xef\x83\xa8" };                           // U+f0e8
        constexpr static inline std::string_view Umbrella{ "\xef\x83\xa9" };                          // U+f0e9
        constexpr static inline std::string_view Clipboard{ "\xef\x83\xaa" };                         // U+f0ea
        constexpr static inline std::string_view LightbulbO{ "\xef\x83\xab" };                        // U+f0eb
        constexpr static inline std::string_view Exchange{ "\xef\x83\xac" };                          // U+f0ec
        constexpr static inline std::string_view CloudDownload{ "\xef\x83\xad" };                     // U+f0ed
        constexpr static inline std::string_view CloudUpload{ "\xef\x83\xae" };                       // U+f0ee
        constexpr static inline std::string_view UserMd{ "\xef\x83\xb0" };                            // U+f0f0
        constexpr static inline std::string_view Stethoscope{ "\xef\x83\xb1" };                       // U+f0f1
        constexpr static inline std::string_view Suitcase{ "\xef\x83\xb2" };                          // U+f0f2
        constexpr static inline std::string_view Bell{ "\xef\x82\xa2" };                              // U+f0a2
        constexpr static inline std::string_view Coffee{ "\xef\x83\xb4" };                            // U+f0f4
        constexpr static inline std::string_view Cutlery{ "\xef\x83\xb5" };                           // U+f0f5
        constexpr static inline std::string_view FileTextO{ "\xef\x83\xb6" };                         // U+f0f6
        constexpr static inline std::string_view BuildingO{ "\xef\x83\xb7" };                         // U+f0f7
        constexpr static inline std::string_view HospitalO{ "\xef\x83\xb8" };                         // U+f0f8
        constexpr static inline std::string_view Ambulance{ "\xef\x83\xb9" };                         // U+f0f9
        constexpr static inline std::string_view Medkit{ "\xef\x83\xba" };                            // U+f0fa
        constexpr static inline std::string_view FighterJet{ "\xef\x83\xbb" };                        // U+f0fb
        constexpr static inline std::string_view Beer{ "\xef\x83\xbc" };                              // U+f0fc
        constexpr static inline std::string_view HSquare{ "\xef\x83\xbd" };                           // U+f0fd
        constexpr static inline std::string_view PlusSquare{ "\xef\x83\xbe" };                        // U+f0fe
        constexpr static inline std::string_view AngleDoubleLeft{ "\xef\x84\x80" };                   // U+f100
        constexpr static inline std::string_view AngleDoubleRight{ "\xef\x84\x81" };                  // U+f101
        constexpr static inline std::string_view AngleDoubleUp{ "\xef\x84\x82" };                     // U+f102
        constexpr static inline std::string_view AngleDoubleDown{ "\xef\x84\x83" };                   // U+f103
        constexpr static inline std::string_view AngleLeft{ "\xef\x84\x84" };                         // U+f104
        constexpr static inline std::string_view AngleRight{ "\xef\x84\x85" };                        // U+f105
        constexpr static inline std::string_view AngleUp{ "\xef\x84\x86" };                           // U+f106
        constexpr static inline std::string_view AngleDown{ "\xef\x84\x87" };                         // U+f107
        constexpr static inline std::string_view Desktop{ "\xef\x84\x88" };                           // U+f108
        constexpr static inline std::string_view Laptop{ "\xef\x84\x89" };                            // U+f109
        constexpr static inline std::string_view Tablet{ "\xef\x84\x8a" };                            // U+f10a
        constexpr static inline std::string_view Mobile{ "\xef\x84\x8b" };                            // U+f10b
        constexpr static inline std::string_view CircleO{ "\xef\x84\x8c" };                           // U+f10c
        constexpr static inline std::string_view QuoteLeft{ "\xef\x84\x8d" };                         // U+f10d
        constexpr static inline std::string_view QuoteRight{ "\xef\x84\x8e" };                        // U+f10e
        constexpr static inline std::string_view Spinner{ "\xef\x84\x90" };                           // U+f110
        constexpr static inline std::string_view Circle{ "\xef\x84\x91" };                            // U+f111
        constexpr static inline std::string_view Reply{ "\xef\x84\x92" };                             // U+f112
        constexpr static inline std::string_view GithubAlt{ "\xef\x84\x93" };                         // U+f113
        constexpr static inline std::string_view FolderO{ "\xef\x84\x94" };                           // U+f114
        constexpr static inline std::string_view FolderOpenO{ "\xef\x84\x95" };                       // U+f115
        constexpr static inline std::string_view SmileO{ "\xef\x84\x98" };                            // U+f118
        constexpr static inline std::string_view FrownO{ "\xef\x84\x99" };                            // U+f119
        constexpr static inline std::string_view MehO{ "\xef\x84\x9a" };                              // U+f11a
        constexpr static inline std::string_view Gamepad{ "\xef\x84\x9b" };                           // U+f11b
        constexpr static inline std::string_view KeyboardO{ "\xef\x84\x9c" };                         // U+f11c
        constexpr static inline std::string_view FlagO{ "\xef\x84\x9d" };                             // U+f11d
        constexpr static inline std::string_view FlagCheckered{ "\xef\x84\x9e" };                     // U+f11e
        constexpr static inline std::string_view Terminal{ "\xef\x84\xa0" };                          // U+f120
        constexpr static inline std::string_view Code{ "\xef\x84\xa1" };                              // U+f121
        constexpr static inline std::string_view ReplyAll{ "\xef\x84\xa2" };                          // U+f122
        constexpr static inline std::string_view StarHalfO{ "\xef\x84\xa3" };                         // U+f123
        constexpr static inline std::string_view LocationArrow{ "\xef\x84\xa4" };                     // U+f124
        constexpr static inline std::string_view Crop{ "\xef\x84\xa5" };                              // U+f125
        constexpr static inline std::string_view CodeFork{ "\xef\x84\xa6" };                          // U+f126
        constexpr static inline std::string_view ChainBroken{ "\xef\x84\xa7" };                       // U+f127
        constexpr static inline std::string_view Question{ "\xef\x84\xa8" };                          // U+f128
        constexpr static inline std::string_view Info{ "\xef\x84\xa9" };                              // U+f129
        constexpr static inline std::string_view Exclamation{ "\xef\x84\xaa" };                       // U+f12a
        constexpr static inline std::string_view Superscript{ "\xef\x84\xab" };                       // U+f12b
        constexpr static inline std::string_view Subscript{ "\xef\x84\xac" };                         // U+f12c
        constexpr static inline std::string_view Eraser{ "\xef\x84\xad" };                            // U+f12d
        constexpr static inline std::string_view PuzzlePiece{ "\xef\x84\xae" };                       // U+f12e
        constexpr static inline std::string_view Microphone{ "\xef\x84\xb0" };                        // U+f130
        constexpr static inline std::string_view MicrophoneSlash{ "\xef\x84\xb1" };                   // U+f131
        constexpr static inline std::string_view Shield{ "\xef\x84\xb2" };                            // U+f132
        constexpr static inline std::string_view CalendarO{ "\xef\x84\xb3" };                         // U+f133
        constexpr static inline std::string_view FireExtinguisher{ "\xef\x84\xb4" };                  // U+f134
        constexpr static inline std::string_view Rocket{ "\xef\x84\xb5" };                            // U+f135
        constexpr static inline std::string_view Maxcdn{ "\xef\x84\xb6" };                            // U+f136
        constexpr static inline std::string_view ChevronCircleLeft{ "\xef\x84\xb7" };                 // U+f137
        constexpr static inline std::string_view ChevronCircleRight{ "\xef\x84\xb8" };                // U+f138
        constexpr static inline std::string_view ChevronCircleUp{ "\xef\x84\xb9" };                   // U+f139
        constexpr static inline std::string_view ChevronCircleDown{ "\xef\x84\xba" };                 // U+f13a
        constexpr static inline std::string_view Html5{ "\xef\x84\xbb" };                             // U+f13b
        constexpr static inline std::string_view Css3{ "\xef\x84\xbc" };                              // U+f13c
        constexpr static inline std::string_view Anchor{ "\xef\x84\xbd" };                            // U+f13d
        constexpr static inline std::string_view UnlockAlt{ "\xef\x84\xbe" };                         // U+f13e
        constexpr static inline std::string_view Bullseye{ "\xef\x85\x80" };                          // U+f140
        constexpr static inline std::string_view EllipsisH{ "\xef\x85\x81" };                         // U+f141
        constexpr static inline std::string_view EllipsisV{ "\xef\x85\x82" };                         // U+f142
        constexpr static inline std::string_view RssSquare{ "\xef\x85\x83" };                         // U+f143
        constexpr static inline std::string_view PlayCircle{ "\xef\x85\x84" };                        // U+f144
        constexpr static inline std::string_view Ticket{ "\xef\x85\x85" };                            // U+f145
        constexpr static inline std::string_view MinusSquare{ "\xef\x85\x86" };                       // U+f146
        constexpr static inline std::string_view MinusSquareO{ "\xef\x85\x87" };                      // U+f147
        constexpr static inline std::string_view LevelUp{ "\xef\x85\x88" };                           // U+f148
        constexpr static inline std::string_view LevelDown{ "\xef\x85\x89" };                         // U+f149
        constexpr static inline std::string_view CheckSquare{ "\xef\x85\x8a" };                       // U+f14a
        constexpr static inline std::string_view PencilSquare{ "\xef\x85\x8b" };                      // U+f14b
        constexpr static inline std::string_view ExternalLinkSquare{ "\xef\x85\x8c" };                // U+f14c
        constexpr static inline std::string_view ShareSquare{ "\xef\x85\x8d" };                       // U+f14d
        constexpr static inline std::string_view Compass{ "\xef\x85\x8e" };                           // U+f14e
        constexpr static inline std::string_view CaretSquareODown{ "\xef\x85\x90" };                  // U+f150
        constexpr static inline std::string_view CaretSquareOUp{ "\xef\x85\x91" };                    // U+f151
        constexpr static inline std::string_view CaretSquareORight{ "\xef\x85\x92" };                 // U+f152
        constexpr static inline std::string_view Eur{ "\xef\x85\x93" };                               // U+f153
        constexpr static inline std::string_view Gbp{ "\xef\x85\x94" };                               // U+f154
        constexpr static inline std::string_view Usd{ "\xef\x85\x95" };                               // U+f155
        constexpr static inline std::string_view Inr{ "\xef\x85\x96" };                               // U+f156
        constexpr static inline std::string_view Jpy{ "\xef\x85\x97" };                               // U+f157
        constexpr static inline std::string_view Rub{ "\xef\x85\x98" };                               // U+f158
        constexpr static inline std::string_view Krw{ "\xef\x85\x99" };                               // U+f159
        constexpr static inline std::string_view Btc{ "\xef\x85\x9a" };                               // U+f15a
        constexpr static inline std::string_view File{ "\xef\x85\x9b" };                              // U+f15b
        constexpr static inline std::string_view FileText{ "\xef\x85\x9c" };                          // U+f15c
        constexpr static inline std::string_view SortAlphaAsc{ "\xef\x85\x9d" };                      // U+f15d
        constexpr static inline std::string_view SortAlphaDesc{ "\xef\x85\x9e" };                     // U+f15e
        constexpr static inline std::string_view SortAmountAsc{ "\xef\x85\xa0" };                     // U+f160
        constexpr static inline std::string_view SortAmountDesc{ "\xef\x85\xa1" };                    // U+f161
        constexpr static inline std::string_view SortNumericAsc{ "\xef\x85\xa2" };                    // U+f162
        constexpr static inline std::string_view SortNumericDesc{ "\xef\x85\xa3" };                   // U+f163
        constexpr static inline std::string_view ThumbsUp{ "\xef\x85\xa4" };                          // U+f164
        constexpr static inline std::string_view ThumbsDown{ "\xef\x85\xa5" };                        // U+f165
        constexpr static inline std::string_view YoutubeSquare{ "\xef\x85\xa6" };                     // U+f166
        constexpr static inline std::string_view Youtube{ "\xef\x85\xa7" };                           // U+f167
        constexpr static inline std::string_view Xing{ "\xef\x85\xa8" };                              // U+f168
        constexpr static inline std::string_view XingSquare{ "\xef\x85\xa9" };                        // U+f169
        constexpr static inline std::string_view YoutubePlay{ "\xef\x85\xaa" };                       // U+f16a
        constexpr static inline std::string_view Dropbox{ "\xef\x85\xab" };                           // U+f16b
        constexpr static inline std::string_view StackOverflow{ "\xef\x85\xac" };                     // U+f16c
        constexpr static inline std::string_view Instagram{ "\xef\x85\xad" };                         // U+f16d
        constexpr static inline std::string_view Flickr{ "\xef\x85\xae" };                            // U+f16e
        constexpr static inline std::string_view Adn{ "\xef\x85\xb0" };                               // U+f170
        constexpr static inline std::string_view Bitbucket{ "\xef\x85\xb1" };                         // U+f171
        constexpr static inline std::string_view BitbucketSquare{ "\xef\x85\xb2" };                   // U+f172
        constexpr static inline std::string_view Tumblr{ "\xef\x85\xb3" };                            // U+f173
        constexpr static inline std::string_view TumblrSquare{ "\xef\x85\xb4" };                      // U+f174
        constexpr static inline std::string_view LongArrowDown{ "\xef\x85\xb5" };                     // U+f175
        constexpr static inline std::string_view LongArrowUp{ "\xef\x85\xb6" };                       // U+f176
        constexpr static inline std::string_view LongArrowLeft{ "\xef\x85\xb7" };                     // U+f177
        constexpr static inline std::string_view LongArrowRight{ "\xef\x85\xb8" };                    // U+f178
        constexpr static inline std::string_view Apple{ "\xef\x85\xb9" };                             // U+f179
        constexpr static inline std::string_view Windows{ "\xef\x85\xba" };                           // U+f17a
        constexpr static inline std::string_view Android{ "\xef\x85\xbb" };                           // U+f17b
        constexpr static inline std::string_view Linux{ "\xef\x85\xbc" };                             // U+f17c
        constexpr static inline std::string_view Dribbble{ "\xef\x85\xbd" };                          // U+f17d
        constexpr static inline std::string_view Skype{ "\xef\x85\xbe" };                             // U+f17e
        constexpr static inline std::string_view Foursquare{ "\xef\x86\x80" };                        // U+f180
        constexpr static inline std::string_view Trello{ "\xef\x86\x81" };                            // U+f181
        constexpr static inline std::string_view Female{ "\xef\x86\x82" };                            // U+f182
        constexpr static inline std::string_view Male{ "\xef\x86\x83" };                              // U+f183
        constexpr static inline std::string_view Gratipay{ "\xef\x86\x84" };                          // U+f184
        constexpr static inline std::string_view SunO{ "\xef\x86\x85" };                              // U+f185
        constexpr static inline std::string_view MoonO{ "\xef\x86\x86" };                             // U+f186
        constexpr static inline std::string_view Archive{ "\xef\x86\x87" };                           // U+f187
        constexpr static inline std::string_view Bug{ "\xef\x86\x88" };                               // U+f188
        constexpr static inline std::string_view Vk{ "\xef\x86\x89" };                                // U+f189
        constexpr static inline std::string_view Weibo{ "\xef\x86\x8a" };                             // U+f18a
        constexpr static inline std::string_view Renren{ "\xef\x86\x8b" };                            // U+f18b
        constexpr static inline std::string_view Pagelines{ "\xef\x86\x8c" };                         // U+f18c
        constexpr static inline std::string_view StackExchange{ "\xef\x86\x8d" };                     // U+f18d
        constexpr static inline std::string_view ArrowCircleORight{ "\xef\x86\x8e" };                 // U+f18e
        constexpr static inline std::string_view ArrowCircleOLeft{ "\xef\x86\x90" };                  // U+f190
        constexpr static inline std::string_view CaretSquareOLeft{ "\xef\x86\x91" };                  // U+f191
        constexpr static inline std::string_view DotCircleO{ "\xef\x86\x92" };                        // U+f192
        constexpr static inline std::string_view Wheelchair{ "\xef\x86\x93" };                        // U+f193
        constexpr static inline std::string_view VimeoSquare{ "\xef\x86\x94" };                       // U+f194
        constexpr static inline std::string_view Try{ "\xef\x86\x95" };                               // U+f195
        constexpr static inline std::string_view PlusSquareO{ "\xef\x86\x96" };                       // U+f196
        constexpr static inline std::string_view SpaceShuttle{ "\xef\x86\x97" };                      // U+f197
        constexpr static inline std::string_view Slack{ "\xef\x86\x98" };                             // U+f198
        constexpr static inline std::string_view EnvelopeSquare{ "\xef\x86\x99" };                    // U+f199
        constexpr static inline std::string_view Wordpress{ "\xef\x86\x9a" };                         // U+f19a
        constexpr static inline std::string_view Openid{ "\xef\x86\x9b" };                            // U+f19b
        constexpr static inline std::string_view University{ "\xef\x86\x9c" };                        // U+f19c
        constexpr static inline std::string_view GraduationCap{ "\xef\x86\x9d" };                     // U+f19d
        constexpr static inline std::string_view Yahoo{ "\xef\x86\x9e" };                             // U+f19e
        constexpr static inline std::string_view Google{ "\xef\x86\xa0" };                            // U+f1a0
        constexpr static inline std::string_view Reddit{ "\xef\x86\xa1" };                            // U+f1a1
        constexpr static inline std::string_view RedditSquare{ "\xef\x86\xa2" };                      // U+f1a2
        constexpr static inline std::string_view StumbleuponCircle{ "\xef\x86\xa3" };                 // U+f1a3
        constexpr static inline std::string_view Stumbleupon{ "\xef\x86\xa4" };                       // U+f1a4
        constexpr static inline std::string_view Delicious{ "\xef\x86\xa5" };                         // U+f1a5
        constexpr static inline std::string_view Digg{ "\xef\x86\xa6" };                              // U+f1a6
        constexpr static inline std::string_view Drupal{ "\xef\x86\xa9" };                            // U+f1a9
        constexpr static inline std::string_view Joomla{ "\xef\x86\xaa" };                            // U+f1aa
        constexpr static inline std::string_view Language{ "\xef\x86\xab" };                          // U+f1ab
        constexpr static inline std::string_view Fax{ "\xef\x86\xac" };                               // U+f1ac
        constexpr static inline std::string_view Building{ "\xef\x86\xad" };                          // U+f1ad
        constexpr static inline std::string_view Child{ "\xef\x86\xae" };                             // U+f1ae
        constexpr static inline std::string_view Paw{ "\xef\x86\xb0" };                               // U+f1b0
        constexpr static inline std::string_view Spoon{ "\xef\x86\xb1" };                             // U+f1b1
        constexpr static inline std::string_view Cube{ "\xef\x86\xb2" };                              // U+f1b2
        constexpr static inline std::string_view Cubes{ "\xef\x86\xb3" };                             // U+f1b3
        constexpr static inline std::string_view Behance{ "\xef\x86\xb4" };                           // U+f1b4
        constexpr static inline std::string_view BehanceSquare{ "\xef\x86\xb5" };                     // U+f1b5
        constexpr static inline std::string_view Steam{ "\xef\x86\xb6" };                             // U+f1b6
        constexpr static inline std::string_view SteamSquare{ "\xef\x86\xb7" };                       // U+f1b7
        constexpr static inline std::string_view Recycle{ "\xef\x86\xb8" };                           // U+f1b8
        constexpr static inline std::string_view Car{ "\xef\x86\xb9" };                               // U+f1b9
        constexpr static inline std::string_view Taxi{ "\xef\x86\xba" };                              // U+f1ba
        constexpr static inline std::string_view Tree{ "\xef\x86\xbb" };                              // U+f1bb
        constexpr static inline std::string_view Spotify{ "\xef\x86\xbc" };                           // U+f1bc
        constexpr static inline std::string_view Deviantart{ "\xef\x86\xbd" };                        // U+f1bd
        constexpr static inline std::string_view Soundcloud{ "\xef\x86\xbe" };                        // U+f1be
        constexpr static inline std::string_view Database{ "\xef\x87\x80" };                          // U+f1c0
        constexpr static inline std::string_view FilePdfO{ "\xef\x87\x81" };                          // U+f1c1
        constexpr static inline std::string_view FileWordO{ "\xef\x87\x82" };                         // U+f1c2
        constexpr static inline std::string_view FileExcelO{ "\xef\x87\x83" };                        // U+f1c3
        constexpr static inline std::string_view FilePowerpointO{ "\xef\x87\x84" };                   // U+f1c4
        constexpr static inline std::string_view FileImageO{ "\xef\x87\x85" };                        // U+f1c5
        constexpr static inline std::string_view FileArchiveO{ "\xef\x87\x86" };                      // U+f1c6
        constexpr static inline std::string_view FileAudioO{ "\xef\x87\x87" };                        // U+f1c7
        constexpr static inline std::string_view FileVideoO{ "\xef\x87\x88" };                        // U+f1c8
        constexpr static inline std::string_view FileCodeO{ "\xef\x87\x89" };                         // U+f1c9
        constexpr static inline std::string_view Vine{ "\xef\x87\x8a" };                              // U+f1ca
        constexpr static inline std::string_view Codepen{ "\xef\x87\x8b" };                           // U+f1cb
        constexpr static inline std::string_view Jsfiddle{ "\xef\x87\x8c" };                          // U+f1cc
        constexpr static inline std::string_view LifeRing{ "\xef\x87\x8d" };                          // U+f1cd
        constexpr static inline std::string_view CircleONotch{ "\xef\x87\x8e" };                      // U+f1ce
        constexpr static inline std::string_view Rebel{ "\xef\x87\x90" };                             // U+f1d0
        constexpr static inline std::string_view Empire{ "\xef\x87\x91" };                            // U+f1d1
        constexpr static inline std::string_view GitSquare{ "\xef\x87\x92" };                         // U+f1d2
        constexpr static inline std::string_view Git{ "\xef\x87\x93" };                               // U+f1d3
        constexpr static inline std::string_view HackerNews{ "\xef\x87\x94" };                        // U+f1d4
        constexpr static inline std::string_view TencentWeibo{ "\xef\x87\x95" };                      // U+f1d5
        constexpr static inline std::string_view Qq{ "\xef\x87\x96" };                                // U+f1d6
        constexpr static inline std::string_view Weixin{ "\xef\x87\x97" };                            // U+f1d7
        constexpr static inline std::string_view PaperPlane{ "\xef\x87\x98" };                        // U+f1d8
        constexpr static inline std::string_view PaperPlaneO{ "\xef\x87\x99" };                       // U+f1d9
        constexpr static inline std::string_view History{ "\xef\x87\x9a" };                           // U+f1da
        constexpr static inline std::string_view CircleThin{ "\xef\x87\x9b" };                        // U+f1db
        constexpr static inline std::string_view Header{ "\xef\x87\x9c" };                            // U+f1dc
        constexpr static inline std::string_view Paragraph{ "\xef\x87\x9d" };                         // U+f1dd
        constexpr static inline std::string_view Sliders{ "\xef\x87\x9e" };                           // U+f1de
        constexpr static inline std::string_view ShareAlt{ "\xef\x87\xa0" };                          // U+f1e0
        constexpr static inline std::string_view ShareAltSquare{ "\xef\x87\xa1" };                    // U+f1e1
        constexpr static inline std::string_view Bomb{ "\xef\x87\xa2" };                              // U+f1e2
        constexpr static inline std::string_view FutbolO{ "\xef\x87\xa3" };                           // U+f1e3
        constexpr static inline std::string_view Tty{ "\xef\x87\xa4" };                               // U+f1e4
        constexpr static inline std::string_view Binoculars{ "\xef\x87\xa5" };                        // U+f1e5
        constexpr static inline std::string_view Plug{ "\xef\x87\xa6" };                              // U+f1e6
        constexpr static inline std::string_view Slideshare{ "\xef\x87\xa7" };                        // U+f1e7
        constexpr static inline std::string_view Twitch{ "\xef\x87\xa8" };                            // U+f1e8
        constexpr static inline std::string_view Yelp{ "\xef\x87\xa9" };                              // U+f1e9
        constexpr static inline std::string_view NewspaperO{ "\xef\x87\xaa" };                        // U+f1ea
        constexpr static inline std::string_view Wifi{ "\xef\x87\xab" };                              // U+f1eb
        constexpr static inline std::string_view Calculator{ "\xef\x87\xac" };                        // U+f1ec
        constexpr static inline std::string_view Paypal{ "\xef\x87\xad" };                            // U+f1ed
        constexpr static inline std::string_view GoogleWallet{ "\xef\x87\xae" };                      // U+f1ee
        constexpr static inline std::string_view CcVisa{ "\xef\x87\xb0" };                            // U+f1f0
        constexpr static inline std::string_view CcMastercard{ "\xef\x87\xb1" };                      // U+f1f1
        constexpr static inline std::string_view CcDiscover{ "\xef\x87\xb2" };                        // U+f1f2
        constexpr static inline std::string_view CcAmex{ "\xef\x87\xb3" };                            // U+f1f3
        constexpr static inline std::string_view CcPaypal{ "\xef\x87\xb4" };                          // U+f1f4
        constexpr static inline std::string_view CcStripe{ "\xef\x87\xb5" };                          // U+f1f5
        constexpr static inline std::string_view BellSlash{ "\xef\x87\xb6" };                         // U+f1f6
        constexpr static inline std::string_view BellSlashO{ "\xef\x87\xb7" };                        // U+f1f7
        constexpr static inline std::string_view Trash{ "\xef\x87\xb8" };                             // U+f1f8
        constexpr static inline std::string_view Copyright{ "\xef\x87\xb9" };                         // U+f1f9
        constexpr static inline std::string_view At{ "\xef\x87\xba" };                                // U+f1fa
        constexpr static inline std::string_view Eyedropper{ "\xef\x87\xbb" };                        // U+f1fb
        constexpr static inline std::string_view PaintBrush{ "\xef\x87\xbc" };                        // U+f1fc
        constexpr static inline std::string_view BirthdayCake{ "\xef\x87\xbd" };                      // U+f1fd
        constexpr static inline std::string_view AreaChart{ "\xef\x87\xbe" };                         // U+f1fe
        constexpr static inline std::string_view PieChart{ "\xef\x88\x80" };                          // U+f200
        constexpr static inline std::string_view LineChart{ "\xef\x88\x81" };                         // U+f201
        constexpr static inline std::string_view Lastfm{ "\xef\x88\x82" };                            // U+f202
        constexpr static inline std::string_view LastfmSquare{ "\xef\x88\x83" };                      // U+f203
        constexpr static inline std::string_view ToggleOff{ "\xef\x88\x84" };                         // U+f204
        constexpr static inline std::string_view ToggleOn{ "\xef\x88\x85" };                          // U+f205
        constexpr static inline std::string_view Bicycle{ "\xef\x88\x86" };                           // U+f206
        constexpr static inline std::string_view Bus{ "\xef\x88\x87" };                               // U+f207
        constexpr static inline std::string_view Ioxhost{ "\xef\x88\x88" };                           // U+f208
        constexpr static inline std::string_view Angellist{ "\xef\x88\x89" };                         // U+f209
        constexpr static inline std::string_view Cc{ "\xef\x88\x8a" };                                // U+f20a
        constexpr static inline std::string_view Ils{ "\xef\x88\x8b" };                               // U+f20b
        constexpr static inline std::string_view Meanpath{ "\xef\x88\x8c" };                          // U+f20c
        constexpr static inline std::string_view Buysellads{ "\xef\x88\x8d" };                        // U+f20d
        constexpr static inline std::string_view Connectdevelop{ "\xef\x88\x8e" };                    // U+f20e
        constexpr static inline std::string_view Dashcube{ "\xef\x88\x90" };                          // U+f210
        constexpr static inline std::string_view Forumbee{ "\xef\x88\x91" };                          // U+f211
        constexpr static inline std::string_view Leanpub{ "\xef\x88\x92" };                           // U+f212
        constexpr static inline std::string_view Sellsy{ "\xef\x88\x93" };                            // U+f213
        constexpr static inline std::string_view Shirtsinbulk{ "\xef\x88\x94" };                      // U+f214
        constexpr static inline std::string_view Simplybuilt{ "\xef\x88\x95" };                       // U+f215
        constexpr static inline std::string_view Skyatlas{ "\xef\x88\x96" };                          // U+f216
        constexpr static inline std::string_view CartPlus{ "\xef\x88\x97" };                          // U+f217
        constexpr static inline std::string_view CartArrowDown{ "\xef\x88\x98" };                     // U+f218
        constexpr static inline std::string_view Diamond{ "\xef\x88\x99" };                           // U+f219
        constexpr static inline std::string_view Ship{ "\xef\x88\x9a" };                              // U+f21a
        constexpr static inline std::string_view UserSecret{ "\xef\x88\x9b" };                        // U+f21b
        constexpr static inline std::string_view Motorcycle{ "\xef\x88\x9c" };                        // U+f21c
        constexpr static inline std::string_view StreetView{ "\xef\x88\x9d" };                        // U+f21d
        constexpr static inline std::string_view Heartbeat{ "\xef\x88\x9e" };                         // U+f21e
        constexpr static inline std::string_view Venus{ "\xef\x88\xa1" };                             // U+f221
        constexpr static inline std::string_view Mars{ "\xef\x88\xa2" };                              // U+f222
        constexpr static inline std::string_view Mercury{ "\xef\x88\xa3" };                           // U+f223
        constexpr static inline std::string_view Transgender{ "\xef\x88\xa4" };                       // U+f224
        constexpr static inline std::string_view TransgenderAlt{ "\xef\x88\xa5" };                    // U+f225
        constexpr static inline std::string_view VenusDouble{ "\xef\x88\xa6" };                       // U+f226
        constexpr static inline std::string_view MarsDouble{ "\xef\x88\xa7" };                        // U+f227
        constexpr static inline std::string_view VenusMars{ "\xef\x88\xa8" };                         // U+f228
        constexpr static inline std::string_view MarsStroke{ "\xef\x88\xa9" };                        // U+f229
        constexpr static inline std::string_view MarsStrokeV{ "\xef\x88\xaa" };                       // U+f22a
        constexpr static inline std::string_view MarsStrokeH{ "\xef\x88\xab" };                       // U+f22b
        constexpr static inline std::string_view Neuter{ "\xef\x88\xac" };                            // U+f22c
        constexpr static inline std::string_view Genderless{ "\xef\x88\xad" };                        // U+f22d
        constexpr static inline std::string_view FacebookOfficial{ "\xef\x88\xb0" };                  // U+f230
        constexpr static inline std::string_view PinterestP{ "\xef\x88\xb1" };                        // U+f231
        constexpr static inline std::string_view Whatsapp{ "\xef\x88\xb2" };                          // U+f232
        constexpr static inline std::string_view Server{ "\xef\x88\xb3" };                            // U+f233
        constexpr static inline std::string_view UserPlus{ "\xef\x88\xb4" };                          // U+f234
        constexpr static inline std::string_view UserTimes{ "\xef\x88\xb5" };                         // U+f235
        constexpr static inline std::string_view Bed{ "\xef\x88\xb6" };                               // U+f236
        constexpr static inline std::string_view Viacoin{ "\xef\x88\xb7" };                           // U+f237
        constexpr static inline std::string_view Train{ "\xef\x88\xb8" };                             // U+f238
        constexpr static inline std::string_view Subway{ "\xef\x88\xb9" };                            // U+f239
        constexpr static inline std::string_view Medium{ "\xef\x88\xba" };                            // U+f23a
        constexpr static inline std::string_view MediumSquare{ "\xef\x8b\xb8" };                      // U+f2f8
        constexpr static inline std::string_view YCombinator{ "\xef\x88\xbb" };                       // U+f23b
        constexpr static inline std::string_view OptinMonster{ "\xef\x88\xbc" };                      // U+f23c
        constexpr static inline std::string_view Opencart{ "\xef\x88\xbd" };                          // U+f23d
        constexpr static inline std::string_view Expeditedssl{ "\xef\x88\xbe" };                      // U+f23e
        constexpr static inline std::string_view BatteryFull{ "\xef\x89\x80" };                       // U+f240
        constexpr static inline std::string_view BatteryThreeQuarters{ "\xef\x89\x81" };              // U+f241
        constexpr static inline std::string_view BatteryHalf{ "\xef\x89\x82" };                       // U+f242
        constexpr static inline std::string_view BatteryQuarter{ "\xef\x89\x83" };                    // U+f243
        constexpr static inline std::string_view BatteryEmpty{ "\xef\x89\x84" };                      // U+f244
        constexpr static inline std::string_view MousePointer{ "\xef\x89\x85" };                      // U+f245
        constexpr static inline std::string_view ICursor{ "\xef\x89\x86" };                           // U+f246
        constexpr static inline std::string_view ObjectGroup{ "\xef\x89\x87" };                       // U+f247
        constexpr static inline std::string_view ObjectUngroup{ "\xef\x89\x88" };                     // U+f248
        constexpr static inline std::string_view StickyNote{ "\xef\x89\x89" };                        // U+f249
        constexpr static inline std::string_view StickyNoteO{ "\xef\x89\x8a" };                       // U+f24a
        constexpr static inline std::string_view CcJcb{ "\xef\x89\x8b" };                             // U+f24b
        constexpr static inline std::string_view CcDinersClub{ "\xef\x89\x8c" };                      // U+f24c
        constexpr static inline std::string_view Clone{ "\xef\x89\x8d" };                             // U+f24d
        constexpr static inline std::string_view BalanceScale{ "\xef\x89\x8e" };                      // U+f24e
        constexpr static inline std::string_view HourglassO{ "\xef\x89\x90" };                        // U+f250
        constexpr static inline std::string_view HourglassStart{ "\xef\x89\x91" };                    // U+f251
        constexpr static inline std::string_view HourglassHalf{ "\xef\x89\x92" };                     // U+f252
        constexpr static inline std::string_view HourglassEnd{ "\xef\x89\x93" };                      // U+f253
        constexpr static inline std::string_view Hourglass{ "\xef\x89\x94" };                         // U+f254
        constexpr static inline std::string_view HandRockO{ "\xef\x89\x95" };                         // U+f255
        constexpr static inline std::string_view HandPaperO{ "\xef\x89\x96" };                        // U+f256
        constexpr static inline std::string_view HandScissorsO{ "\xef\x89\x97" };                     // U+f257
        constexpr static inline std::string_view HandLizardO{ "\xef\x89\x98" };                       // U+f258
        constexpr static inline std::string_view HandSpockO{ "\xef\x89\x99" };                        // U+f259
        constexpr static inline std::string_view HandPointerO{ "\xef\x89\x9a" };                      // U+f25a
        constexpr static inline std::string_view HandPeaceO{ "\xef\x89\x9b" };                        // U+f25b
        constexpr static inline std::string_view Trademark{ "\xef\x89\x9c" };                         // U+f25c
        constexpr static inline std::string_view Registered{ "\xef\x89\x9d" };                        // U+f25d
        constexpr static inline std::string_view CreativeCommons{ "\xef\x89\x9e" };                   // U+f25e
        constexpr static inline std::string_view Gg{ "\xef\x89\xa0" };                                // U+f260
        constexpr static inline std::string_view GgCircle{ "\xef\x89\xa1" };                          // U+f261
        constexpr static inline std::string_view Tripadvisor{ "\xef\x89\xa2" };                       // U+f262
        constexpr static inline std::string_view Odnoklassniki{ "\xef\x89\xa3" };                     // U+f263
        constexpr static inline std::string_view OdnoklassnikiSquare{ "\xef\x89\xa4" };               // U+f264
        constexpr static inline std::string_view GetPocket{ "\xef\x89\xa5" };                         // U+f265
        constexpr static inline std::string_view WikipediaW{ "\xef\x89\xa6" };                        // U+f266
        constexpr static inline std::string_view Safari{ "\xef\x89\xa7" };                            // U+f267
        constexpr static inline std::string_view Chrome{ "\xef\x89\xa8" };                            // U+f268
        constexpr static inline std::string_view Firefox{ "\xef\x89\xa9" };                           // U+f269
        constexpr static inline std::string_view Opera{ "\xef\x89\xaa" };                             // U+f26a
        constexpr static inline std::string_view InternetExplorer{ "\xef\x89\xab" };                  // U+f26b
        constexpr static inline std::string_view Television{ "\xef\x89\xac" };                        // U+f26c
        constexpr static inline std::string_view Contao{ "\xef\x89\xad" };                            // U+f26d
        constexpr static inline std::string_view _500px{ "\xef\x89\xae" };                            // U+f26e
        constexpr static inline std::string_view Amazon{ "\xef\x89\xb0" };                            // U+f270
        constexpr static inline std::string_view CalendarPlusO{ "\xef\x89\xb1" };                     // U+f271
        constexpr static inline std::string_view CalendarMinusO{ "\xef\x89\xb2" };                    // U+f272
        constexpr static inline std::string_view CalendarTimesO{ "\xef\x89\xb3" };                    // U+f273
        constexpr static inline std::string_view CalendarCheckO{ "\xef\x89\xb4" };                    // U+f274
        constexpr static inline std::string_view Industry{ "\xef\x89\xb5" };                          // U+f275
        constexpr static inline std::string_view MapPin{ "\xef\x89\xb6" };                            // U+f276
        constexpr static inline std::string_view MapSigns{ "\xef\x89\xb7" };                          // U+f277
        constexpr static inline std::string_view MapO{ "\xef\x89\xb8" };                              // U+f278
        constexpr static inline std::string_view Map{ "\xef\x89\xb9" };                               // U+f279
        constexpr static inline std::string_view Commenting{ "\xef\x89\xba" };                        // U+f27a
        constexpr static inline std::string_view CommentingO{ "\xef\x89\xbb" };                       // U+f27b
        constexpr static inline std::string_view Houzz{ "\xef\x89\xbc" };                             // U+f27c
        constexpr static inline std::string_view Vimeo{ "\xef\x89\xbd" };                             // U+f27d
        constexpr static inline std::string_view BlackTie{ "\xef\x89\xbe" };                          // U+f27e
        constexpr static inline std::string_view Fonticons{ "\xef\x8a\x80" };                         // U+f280
        constexpr static inline std::string_view RedditAlien{ "\xef\x8a\x81" };                       // U+f281
        constexpr static inline std::string_view Edge{ "\xef\x8a\x82" };                              // U+f282
        constexpr static inline std::string_view CreditCardAlt{ "\xef\x8a\x83" };                     // U+f283
        constexpr static inline std::string_view Codiepie{ "\xef\x8a\x84" };                          // U+f284
        constexpr static inline std::string_view Modx{ "\xef\x8a\x85" };                              // U+f285
        constexpr static inline std::string_view FortAwesome{ "\xef\x8a\x86" };                       // U+f286
        constexpr static inline std::string_view Usb{ "\xef\x8a\x87" };                               // U+f287
        constexpr static inline std::string_view ProductHunt{ "\xef\x8a\x88" };                       // U+f288
        constexpr static inline std::string_view Mixcloud{ "\xef\x8a\x89" };                          // U+f289
        constexpr static inline std::string_view Scribd{ "\xef\x8a\x8a" };                            // U+f28a
        constexpr static inline std::string_view PauseCircle{ "\xef\x8a\x8b" };                       // U+f28b
        constexpr static inline std::string_view PauseCircleO{ "\xef\x8a\x8c" };                      // U+f28c
        constexpr static inline std::string_view StopCircle{ "\xef\x8a\x8d" };                        // U+f28d
        constexpr static inline std::string_view StopCircleO{ "\xef\x8a\x8e" };                       // U+f28e
        constexpr static inline std::string_view ShoppingBag{ "\xef\x8a\x90" };                       // U+f290
        constexpr static inline std::string_view ShoppingBasket{ "\xef\x8a\x91" };                    // U+f291
        constexpr static inline std::string_view Hashtag{ "\xef\x8a\x92" };                           // U+f292
        constexpr static inline std::string_view Bluetooth{ "\xef\x8a\x93" };                         // U+f293
        constexpr static inline std::string_view BluetoothB{ "\xef\x8a\x94" };                        // U+f294
        constexpr static inline std::string_view Percent{ "\xef\x8a\x95" };                           // U+f295
        constexpr static inline std::string_view Gitlab{ "\xef\x8a\x96" };                            // U+f296
        constexpr static inline std::string_view Wpbeginner{ "\xef\x8a\x97" };                        // U+f297
        constexpr static inline std::string_view Wpforms{ "\xef\x8a\x98" };                           // U+f298
        constexpr static inline std::string_view Envira{ "\xef\x8a\x99" };                            // U+f299
        constexpr static inline std::string_view UniversalAccess{ "\xef\x8a\x9a" };                   // U+f29a
        constexpr static inline std::string_view WheelchairAlt{ "\xef\x8a\x9b" };                     // U+f29b
        constexpr static inline std::string_view QuestionCircleO{ "\xef\x8a\x9c" };                   // U+f29c
        constexpr static inline std::string_view Blind{ "\xef\x8a\x9d" };                             // U+f29d
        constexpr static inline std::string_view AudioDescription{ "\xef\x8a\x9e" };                  // U+f29e
        constexpr static inline std::string_view VolumeControlPhone{ "\xef\x8a\xa0" };                // U+f2a0
        constexpr static inline std::string_view Braille{ "\xef\x8a\xa1" };                           // U+f2a1
        constexpr static inline std::string_view AssistiveListeningSystems{ "\xef\x8a\xa2" };         // U+f2a2
        constexpr static inline std::string_view AmericanSignLanguageInterpreting{ "\xef\x8a\xa3" };  // U+f2a3
        constexpr static inline std::string_view Deaf{ "\xef\x8a\xa4" };                              // U+f2a4
        constexpr static inline std::string_view Glide{ "\xef\x8a\xa5" };                             // U+f2a5
        constexpr static inline std::string_view GlideG{ "\xef\x8a\xa6" };                            // U+f2a6
        constexpr static inline std::string_view SignLanguage{ "\xef\x8a\xa7" };                      // U+f2a7
        constexpr static inline std::string_view LowVision{ "\xef\x8a\xa8" };                         // U+f2a8
        constexpr static inline std::string_view Viadeo{ "\xef\x8a\xa9" };                            // U+f2a9
        constexpr static inline std::string_view ViadeoSquare{ "\xef\x8a\xaa" };                      // U+f2aa
        constexpr static inline std::string_view Snapchat{ "\xef\x8a\xab" };                          // U+f2ab
        constexpr static inline std::string_view SnapchatGhost{ "\xef\x8a\xac" };                     // U+f2ac
        constexpr static inline std::string_view SnapchatSquare{ "\xef\x8a\xad" };                    // U+f2ad
        constexpr static inline std::string_view FirstOrder{ "\xef\x8a\xb0" };                        // U+f2b0
        constexpr static inline std::string_view Yoast{ "\xef\x8a\xb1" };                             // U+f2b1
        constexpr static inline std::string_view Themeisle{ "\xef\x8a\xb2" };                         // U+f2b2
        constexpr static inline std::string_view GooglePlusOfficial{ "\xef\x8a\xb3" };                // U+f2b3
        constexpr static inline std::string_view FontAwesome{ "\xef\x8a\xb4" };                       // U+f2b4
        constexpr static inline std::string_view HandshakeO{ "\xef\x8a\xb5" };                        // U+f2b5
        constexpr static inline std::string_view EnvelopeOpen{ "\xef\x8a\xb6" };                      // U+f2b6
        constexpr static inline std::string_view EnvelopeOpenO{ "\xef\x8a\xb7" };                     // U+f2b7
        constexpr static inline std::string_view Linode{ "\xef\x8a\xb8" };                            // U+f2b8
        constexpr static inline std::string_view AddressBook{ "\xef\x8a\xb9" };                       // U+f2b9
        constexpr static inline std::string_view AddressBookO{ "\xef\x8a\xba" };                      // U+f2ba
        constexpr static inline std::string_view AddressCard{ "\xef\x8a\xbb" };                       // U+f2bb
        constexpr static inline std::string_view AddressCardO{ "\xef\x8a\xbc" };                      // U+f2bc
        constexpr static inline std::string_view UserCircle{ "\xef\x8a\xbd" };                        // U+f2bd
        constexpr static inline std::string_view UserCircleO{ "\xef\x8a\xbe" };                       // U+f2be
        constexpr static inline std::string_view UserO{ "\xef\x8b\x80" };                             // U+f2c0
        constexpr static inline std::string_view IdBadge{ "\xef\x8b\x81" };                           // U+f2c1
        constexpr static inline std::string_view IdCard{ "\xef\x8b\x82" };                            // U+f2c2
        constexpr static inline std::string_view IdCardO{ "\xef\x8b\x83" };                           // U+f2c3
        constexpr static inline std::string_view Quora{ "\xef\x8b\x84" };                             // U+f2c4
        constexpr static inline std::string_view FreeCodeCamp{ "\xef\x8b\x85" };                      // U+f2c5
        constexpr static inline std::string_view Telegram{ "\xef\x8b\x86" };                          // U+f2c6
        constexpr static inline std::string_view ThermometerFull{ "\xef\x8b\x87" };                   // U+f2c7
        constexpr static inline std::string_view ThermometerThreeQuarters{ "\xef\x8b\x88" };          // U+f2c8
        constexpr static inline std::string_view ThermometerHalf{ "\xef\x8b\x89" };                   // U+f2c9
        constexpr static inline std::string_view ThermometerQuarter{ "\xef\x8b\x8a" };                // U+f2ca
        constexpr static inline std::string_view ThermometerEmpty{ "\xef\x8b\x8b" };                  // U+f2cb
        constexpr static inline std::string_view Shower{ "\xef\x8b\x8c" };                            // U+f2cc
        constexpr static inline std::string_view Bath{ "\xef\x8b\x8d" };                              // U+f2cd
        constexpr static inline std::string_view Podcast{ "\xef\x8b\x8e" };                           // U+f2ce
        constexpr static inline std::string_view WindowMaximize{ "\xef\x8b\x90" };                    // U+f2d0
        constexpr static inline std::string_view WindowMinimize{ "\xef\x8b\x91" };                    // U+f2d1
        constexpr static inline std::string_view WindowRestore{ "\xef\x8b\x92" };                     // U+f2d2
        constexpr static inline std::string_view WindowClose{ "\xef\x8b\x93" };                       // U+f2d3
        constexpr static inline std::string_view WindowCloseO{ "\xef\x8b\x94" };                      // U+f2d4
        constexpr static inline std::string_view Bandcamp{ "\xef\x8b\x95" };                          // U+f2d5
        constexpr static inline std::string_view Grav{ "\xef\x8b\x96" };                              // U+f2d6
        constexpr static inline std::string_view Etsy{ "\xef\x8b\x97" };                              // U+f2d7
        constexpr static inline std::string_view Imdb{ "\xef\x8b\x98" };                              // U+f2d8
        constexpr static inline std::string_view Ravelry{ "\xef\x8b\x99" };                           // U+f2d9
        constexpr static inline std::string_view Eercast{ "\xef\x8b\x9a" };                           // U+f2da
        constexpr static inline std::string_view Microchip{ "\xef\x8b\x9b" };                         // U+f2db
        constexpr static inline std::string_view SnowflakeO{ "\xef\x8b\x9c" };                        // U+f2dc
        constexpr static inline std::string_view Superpowers{ "\xef\x8b\x9d" };                       // U+f2dd
        constexpr static inline std::string_view Wpexplorer{ "\xef\x8b\x9e" };                        // U+f2de
        constexpr static inline std::string_view Meetup{ "\xef\x8b\xa0" };                            // U+f2e0
        constexpr static inline std::string_view Mastodon{ "\xef\x8b\xa1" };                          // U+f2e1
        constexpr static inline std::string_view MastodonAlt{ "\xef\x8b\xa2" };                       // U+f2e2
        constexpr static inline std::string_view ForkAwesome{ "\xef\x8b\xa3" };                       // U+f2e3
        constexpr static inline std::string_view Peertube{ "\xef\x8b\xa4" };                          // U+f2e4
        constexpr static inline std::string_view Diaspora{ "\xef\x8b\xa5" };                          // U+f2e5
        constexpr static inline std::string_view Friendica{ "\xef\x8b\xa6" };                         // U+f2e6
        constexpr static inline std::string_view GnuSocial{ "\xef\x8b\xa7" };                         // U+f2e7
        constexpr static inline std::string_view LiberapaySquare{ "\xef\x8b\xa8" };                   // U+f2e8
        constexpr static inline std::string_view Liberapay{ "\xef\x8b\xa9" };                         // U+f2e9
        constexpr static inline std::string_view Scuttlebutt{ "\xef\x8b\xaa" };                       // U+f2ea
        constexpr static inline std::string_view Hubzilla{ "\xef\x8b\xab" };                          // U+f2eb
        constexpr static inline std::string_view SocialHome{ "\xef\x8b\xac" };                        // U+f2ec
        constexpr static inline std::string_view Artstation{ "\xef\x8b\xad" };                        // U+f2ed
        constexpr static inline std::string_view Discord{ "\xef\x8b\xae" };                           // U+f2ee
        constexpr static inline std::string_view DiscordAlt{ "\xef\x8b\xaf" };                        // U+f2ef
        constexpr static inline std::string_view Patreon{ "\xef\x8b\xb0" };                           // U+f2f0
        constexpr static inline std::string_view Snowdrift{ "\xef\x8b\xb1" };                         // U+f2f1
        constexpr static inline std::string_view Activitypub{ "\xef\x8b\xb2" };                       // U+f2f2
        constexpr static inline std::string_view Ethereum{ "\xef\x8b\xb3" };                          // U+f2f3
        constexpr static inline std::string_view Keybase{ "\xef\x8b\xb4" };                           // U+f2f4
        constexpr static inline std::string_view Shaarli{ "\xef\x8b\xb5" };                           // U+f2f5
        constexpr static inline std::string_view ShaarliO{ "\xef\x8b\xb6" };                          // U+f2f6
        constexpr static inline std::string_view KeyModern{ "\xef\x8b\xb7" };                         // U+f2f7
        constexpr static inline std::string_view Xmpp{ "\xef\x8b\xb9" };                              // U+f2f9
        constexpr static inline std::string_view ArchiveOrg{ "\xef\x8b\xbc" };                        // U+f2fc
        constexpr static inline std::string_view Freedombox{ "\xef\x8b\xbd" };                        // U+f2fd
        constexpr static inline std::string_view FacebookMessenger{ "\xef\x8b\xbe" };                 // U+f2fe
        constexpr static inline std::string_view Debian{ "\xef\x8b\xbf" };                            // U+f2ff
        constexpr static inline std::string_view MastodonSquare{ "\xef\x8c\x80" };                    // U+f300
        constexpr static inline std::string_view Tipeee{ "\xef\x8c\x81" };                            // U+f301
        constexpr static inline std::string_view React{ "\xef\x8c\x82" };                             // U+f302
        constexpr static inline std::string_view Dogmazic{ "\xef\x8c\x83" };                          // U+f303
        constexpr static inline std::string_view Zotero{ "\xef\x8c\x89" };                            // U+f309
        constexpr static inline std::string_view Nodejs{ "\xef\x8c\x88" };                            // U+f308
        constexpr static inline std::string_view Nextcloud{ "\xef\x8c\x86" };                         // U+f306
        constexpr static inline std::string_view NextcloudSquare{ "\xef\x8c\x87" };                   // U+f307
        constexpr static inline std::string_view Hackaday{ "\xef\x8c\x8a" };                          // U+f30a
        constexpr static inline std::string_view Laravel{ "\xef\x8c\x8b" };                           // U+f30b
        constexpr static inline std::string_view Signalapp{ "\xef\x8c\x8c" };                         // U+f30c
        constexpr static inline std::string_view Gnupg{ "\xef\x8c\x8d" };                             // U+f30d
        constexpr static inline std::string_view Php{ "\xef\x8c\x8e" };                               // U+f30e
        constexpr static inline std::string_view Ffmpeg{ "\xef\x8c\x8f" };                            // U+f30f
        constexpr static inline std::string_view Joplin{ "\xef\x8c\x90" };                            // U+f310
        constexpr static inline std::string_view Syncthing{ "\xef\x8c\x91" };                         // U+f311
        constexpr static inline std::string_view Inkscape{ "\xef\x8c\x92" };                          // U+f312
        constexpr static inline std::string_view MatrixOrg{ "\xef\x8c\x93" };                         // U+f313
        constexpr static inline std::string_view Pixelfed{ "\xef\x8c\x94" };                          // U+f314
        constexpr static inline std::string_view Bootstrap{ "\xef\x8c\x95" };                         // U+f315
        constexpr static inline std::string_view DevTo{ "\xef\x8c\x96" };                             // U+f316
        constexpr static inline std::string_view Hashnode{ "\xef\x8c\x97" };                          // U+f317
        constexpr static inline std::string_view Jirafeau{ "\xef\x8c\x98" };                          // U+f318
        constexpr static inline std::string_view Emby{ "\xef\x8c\x99" };                              // U+f319
        constexpr static inline std::string_view Wikidata{ "\xef\x8c\x9a" };                          // U+f31a
        constexpr static inline std::string_view Gimp{ "\xef\x8c\x9b" };                              // U+f31b
        constexpr static inline std::string_view C{ "\xef\x8c\x9c" };                                 // U+f31c
        constexpr static inline std::string_view Digitalocean{ "\xef\x8c\x9d" };                      // U+f31d
        constexpr static inline std::string_view Att{ "\xef\x8c\x9e" };                               // U+f31e
        constexpr static inline std::string_view Gitea{ "\xef\x8c\x9f" };                             // U+f31f
        constexpr static inline std::string_view FileEpub{ "\xef\x8c\xa1" };                          // U+f321
        constexpr static inline std::string_view Python{ "\xef\x8c\xa2" };                            // U+f322
        constexpr static inline std::string_view Archlinux{ "\xef\x8c\xa3" };                         // U+f323
        constexpr static inline std::string_view Pleroma{ "\xef\x8c\xa4" };                           // U+f324
        constexpr static inline std::string_view Unsplash{ "\xef\x8c\xa5" };                          // U+f325
        constexpr static inline std::string_view Hackster{ "\xef\x8c\xa6" };                          // U+f326
        constexpr static inline std::string_view SpellCheck{ "\xef\x8c\xa7" };                        // U+f327
        constexpr static inline std::string_view Moon{ "\xef\x8c\xa8" };                              // U+f328
        constexpr static inline std::string_view Sun{ "\xef\x8c\xa9" };                               // U+f329
        constexpr static inline std::string_view FDroid{ "\xef\x8c\xaa" };                            // U+f32a
        constexpr static inline std::string_view Biometric{ "\xef\x8c\xab" };                         // U+f32b
        constexpr static inline std::string_view Wire{ "\xef\x8c\xac" };                              // U+f32c
        constexpr static inline std::string_view TorOnion{ "\xef\x8c\xae" };                          // U+f32e
        constexpr static inline std::string_view VolumeMute{ "\xef\x8c\xaf" };                        // U+f32f
        constexpr static inline std::string_view BellRinging{ "\xef\x8c\xad" };                       // U+f32d
        constexpr static inline std::string_view BellRingingO{ "\xef\x8c\xb0" };                      // U+f330
        constexpr static inline std::string_view Hal{ "\xef\x8c\xb3" };                               // U+f333
        constexpr static inline std::string_view Jupyter{ "\xef\x8c\xb5" };                           // U+f335
        constexpr static inline std::string_view Julia{ "\xef\x8c\xb4" };                             // U+f334
        constexpr static inline std::string_view Classicpress{ "\xef\x8c\xb1" };                      // U+f331
        constexpr static inline std::string_view ClassicpressCircle{ "\xef\x8c\xb2" };                // U+f332
        constexpr static inline std::string_view OpenCollective{ "\xef\x8c\xb6" };                    // U+f336
        constexpr static inline std::string_view Orcid{ "\xef\x8c\xb7" };                             // U+f337
        constexpr static inline std::string_view Researchgate{ "\xef\x8c\xb8" };                      // U+f338
        constexpr static inline std::string_view Funkwhale{ "\xef\x8c\xb9" };                         // U+f339
        constexpr static inline std::string_view Askfm{ "\xef\x8c\xba" };                             // U+f33a
        constexpr static inline std::string_view Blockstack{ "\xef\x8c\xbb" };                        // U+f33b
        constexpr static inline std::string_view Boardgamegeek{ "\xef\x8c\xbc" };                     // U+f33c
        constexpr static inline std::string_view Bunny{ "\xef\x8d\x9f" };                             // U+f35f
        constexpr static inline std::string_view Buymeacoffee{ "\xef\x8c\xbd" };                      // U+f33d
        constexpr static inline std::string_view CcBy{ "\xef\x8c\xbe" };                              // U+f33e
        constexpr static inline std::string_view CcCc{ "\xef\x8c\xbf" };                              // U+f33f
        constexpr static inline std::string_view CcNcEu{ "\xef\x8d\x81" };                            // U+f341
        constexpr static inline std::string_view CcNcJp{ "\xef\x8d\x82" };                            // U+f342
        constexpr static inline std::string_view CcNc{ "\xef\x8d\x80" };                              // U+f340
        constexpr static inline std::string_view CcNd{ "\xef\x8d\x83" };                              // U+f343
        constexpr static inline std::string_view CcPd{ "\xef\x8d\x84" };                              // U+f344
        constexpr static inline std::string_view CcRemix{ "\xef\x8d\x85" };                           // U+f345
        constexpr static inline std::string_view CcSa{ "\xef\x8d\x86" };                              // U+f346
        constexpr static inline std::string_view CcShare{ "\xef\x8d\x87" };                           // U+f347
        constexpr static inline std::string_view CcZero{ "\xef\x8d\x88" };                            // U+f348
        constexpr static inline std::string_view ConwayGlider{ "\xef\x8d\x89" };                      // U+f349
        constexpr static inline std::string_view Csharp{ "\xef\x8d\x8a" };                            // U+f34a
        constexpr static inline std::string_view EmailBulk{ "\xef\x8d\x8b" };                         // U+f34b
        constexpr static inline std::string_view EmailBulkO{ "\xef\x8d\x8c" };                        // U+f34c
        constexpr static inline std::string_view Gnu{ "\xef\x8d\x8d" };                               // U+f34d
        constexpr static inline std::string_view GooglePlay{ "\xef\x8d\x8e" };                        // U+f34e
        constexpr static inline std::string_view Heroku{ "\xef\x8d\x8f" };                            // U+f34f
        constexpr static inline std::string_view HomeAssistant{ "\xef\x8d\x90" };                     // U+f350
        constexpr static inline std::string_view Java{ "\xef\x8d\x91" };                              // U+f351
        constexpr static inline std::string_view Mariadb{ "\xef\x8d\x92" };                           // U+f352
        constexpr static inline std::string_view Markdown{ "\xef\x8d\x93" };                          // U+f353
        constexpr static inline std::string_view Mysql{ "\xef\x8d\x94" };                             // U+f354
        constexpr static inline std::string_view Nordcast{ "\xef\x8d\x95" };                          // U+f355
        constexpr static inline std::string_view Plume{ "\xef\x8d\x96" };                             // U+f356
        constexpr static inline std::string_view Postgresql{ "\xef\x8d\x97" };                        // U+f357
        constexpr static inline std::string_view SassAlt{ "\xef\x8d\x99" };                           // U+f359
        constexpr static inline std::string_view Sass{ "\xef\x8d\x98" };                              // U+f358
        constexpr static inline std::string_view Skate{ "\xef\x8d\x9a" };                             // U+f35a
        constexpr static inline std::string_view Sketchfab{ "\xef\x8d\x9b" };                         // U+f35b
        constexpr static inline std::string_view Tex{ "\xef\x8d\x9c" };                               // U+f35c
        constexpr static inline std::string_view Textpattern{ "\xef\x8d\x9d" };                       // U+f35d
        constexpr static inline std::string_view Unity{ "\xef\x8d\x9e" };                             // U+f35e
        constexpr static inline std::string_view Hedgedoc{ "\xef\x8d\xa0" };                          // U+f360
        constexpr static inline std::string_view Fediverse{ "\xef\x8d\xa1" };                         // U+f361
        constexpr static inline std::string_view Proftpd{ "\xef\x8d\xa2" };                           // U+f362
        constexpr static inline std::string_view Osi{ "\xef\x8d\xa3" };                               // U+f363
        constexpr static inline std::string_view Eyeem{ "\xef\x8d\xa4" };                             // U+f364
        constexpr static inline std::string_view EyeemO{ "\xef\x8d\xa5" };                            // U+f365
        constexpr static inline std::string_view Codeberg{ "\xef\x8d\xa6" };                          // U+f366
        constexpr static inline std::string_view Discourse{ "\xef\x8d\xa7" };                         // U+f367
        constexpr static inline std::string_view Mumble{ "\xef\x8d\xa8" };                            // U+f368
        constexpr static inline std::string_view Freedesktop{ "\xef\x8d\xa9" };                       // U+f369
        constexpr static inline std::string_view Javascript{ "\xef\x8d\xb0" };                        // U+f370
        constexpr static inline std::string_view Lemmy{ "\xef\x8d\xb1" };                             // U+f371
        constexpr static inline std::string_view Ipfs{ "\xef\x8d\xb2" };                              // U+f372
        constexpr static inline std::string_view Canonical{ "\xef\x8d\xaa" };                         // U+f36a
        constexpr static inline std::string_view Ubuntu{ "\xef\x8d\xab" };                            // U+f36b
    };
}
