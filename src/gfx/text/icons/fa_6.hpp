#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct FA6 {
        constexpr static inline std::string_view FileNameFar{ "fa-regular-400.ttf" };
        constexpr static inline std::string_view FileNameFas{ "fa-solid-900.ttf" };

        constexpr static inline u16 IconMin{ 0xe005 };
        constexpr static inline u16 IconMax16{ 0xf8ff };
        constexpr static inline u16 IconMax{ 0xf8ff };

        constexpr static inline std::string_view FA0{ "0" };                                           // U+0030
        constexpr static inline std::string_view FA1{ "1" };                                           // U+0031
        constexpr static inline std::string_view FA2{ "2" };                                           // U+0032
        constexpr static inline std::string_view FA3{ "3" };                                           // U+0033
        constexpr static inline std::string_view FA4{ "4" };                                           // U+0034
        constexpr static inline std::string_view FA5{ "5" };                                           // U+0035
        constexpr static inline std::string_view FA6_{ "6" };                                          // U+0036
        constexpr static inline std::string_view FA7{ "7" };                                           // U+0037
        constexpr static inline std::string_view FA8{ "8" };                                           // U+0038
        constexpr static inline std::string_view FA9{ "9" };                                           // U+0039
        constexpr static inline std::string_view A{ "A" };                                             // U+0041
        constexpr static inline std::string_view AddressBook{ "\xef\x8a\xb9" };                        // U+f2b9
        constexpr static inline std::string_view AddressCard{ "\xef\x8a\xbb" };                        // U+f2bb
        constexpr static inline std::string_view AlignCenter{ "\xef\x80\xb7" };                        // U+f037
        constexpr static inline std::string_view AlignJustify{ "\xef\x80\xb9" };                       // U+f039
        constexpr static inline std::string_view AlignLeft{ "\xef\x80\xb6" };                          // U+f036
        constexpr static inline std::string_view AlignRight{ "\xef\x80\xb8" };                         // U+f038
        constexpr static inline std::string_view Anchor{ "\xef\x84\xbd" };                             // U+f13d
        constexpr static inline std::string_view AnchorCircleCheck{ "\xee\x92\xaa" };                  // U+e4aa
        constexpr static inline std::string_view AnchorCircleExclamation{ "\xee\x92\xab" };            // U+e4ab
        constexpr static inline std::string_view AnchorCircleXmark{ "\xee\x92\xac" };                  // U+e4ac
        constexpr static inline std::string_view AnchorLock{ "\xee\x92\xad" };                         // U+e4ad
        constexpr static inline std::string_view AngleDown{ "\xef\x84\x87" };                          // U+f107
        constexpr static inline std::string_view AngleLeft{ "\xef\x84\x84" };                          // U+f104
        constexpr static inline std::string_view AngleRight{ "\xef\x84\x85" };                         // U+f105
        constexpr static inline std::string_view AngleUp{ "\xef\x84\x86" };                            // U+f106
        constexpr static inline std::string_view AnglesDown{ "\xef\x84\x83" };                         // U+f103
        constexpr static inline std::string_view AnglesLeft{ "\xef\x84\x80" };                         // U+f100
        constexpr static inline std::string_view AnglesRight{ "\xef\x84\x81" };                        // U+f101
        constexpr static inline std::string_view AnglesUp{ "\xef\x84\x82" };                           // U+f102
        constexpr static inline std::string_view Ankh{ "\xef\x99\x84" };                               // U+f644
        constexpr static inline std::string_view AppleWhole{ "\xef\x97\x91" };                         // U+f5d1
        constexpr static inline std::string_view Archway{ "\xef\x95\x97" };                            // U+f557
        constexpr static inline std::string_view ArrowDown{ "\xef\x81\xa3" };                          // U+f063
        constexpr static inline std::string_view ArrowDown_1_9{ "\xef\x85\xa2" };                      // U+f162
        constexpr static inline std::string_view ArrowDown_9_1{ "\xef\xa2\x86" };                      // U+f886
        constexpr static inline std::string_view ArrowDownAZ{ "\xef\x85\x9d" };                        // U+f15d
        constexpr static inline std::string_view ArrowDownLong{ "\xef\x85\xb5" };                      // U+f175
        constexpr static inline std::string_view ArrowDownShortWide{ "\xef\xa2\x84" };                 // U+f884
        constexpr static inline std::string_view ArrowDownUpAcrossLine{ "\xee\x92\xaf" };              // U+e4af
        constexpr static inline std::string_view ArrowDownUpLock{ "\xee\x92\xb0" };                    // U+e4b0
        constexpr static inline std::string_view ArrowDownWideShort{ "\xef\x85\xa0" };                 // U+f160
        constexpr static inline std::string_view ArrowDownZA{ "\xef\xa2\x81" };                        // U+f881
        constexpr static inline std::string_view ArrowLeft{ "\xef\x81\xa0" };                          // U+f060
        constexpr static inline std::string_view ArrowLeftLong{ "\xef\x85\xb7" };                      // U+f177
        constexpr static inline std::string_view ArrowPointer{ "\xef\x89\x85" };                       // U+f245
        constexpr static inline std::string_view ArrowRight{ "\xef\x81\xa1" };                         // U+f061
        constexpr static inline std::string_view ArrowRightArrowLeft{ "\xef\x83\xac" };                // U+f0ec
        constexpr static inline std::string_view ArrowRightFromBracket{ "\xef\x82\x8b" };              // U+f08b
        constexpr static inline std::string_view ArrowRightLong{ "\xef\x85\xb8" };                     // U+f178
        constexpr static inline std::string_view ArrowRightToBracket{ "\xef\x82\x90" };                // U+f090
        constexpr static inline std::string_view ArrowRightToCity{ "\xee\x92\xb3" };                   // U+e4b3
        constexpr static inline std::string_view ArrowRotateLeft{ "\xef\x83\xa2" };                    // U+f0e2
        constexpr static inline std::string_view ArrowRotateRight{ "\xef\x80\x9e" };                   // U+f01e
        constexpr static inline std::string_view ArrowTrendDown{ "\xee\x82\x97" };                     // U+e097
        constexpr static inline std::string_view ArrowTrendUp{ "\xee\x82\x98" };                       // U+e098
        constexpr static inline std::string_view ArrowTurnDown{ "\xef\x85\x89" };                      // U+f149
        constexpr static inline std::string_view ArrowTurnUp{ "\xef\x85\x88" };                        // U+f148
        constexpr static inline std::string_view ArrowUp{ "\xef\x81\xa2" };                            // U+f062
        constexpr static inline std::string_view ArrowUp_1_9{ "\xef\x85\xa3" };                        // U+f163
        constexpr static inline std::string_view ArrowUp_9_1{ "\xef\xa2\x87" };                        // U+f887
        constexpr static inline std::string_view ArrowUpAZ{ "\xef\x85\x9e" };                          // U+f15e
        constexpr static inline std::string_view ArrowUpFromBracket{ "\xee\x82\x9a" };                 // U+e09a
        constexpr static inline std::string_view ArrowUpFromGroundWater{ "\xee\x92\xb5" };             // U+e4b5
        constexpr static inline std::string_view ArrowUpFromWaterPump{ "\xee\x92\xb6" };               // U+e4b6
        constexpr static inline std::string_view ArrowUpLong{ "\xef\x85\xb6" };                        // U+f176
        constexpr static inline std::string_view ArrowUpRightDots{ "\xee\x92\xb7" };                   // U+e4b7
        constexpr static inline std::string_view ArrowUpRightFromSquare{ "\xef\x82\x8e" };             // U+f08e
        constexpr static inline std::string_view ArrowUpShortWide{ "\xef\xa2\x85" };                   // U+f885
        constexpr static inline std::string_view ArrowUpWideShort{ "\xef\x85\xa1" };                   // U+f161
        constexpr static inline std::string_view ArrowUpZA{ "\xef\xa2\x82" };                          // U+f882
        constexpr static inline std::string_view ArrowsDownToLine{ "\xee\x92\xb8" };                   // U+e4b8
        constexpr static inline std::string_view ArrowsDownToPeople{ "\xee\x92\xb9" };                 // U+e4b9
        constexpr static inline std::string_view ArrowsLeftRight{ "\xef\x81\xbe" };                    // U+f07e
        constexpr static inline std::string_view ArrowsLeftRightToLine{ "\xee\x92\xba" };              // U+e4ba
        constexpr static inline std::string_view ArrowsRotate{ "\xef\x80\xa1" };                       // U+f021
        constexpr static inline std::string_view ArrowsSpin{ "\xee\x92\xbb" };                         // U+e4bb
        constexpr static inline std::string_view ArrowsSplitUpAndLeft{ "\xee\x92\xbc" };               // U+e4bc
        constexpr static inline std::string_view ArrowsToCircle{ "\xee\x92\xbd" };                     // U+e4bd
        constexpr static inline std::string_view ArrowsToDot{ "\xee\x92\xbe" };                        // U+e4be
        constexpr static inline std::string_view ArrowsToEye{ "\xee\x92\xbf" };                        // U+e4bf
        constexpr static inline std::string_view ArrowsTurnRight{ "\xee\x93\x80" };                    // U+e4c0
        constexpr static inline std::string_view ArrowsTurnToDots{ "\xee\x93\x81" };                   // U+e4c1
        constexpr static inline std::string_view ArrowsUpDown{ "\xef\x81\xbd" };                       // U+f07d
        constexpr static inline std::string_view ArrowsUpDownLeftRight{ "\xef\x81\x87" };              // U+f047
        constexpr static inline std::string_view ArrowsUpToLine{ "\xee\x93\x82" };                     // U+e4c2
        constexpr static inline std::string_view Asterisk{ "*" };                                      // U+002a
        constexpr static inline std::string_view At{ "@" };                                            // U+0040
        constexpr static inline std::string_view Atom{ "\xef\x97\x92" };                               // U+f5d2
        constexpr static inline std::string_view AudioDescription{ "\xef\x8a\x9e" };                   // U+f29e
        constexpr static inline std::string_view AustralSign{ "\xee\x82\xa9" };                        // U+e0a9
        constexpr static inline std::string_view Award{ "\xef\x95\x99" };                              // U+f559
        constexpr static inline std::string_view B{ "B" };                                             // U+0042
        constexpr static inline std::string_view Baby{ "\xef\x9d\xbc" };                               // U+f77c
        constexpr static inline std::string_view BabyCarriage{ "\xef\x9d\xbd" };                       // U+f77d
        constexpr static inline std::string_view Backward{ "\xef\x81\x8a" };                           // U+f04a
        constexpr static inline std::string_view BackwardFast{ "\xef\x81\x89" };                       // U+f049
        constexpr static inline std::string_view BackwardStep{ "\xef\x81\x88" };                       // U+f048
        constexpr static inline std::string_view Bacon{ "\xef\x9f\xa5" };                              // U+f7e5
        constexpr static inline std::string_view Bacteria{ "\xee\x81\x99" };                           // U+e059
        constexpr static inline std::string_view Bacterium{ "\xee\x81\x9a" };                          // U+e05a
        constexpr static inline std::string_view BagShopping{ "\xef\x8a\x90" };                        // U+f290
        constexpr static inline std::string_view Bahai{ "\xef\x99\xa6" };                              // U+f666
        constexpr static inline std::string_view BahtSign{ "\xee\x82\xac" };                           // U+e0ac
        constexpr static inline std::string_view Ban{ "\xef\x81\x9e" };                                // U+f05e
        constexpr static inline std::string_view BanSmoking{ "\xef\x95\x8d" };                         // U+f54d
        constexpr static inline std::string_view Bandage{ "\xef\x91\xa2" };                            // U+f462
        constexpr static inline std::string_view BangladeshiTakaSign{ "\xee\x8b\xa6" };                // U+e2e6
        constexpr static inline std::string_view Barcode{ "\xef\x80\xaa" };                            // U+f02a
        constexpr static inline std::string_view Bars{ "\xef\x83\x89" };                               // U+f0c9
        constexpr static inline std::string_view BarsProgress{ "\xef\xa0\xa8" };                       // U+f828
        constexpr static inline std::string_view BarsStaggered{ "\xef\x95\x90" };                      // U+f550
        constexpr static inline std::string_view Baseball{ "\xef\x90\xb3" };                           // U+f433
        constexpr static inline std::string_view BaseballBatBall{ "\xef\x90\xb2" };                    // U+f432
        constexpr static inline std::string_view BasketShopping{ "\xef\x8a\x91" };                     // U+f291
        constexpr static inline std::string_view Basketball{ "\xef\x90\xb4" };                         // U+f434
        constexpr static inline std::string_view Bath{ "\xef\x8b\x8d" };                               // U+f2cd
        constexpr static inline std::string_view BatteryEmpty{ "\xef\x89\x84" };                       // U+f244
        constexpr static inline std::string_view BatteryFull{ "\xef\x89\x80" };                        // U+f240
        constexpr static inline std::string_view BatteryHalf{ "\xef\x89\x82" };                        // U+f242
        constexpr static inline std::string_view BatteryQuarter{ "\xef\x89\x83" };                     // U+f243
        constexpr static inline std::string_view BatteryThreeQuarters{ "\xef\x89\x81" };               // U+f241
        constexpr static inline std::string_view Bed{ "\xef\x88\xb6" };                                // U+f236
        constexpr static inline std::string_view BedPulse{ "\xef\x92\x87" };                           // U+f487
        constexpr static inline std::string_view BeerMugEmpty{ "\xef\x83\xbc" };                       // U+f0fc
        constexpr static inline std::string_view Bell{ "\xef\x83\xb3" };                               // U+f0f3
        constexpr static inline std::string_view BellConcierge{ "\xef\x95\xa2" };                      // U+f562
        constexpr static inline std::string_view BellSlash{ "\xef\x87\xb6" };                          // U+f1f6
        constexpr static inline std::string_view BezierCurve{ "\xef\x95\x9b" };                        // U+f55b
        constexpr static inline std::string_view Bicycle{ "\xef\x88\x86" };                            // U+f206
        constexpr static inline std::string_view Binoculars{ "\xef\x87\xa5" };                         // U+f1e5
        constexpr static inline std::string_view Biohazard{ "\xef\x9e\x80" };                          // U+f780
        constexpr static inline std::string_view BitcoinSign{ "\xee\x82\xb4" };                        // U+e0b4
        constexpr static inline std::string_view Blender{ "\xef\x94\x97" };                            // U+f517
        constexpr static inline std::string_view BlenderPhone{ "\xef\x9a\xb6" };                       // U+f6b6
        constexpr static inline std::string_view Blog{ "\xef\x9e\x81" };                               // U+f781
        constexpr static inline std::string_view Bold{ "\xef\x80\xb2" };                               // U+f032
        constexpr static inline std::string_view Bolt{ "\xef\x83\xa7" };                               // U+f0e7
        constexpr static inline std::string_view BoltLightning{ "\xee\x82\xb7" };                      // U+e0b7
        constexpr static inline std::string_view Bomb{ "\xef\x87\xa2" };                               // U+f1e2
        constexpr static inline std::string_view Bone{ "\xef\x97\x97" };                               // U+f5d7
        constexpr static inline std::string_view Bong{ "\xef\x95\x9c" };                               // U+f55c
        constexpr static inline std::string_view Book{ "\xef\x80\xad" };                               // U+f02d
        constexpr static inline std::string_view BookAtlas{ "\xef\x95\x98" };                          // U+f558
        constexpr static inline std::string_view BookBible{ "\xef\x99\x87" };                          // U+f647
        constexpr static inline std::string_view BookBookmark{ "\xee\x82\xbb" };                       // U+e0bb
        constexpr static inline std::string_view BookJournalWhills{ "\xef\x99\xaa" };                  // U+f66a
        constexpr static inline std::string_view BookMedical{ "\xef\x9f\xa6" };                        // U+f7e6
        constexpr static inline std::string_view BookOpen{ "\xef\x94\x98" };                           // U+f518
        constexpr static inline std::string_view BookOpenReader{ "\xef\x97\x9a" };                     // U+f5da
        constexpr static inline std::string_view BookQuran{ "\xef\x9a\x87" };                          // U+f687
        constexpr static inline std::string_view BookSkull{ "\xef\x9a\xb7" };                          // U+f6b7
        constexpr static inline std::string_view BookTanakh{ "\xef\xa0\xa7" };                         // U+f827
        constexpr static inline std::string_view Bookmark{ "\xef\x80\xae" };                           // U+f02e
        constexpr static inline std::string_view BorderAll{ "\xef\xa1\x8c" };                          // U+f84c
        constexpr static inline std::string_view BorderNone{ "\xef\xa1\x90" };                         // U+f850
        constexpr static inline std::string_view BorderTopLeft{ "\xef\xa1\x93" };                      // U+f853
        constexpr static inline std::string_view BoreHole{ "\xee\x93\x83" };                           // U+e4c3
        constexpr static inline std::string_view BottleDroplet{ "\xee\x93\x84" };                      // U+e4c4
        constexpr static inline std::string_view BottleWater{ "\xee\x93\x85" };                        // U+e4c5
        constexpr static inline std::string_view BowlFood{ "\xee\x93\x86" };                           // U+e4c6
        constexpr static inline std::string_view BowlRice{ "\xee\x8b\xab" };                           // U+e2eb
        constexpr static inline std::string_view BowlingBall{ "\xef\x90\xb6" };                        // U+f436
        constexpr static inline std::string_view Box{ "\xef\x91\xa6" };                                // U+f466
        constexpr static inline std::string_view BoxArchive{ "\xef\x86\x87" };                         // U+f187
        constexpr static inline std::string_view BoxOpen{ "\xef\x92\x9e" };                            // U+f49e
        constexpr static inline std::string_view BoxTissue{ "\xee\x81\x9b" };                          // U+e05b
        constexpr static inline std::string_view BoxesPacking{ "\xee\x93\x87" };                       // U+e4c7
        constexpr static inline std::string_view BoxesStacked{ "\xef\x91\xa8" };                       // U+f468
        constexpr static inline std::string_view Braille{ "\xef\x8a\xa1" };                            // U+f2a1
        constexpr static inline std::string_view Brain{ "\xef\x97\x9c" };                              // U+f5dc
        constexpr static inline std::string_view BrazilianRealSign{ "\xee\x91\xac" };                  // U+e46c
        constexpr static inline std::string_view BreadSlice{ "\xef\x9f\xac" };                         // U+f7ec
        constexpr static inline std::string_view Bridge{ "\xee\x93\x88" };                             // U+e4c8
        constexpr static inline std::string_view BridgeCircleCheck{ "\xee\x93\x89" };                  // U+e4c9
        constexpr static inline std::string_view BridgeCircleExclamation{ "\xee\x93\x8a" };            // U+e4ca
        constexpr static inline std::string_view BridgeCircleXmark{ "\xee\x93\x8b" };                  // U+e4cb
        constexpr static inline std::string_view BridgeLock{ "\xee\x93\x8c" };                         // U+e4cc
        constexpr static inline std::string_view BridgeWater{ "\xee\x93\x8e" };                        // U+e4ce
        constexpr static inline std::string_view Briefcase{ "\xef\x82\xb1" };                          // U+f0b1
        constexpr static inline std::string_view BriefcaseMedical{ "\xef\x91\xa9" };                   // U+f469
        constexpr static inline std::string_view Broom{ "\xef\x94\x9a" };                              // U+f51a
        constexpr static inline std::string_view BroomBall{ "\xef\x91\x98" };                          // U+f458
        constexpr static inline std::string_view Brush{ "\xef\x95\x9d" };                              // U+f55d
        constexpr static inline std::string_view Bucket{ "\xee\x93\x8f" };                             // U+e4cf
        constexpr static inline std::string_view Bug{ "\xef\x86\x88" };                                // U+f188
        constexpr static inline std::string_view BugSlash{ "\xee\x92\x90" };                           // U+e490
        constexpr static inline std::string_view Bugs{ "\xee\x93\x90" };                               // U+e4d0
        constexpr static inline std::string_view Building{ "\xef\x86\xad" };                           // U+f1ad
        constexpr static inline std::string_view BuildingCircleArrowRight{ "\xee\x93\x91" };           // U+e4d1
        constexpr static inline std::string_view BuildingCircleCheck{ "\xee\x93\x92" };                // U+e4d2
        constexpr static inline std::string_view BuildingCircleExclamation{ "\xee\x93\x93" };          // U+e4d3
        constexpr static inline std::string_view BuildingCircleXmark{ "\xee\x93\x94" };                // U+e4d4
        constexpr static inline std::string_view BuildingColumns{ "\xef\x86\x9c" };                    // U+f19c
        constexpr static inline std::string_view BuildingFlag{ "\xee\x93\x95" };                       // U+e4d5
        constexpr static inline std::string_view BuildingLock{ "\xee\x93\x96" };                       // U+e4d6
        constexpr static inline std::string_view BuildingNgo{ "\xee\x93\x97" };                        // U+e4d7
        constexpr static inline std::string_view BuildingShield{ "\xee\x93\x98" };                     // U+e4d8
        constexpr static inline std::string_view BuildingUn{ "\xee\x93\x99" };                         // U+e4d9
        constexpr static inline std::string_view BuildingUser{ "\xee\x93\x9a" };                       // U+e4da
        constexpr static inline std::string_view BuildingWheat{ "\xee\x93\x9b" };                      // U+e4db
        constexpr static inline std::string_view Bullhorn{ "\xef\x82\xa1" };                           // U+f0a1
        constexpr static inline std::string_view Bullseye{ "\xef\x85\x80" };                           // U+f140
        constexpr static inline std::string_view Burger{ "\xef\xa0\x85" };                             // U+f805
        constexpr static inline std::string_view Burst{ "\xee\x93\x9c" };                              // U+e4dc
        constexpr static inline std::string_view Bus{ "\xef\x88\x87" };                                // U+f207
        constexpr static inline std::string_view BusSimple{ "\xef\x95\x9e" };                          // U+f55e
        constexpr static inline std::string_view BusinessTime{ "\xef\x99\x8a" };                       // U+f64a
        constexpr static inline std::string_view C{ "C" };                                             // U+0043
        constexpr static inline std::string_view CableCar{ "\xef\x9f\x9a" };                           // U+f7da
        constexpr static inline std::string_view CakeCandles{ "\xef\x87\xbd" };                        // U+f1fd
        constexpr static inline std::string_view Calculator{ "\xef\x87\xac" };                         // U+f1ec
        constexpr static inline std::string_view Calendar{ "\xef\x84\xb3" };                           // U+f133
        constexpr static inline std::string_view CalendarCheck{ "\xef\x89\xb4" };                      // U+f274
        constexpr static inline std::string_view CalendarDay{ "\xef\x9e\x83" };                        // U+f783
        constexpr static inline std::string_view CalendarDays{ "\xef\x81\xb3" };                       // U+f073
        constexpr static inline std::string_view CalendarMinus{ "\xef\x89\xb2" };                      // U+f272
        constexpr static inline std::string_view CalendarPlus{ "\xef\x89\xb1" };                       // U+f271
        constexpr static inline std::string_view CalendarWeek{ "\xef\x9e\x84" };                       // U+f784
        constexpr static inline std::string_view CalendarXmark{ "\xef\x89\xb3" };                      // U+f273
        constexpr static inline std::string_view Camera{ "\xef\x80\xb0" };                             // U+f030
        constexpr static inline std::string_view CameraRetro{ "\xef\x82\x83" };                        // U+f083
        constexpr static inline std::string_view CameraRotate{ "\xee\x83\x98" };                       // U+e0d8
        constexpr static inline std::string_view Campground{ "\xef\x9a\xbb" };                         // U+f6bb
        constexpr static inline std::string_view CandyCane{ "\xef\x9e\x86" };                          // U+f786
        constexpr static inline std::string_view Cannabis{ "\xef\x95\x9f" };                           // U+f55f
        constexpr static inline std::string_view Capsules{ "\xef\x91\xab" };                           // U+f46b
        constexpr static inline std::string_view Car{ "\xef\x86\xb9" };                                // U+f1b9
        constexpr static inline std::string_view CarBattery{ "\xef\x97\x9f" };                         // U+f5df
        constexpr static inline std::string_view CarBurst{ "\xef\x97\xa1" };                           // U+f5e1
        constexpr static inline std::string_view CarOn{ "\xee\x93\x9d" };                              // U+e4dd
        constexpr static inline std::string_view CarRear{ "\xef\x97\x9e" };                            // U+f5de
        constexpr static inline std::string_view CarSide{ "\xef\x97\xa4" };                            // U+f5e4
        constexpr static inline std::string_view CarTunnel{ "\xee\x93\x9e" };                          // U+e4de
        constexpr static inline std::string_view Caravan{ "\xef\xa3\xbf" };                            // U+f8ff
        constexpr static inline std::string_view CaretDown{ "\xef\x83\x97" };                          // U+f0d7
        constexpr static inline std::string_view CaretLeft{ "\xef\x83\x99" };                          // U+f0d9
        constexpr static inline std::string_view CaretRight{ "\xef\x83\x9a" };                         // U+f0da
        constexpr static inline std::string_view CaretUp{ "\xef\x83\x98" };                            // U+f0d8
        constexpr static inline std::string_view Carrot{ "\xef\x9e\x87" };                             // U+f787
        constexpr static inline std::string_view CartArrowDown{ "\xef\x88\x98" };                      // U+f218
        constexpr static inline std::string_view CartFlatbed{ "\xef\x91\xb4" };                        // U+f474
        constexpr static inline std::string_view CartFlatbedSuitcase{ "\xef\x96\x9d" };                // U+f59d
        constexpr static inline std::string_view CartPlus{ "\xef\x88\x97" };                           // U+f217
        constexpr static inline std::string_view CartShopping{ "\xef\x81\xba" };                       // U+f07a
        constexpr static inline std::string_view CashRegister{ "\xef\x9e\x88" };                       // U+f788
        constexpr static inline std::string_view Cat{ "\xef\x9a\xbe" };                                // U+f6be
        constexpr static inline std::string_view CediSign{ "\xee\x83\x9f" };                           // U+e0df
        constexpr static inline std::string_view CentSign{ "\xee\x8f\xb5" };                           // U+e3f5
        constexpr static inline std::string_view Certificate{ "\xef\x82\xa3" };                        // U+f0a3
        constexpr static inline std::string_view Chair{ "\xef\x9b\x80" };                              // U+f6c0
        constexpr static inline std::string_view Chalkboard{ "\xef\x94\x9b" };                         // U+f51b
        constexpr static inline std::string_view ChalkboardUser{ "\xef\x94\x9c" };                     // U+f51c
        constexpr static inline std::string_view ChampagneGlasses{ "\xef\x9e\x9f" };                   // U+f79f
        constexpr static inline std::string_view ChargingStation{ "\xef\x97\xa7" };                    // U+f5e7
        constexpr static inline std::string_view ChartArea{ "\xef\x87\xbe" };                          // U+f1fe
        constexpr static inline std::string_view ChartBar{ "\xef\x82\x80" };                           // U+f080
        constexpr static inline std::string_view ChartColumn{ "\xee\x83\xa3" };                        // U+e0e3
        constexpr static inline std::string_view ChartGantt{ "\xee\x83\xa4" };                         // U+e0e4
        constexpr static inline std::string_view ChartLine{ "\xef\x88\x81" };                          // U+f201
        constexpr static inline std::string_view ChartPie{ "\xef\x88\x80" };                           // U+f200
        constexpr static inline std::string_view ChartSimple{ "\xee\x91\xb3" };                        // U+e473
        constexpr static inline std::string_view Check{ "\xef\x80\x8c" };                              // U+f00c
        constexpr static inline std::string_view CheckDouble{ "\xef\x95\xa0" };                        // U+f560
        constexpr static inline std::string_view CheckToSlot{ "\xef\x9d\xb2" };                        // U+f772
        constexpr static inline std::string_view Cheese{ "\xef\x9f\xaf" };                             // U+f7ef
        constexpr static inline std::string_view Chess{ "\xef\x90\xb9" };                              // U+f439
        constexpr static inline std::string_view ChessBishop{ "\xef\x90\xba" };                        // U+f43a
        constexpr static inline std::string_view ChessBoard{ "\xef\x90\xbc" };                         // U+f43c
        constexpr static inline std::string_view ChessKing{ "\xef\x90\xbf" };                          // U+f43f
        constexpr static inline std::string_view ChessKnight{ "\xef\x91\x81" };                        // U+f441
        constexpr static inline std::string_view ChessPawn{ "\xef\x91\x83" };                          // U+f443
        constexpr static inline std::string_view ChessQueen{ "\xef\x91\x85" };                         // U+f445
        constexpr static inline std::string_view ChessRook{ "\xef\x91\x87" };                          // U+f447
        constexpr static inline std::string_view ChevronDown{ "\xef\x81\xb8" };                        // U+f078
        constexpr static inline std::string_view ChevronLeft{ "\xef\x81\x93" };                        // U+f053
        constexpr static inline std::string_view ChevronRight{ "\xef\x81\x94" };                       // U+f054
        constexpr static inline std::string_view ChevronUp{ "\xef\x81\xb7" };                          // U+f077
        constexpr static inline std::string_view Child{ "\xef\x86\xae" };                              // U+f1ae
        constexpr static inline std::string_view ChildCombatant{ "\xee\x93\xa0" };                     // U+e4e0
        constexpr static inline std::string_view ChildDress{ "\xee\x96\x9c" };                         // U+e59c
        constexpr static inline std::string_view ChildReaching{ "\xee\x96\x9d" };                      // U+e59d
        constexpr static inline std::string_view Children{ "\xee\x93\xa1" };                           // U+e4e1
        constexpr static inline std::string_view Church{ "\xef\x94\x9d" };                             // U+f51d
        constexpr static inline std::string_view Circle{ "\xef\x84\x91" };                             // U+f111
        constexpr static inline std::string_view CircleArrowDown{ "\xef\x82\xab" };                    // U+f0ab
        constexpr static inline std::string_view CircleArrowLeft{ "\xef\x82\xa8" };                    // U+f0a8
        constexpr static inline std::string_view CircleArrowRight{ "\xef\x82\xa9" };                   // U+f0a9
        constexpr static inline std::string_view CircleArrowUp{ "\xef\x82\xaa" };                      // U+f0aa
        constexpr static inline std::string_view CircleCheck{ "\xef\x81\x98" };                        // U+f058
        constexpr static inline std::string_view CircleChevronDown{ "\xef\x84\xba" };                  // U+f13a
        constexpr static inline std::string_view CircleChevronLeft{ "\xef\x84\xb7" };                  // U+f137
        constexpr static inline std::string_view CircleChevronRight{ "\xef\x84\xb8" };                 // U+f138
        constexpr static inline std::string_view CircleChevronUp{ "\xef\x84\xb9" };                    // U+f139
        constexpr static inline std::string_view CircleDollarToSlot{ "\xef\x92\xb9" };                 // U+f4b9
        constexpr static inline std::string_view CircleDot{ "\xef\x86\x92" };                          // U+f192
        constexpr static inline std::string_view CircleDown{ "\xef\x8d\x98" };                         // U+f358
        constexpr static inline std::string_view CircleExclamation{ "\xef\x81\xaa" };                  // U+f06a
        constexpr static inline std::string_view CircleH{ "\xef\x91\xbe" };                            // U+f47e
        constexpr static inline std::string_view CircleHalfStroke{ "\xef\x81\x82" };                   // U+f042
        constexpr static inline std::string_view CircleInfo{ "\xef\x81\x9a" };                         // U+f05a
        constexpr static inline std::string_view CircleLeft{ "\xef\x8d\x99" };                         // U+f359
        constexpr static inline std::string_view CircleMinus{ "\xef\x81\x96" };                        // U+f056
        constexpr static inline std::string_view CircleNodes{ "\xee\x93\xa2" };                        // U+e4e2
        constexpr static inline std::string_view CircleNotch{ "\xef\x87\x8e" };                        // U+f1ce
        constexpr static inline std::string_view CirclePause{ "\xef\x8a\x8b" };                        // U+f28b
        constexpr static inline std::string_view CirclePlay{ "\xef\x85\x84" };                         // U+f144
        constexpr static inline std::string_view CirclePlus{ "\xef\x81\x95" };                         // U+f055
        constexpr static inline std::string_view CircleQuestion{ "\xef\x81\x99" };                     // U+f059
        constexpr static inline std::string_view CircleRadiation{ "\xef\x9e\xba" };                    // U+f7ba
        constexpr static inline std::string_view CircleRight{ "\xef\x8d\x9a" };                        // U+f35a
        constexpr static inline std::string_view CircleStop{ "\xef\x8a\x8d" };                         // U+f28d
        constexpr static inline std::string_view CircleUp{ "\xef\x8d\x9b" };                           // U+f35b
        constexpr static inline std::string_view CircleUser{ "\xef\x8a\xbd" };                         // U+f2bd
        constexpr static inline std::string_view CircleXmark{ "\xef\x81\x97" };                        // U+f057
        constexpr static inline std::string_view City{ "\xef\x99\x8f" };                               // U+f64f
        constexpr static inline std::string_view Clapperboard{ "\xee\x84\xb1" };                       // U+e131
        constexpr static inline std::string_view Clipboard{ "\xef\x8c\xa8" };                          // U+f328
        constexpr static inline std::string_view ClipboardCheck{ "\xef\x91\xac" };                     // U+f46c
        constexpr static inline std::string_view ClipboardList{ "\xef\x91\xad" };                      // U+f46d
        constexpr static inline std::string_view ClipboardQuestion{ "\xee\x93\xa3" };                  // U+e4e3
        constexpr static inline std::string_view ClipboardUser{ "\xef\x9f\xb3" };                      // U+f7f3
        constexpr static inline std::string_view Clock{ "\xef\x80\x97" };                              // U+f017
        constexpr static inline std::string_view ClockRotateLeft{ "\xef\x87\x9a" };                    // U+f1da
        constexpr static inline std::string_view Clone{ "\xef\x89\x8d" };                              // U+f24d
        constexpr static inline std::string_view ClosedCaptioning{ "\xef\x88\x8a" };                   // U+f20a
        constexpr static inline std::string_view Cloud{ "\xef\x83\x82" };                              // U+f0c2
        constexpr static inline std::string_view CloudArrowDown{ "\xef\x83\xad" };                     // U+f0ed
        constexpr static inline std::string_view CloudArrowUp{ "\xef\x83\xae" };                       // U+f0ee
        constexpr static inline std::string_view CloudBolt{ "\xef\x9d\xac" };                          // U+f76c
        constexpr static inline std::string_view CloudMeatball{ "\xef\x9c\xbb" };                      // U+f73b
        constexpr static inline std::string_view CloudMoon{ "\xef\x9b\x83" };                          // U+f6c3
        constexpr static inline std::string_view CloudMoonRain{ "\xef\x9c\xbc" };                      // U+f73c
        constexpr static inline std::string_view CloudRain{ "\xef\x9c\xbd" };                          // U+f73d
        constexpr static inline std::string_view CloudShowersHeavy{ "\xef\x9d\x80" };                  // U+f740
        constexpr static inline std::string_view CloudShowersWater{ "\xee\x93\xa4" };                  // U+e4e4
        constexpr static inline std::string_view CloudSun{ "\xef\x9b\x84" };                           // U+f6c4
        constexpr static inline std::string_view CloudSunRain{ "\xef\x9d\x83" };                       // U+f743
        constexpr static inline std::string_view Clover{ "\xee\x84\xb9" };                             // U+e139
        constexpr static inline std::string_view Code{ "\xef\x84\xa1" };                               // U+f121
        constexpr static inline std::string_view CodeBranch{ "\xef\x84\xa6" };                         // U+f126
        constexpr static inline std::string_view CodeCommit{ "\xef\x8e\x86" };                         // U+f386
        constexpr static inline std::string_view CodeCompare{ "\xee\x84\xba" };                        // U+e13a
        constexpr static inline std::string_view CodeFork{ "\xee\x84\xbb" };                           // U+e13b
        constexpr static inline std::string_view CodeMerge{ "\xef\x8e\x87" };                          // U+f387
        constexpr static inline std::string_view CodePullRequest{ "\xee\x84\xbc" };                    // U+e13c
        constexpr static inline std::string_view Coins{ "\xef\x94\x9e" };                              // U+f51e
        constexpr static inline std::string_view ColonSign{ "\xee\x85\x80" };                          // U+e140
        constexpr static inline std::string_view Comment{ "\xef\x81\xb5" };                            // U+f075
        constexpr static inline std::string_view CommentDollar{ "\xef\x99\x91" };                      // U+f651
        constexpr static inline std::string_view CommentDots{ "\xef\x92\xad" };                        // U+f4ad
        constexpr static inline std::string_view CommentMedical{ "\xef\x9f\xb5" };                     // U+f7f5
        constexpr static inline std::string_view CommentSlash{ "\xef\x92\xb3" };                       // U+f4b3
        constexpr static inline std::string_view CommentSms{ "\xef\x9f\x8d" };                         // U+f7cd
        constexpr static inline std::string_view Comments{ "\xef\x82\x86" };                           // U+f086
        constexpr static inline std::string_view CommentsDollar{ "\xef\x99\x93" };                     // U+f653
        constexpr static inline std::string_view CompactDisc{ "\xef\x94\x9f" };                        // U+f51f
        constexpr static inline std::string_view Compass{ "\xef\x85\x8e" };                            // U+f14e
        constexpr static inline std::string_view CompassDrafting{ "\xef\x95\xa8" };                    // U+f568
        constexpr static inline std::string_view Compress{ "\xef\x81\xa6" };                           // U+f066
        constexpr static inline std::string_view Computer{ "\xee\x93\xa5" };                           // U+e4e5
        constexpr static inline std::string_view ComputerMouse{ "\xef\xa3\x8c" };                      // U+f8cc
        constexpr static inline std::string_view Cookie{ "\xef\x95\xa3" };                             // U+f563
        constexpr static inline std::string_view CookieBite{ "\xef\x95\xa4" };                         // U+f564
        constexpr static inline std::string_view Copy{ "\xef\x83\x85" };                               // U+f0c5
        constexpr static inline std::string_view Copyright{ "\xef\x87\xb9" };                          // U+f1f9
        constexpr static inline std::string_view Couch{ "\xef\x92\xb8" };                              // U+f4b8
        constexpr static inline std::string_view Cow{ "\xef\x9b\x88" };                                // U+f6c8
        constexpr static inline std::string_view CreditCard{ "\xef\x82\x9d" };                         // U+f09d
        constexpr static inline std::string_view Crop{ "\xef\x84\xa5" };                               // U+f125
        constexpr static inline std::string_view CropSimple{ "\xef\x95\xa5" };                         // U+f565
        constexpr static inline std::string_view Cross{ "\xef\x99\x94" };                              // U+f654
        constexpr static inline std::string_view Crosshairs{ "\xef\x81\x9b" };                         // U+f05b
        constexpr static inline std::string_view Crow{ "\xef\x94\xa0" };                               // U+f520
        constexpr static inline std::string_view Crown{ "\xef\x94\xa1" };                              // U+f521
        constexpr static inline std::string_view Crutch{ "\xef\x9f\xb7" };                             // U+f7f7
        constexpr static inline std::string_view CruzeiroSign{ "\xee\x85\x92" };                       // U+e152
        constexpr static inline std::string_view Cube{ "\xef\x86\xb2" };                               // U+f1b2
        constexpr static inline std::string_view Cubes{ "\xef\x86\xb3" };                              // U+f1b3
        constexpr static inline std::string_view CubesStacked{ "\xee\x93\xa6" };                       // U+e4e6
        constexpr static inline std::string_view D{ "D" };                                             // U+0044
        constexpr static inline std::string_view Database{ "\xef\x87\x80" };                           // U+f1c0
        constexpr static inline std::string_view DeleteLeft{ "\xef\x95\x9a" };                         // U+f55a
        constexpr static inline std::string_view Democrat{ "\xef\x9d\x87" };                           // U+f747
        constexpr static inline std::string_view Desktop{ "\xef\x8e\x90" };                            // U+f390
        constexpr static inline std::string_view Dharmachakra{ "\xef\x99\x95" };                       // U+f655
        constexpr static inline std::string_view DiagramNext{ "\xee\x91\xb6" };                        // U+e476
        constexpr static inline std::string_view DiagramPredecessor{ "\xee\x91\xb7" };                 // U+e477
        constexpr static inline std::string_view DiagramProject{ "\xef\x95\x82" };                     // U+f542
        constexpr static inline std::string_view DiagramSuccessor{ "\xee\x91\xba" };                   // U+e47a
        constexpr static inline std::string_view Diamond{ "\xef\x88\x99" };                            // U+f219
        constexpr static inline std::string_view DiamondTurnRight{ "\xef\x97\xab" };                   // U+f5eb
        constexpr static inline std::string_view Dice{ "\xef\x94\xa2" };                               // U+f522
        constexpr static inline std::string_view DiceD20{ "\xef\x9b\x8f" };                            // U+f6cf
        constexpr static inline std::string_view DiceD6{ "\xef\x9b\x91" };                             // U+f6d1
        constexpr static inline std::string_view DiceFive{ "\xef\x94\xa3" };                           // U+f523
        constexpr static inline std::string_view DiceFour{ "\xef\x94\xa4" };                           // U+f524
        constexpr static inline std::string_view DiceOne{ "\xef\x94\xa5" };                            // U+f525
        constexpr static inline std::string_view DiceSix{ "\xef\x94\xa6" };                            // U+f526
        constexpr static inline std::string_view DiceThree{ "\xef\x94\xa7" };                          // U+f527
        constexpr static inline std::string_view DiceTwo{ "\xef\x94\xa8" };                            // U+f528
        constexpr static inline std::string_view Disease{ "\xef\x9f\xba" };                            // U+f7fa
        constexpr static inline std::string_view Display{ "\xee\x85\xa3" };                            // U+e163
        constexpr static inline std::string_view Divide{ "\xef\x94\xa9" };                             // U+f529
        constexpr static inline std::string_view Dna{ "\xef\x91\xb1" };                                // U+f471
        constexpr static inline std::string_view Dog{ "\xef\x9b\x93" };                                // U+f6d3
        constexpr static inline std::string_view DollarSign{ "$" };                                    // U+0024
        constexpr static inline std::string_view Dolly{ "\xef\x91\xb2" };                              // U+f472
        constexpr static inline std::string_view DongSign{ "\xee\x85\xa9" };                           // U+e169
        constexpr static inline std::string_view DoorClosed{ "\xef\x94\xaa" };                         // U+f52a
        constexpr static inline std::string_view DoorOpen{ "\xef\x94\xab" };                           // U+f52b
        constexpr static inline std::string_view Dove{ "\xef\x92\xba" };                               // U+f4ba
        constexpr static inline std::string_view DownLeftAndUpRightToCenter{ "\xef\x90\xa2" };         // U+f422
        constexpr static inline std::string_view DownLong{ "\xef\x8c\x89" };                           // U+f309
        constexpr static inline std::string_view Download{ "\xef\x80\x99" };                           // U+f019
        constexpr static inline std::string_view Dragon{ "\xef\x9b\x95" };                             // U+f6d5
        constexpr static inline std::string_view DrawPolygon{ "\xef\x97\xae" };                        // U+f5ee
        constexpr static inline std::string_view Droplet{ "\xef\x81\x83" };                            // U+f043
        constexpr static inline std::string_view DropletSlash{ "\xef\x97\x87" };                       // U+f5c7
        constexpr static inline std::string_view Drum{ "\xef\x95\xa9" };                               // U+f569
        constexpr static inline std::string_view DrumSteelpan{ "\xef\x95\xaa" };                       // U+f56a
        constexpr static inline std::string_view DrumstickBite{ "\xef\x9b\x97" };                      // U+f6d7
        constexpr static inline std::string_view Dumbbell{ "\xef\x91\x8b" };                           // U+f44b
        constexpr static inline std::string_view Dumpster{ "\xef\x9e\x93" };                           // U+f793
        constexpr static inline std::string_view DumpsterFire{ "\xef\x9e\x94" };                       // U+f794
        constexpr static inline std::string_view Dungeon{ "\xef\x9b\x99" };                            // U+f6d9
        constexpr static inline std::string_view E{ "E" };                                             // U+0045
        constexpr static inline std::string_view EarDeaf{ "\xef\x8a\xa4" };                            // U+f2a4
        constexpr static inline std::string_view EarListen{ "\xef\x8a\xa2" };                          // U+f2a2
        constexpr static inline std::string_view EarthAfrica{ "\xef\x95\xbc" };                        // U+f57c
        constexpr static inline std::string_view EarthAmericas{ "\xef\x95\xbd" };                      // U+f57d
        constexpr static inline std::string_view EarthAsia{ "\xef\x95\xbe" };                          // U+f57e
        constexpr static inline std::string_view EarthEurope{ "\xef\x9e\xa2" };                        // U+f7a2
        constexpr static inline std::string_view EarthOceania{ "\xee\x91\xbb" };                       // U+e47b
        constexpr static inline std::string_view Egg{ "\xef\x9f\xbb" };                                // U+f7fb
        constexpr static inline std::string_view Eject{ "\xef\x81\x92" };                              // U+f052
        constexpr static inline std::string_view Elevator{ "\xee\x85\xad" };                           // U+e16d
        constexpr static inline std::string_view Ellipsis{ "\xef\x85\x81" };                           // U+f141
        constexpr static inline std::string_view EllipsisVertical{ "\xef\x85\x82" };                   // U+f142
        constexpr static inline std::string_view Envelope{ "\xef\x83\xa0" };                           // U+f0e0
        constexpr static inline std::string_view EnvelopeCircleCheck{ "\xee\x93\xa8" };                // U+e4e8
        constexpr static inline std::string_view EnvelopeOpen{ "\xef\x8a\xb6" };                       // U+f2b6
        constexpr static inline std::string_view EnvelopeOpenText{ "\xef\x99\x98" };                   // U+f658
        constexpr static inline std::string_view EnvelopesBulk{ "\xef\x99\xb4" };                      // U+f674
        constexpr static inline std::string_view Equals{ "=" };                                        // U+003d
        constexpr static inline std::string_view Eraser{ "\xef\x84\xad" };                             // U+f12d
        constexpr static inline std::string_view Ethernet{ "\xef\x9e\x96" };                           // U+f796
        constexpr static inline std::string_view EuroSign{ "\xef\x85\x93" };                           // U+f153
        constexpr static inline std::string_view Exclamation{ "!" };                                   // U+0021
        constexpr static inline std::string_view Expand{ "\xef\x81\xa5" };                             // U+f065
        constexpr static inline std::string_view Explosion{ "\xee\x93\xa9" };                          // U+e4e9
        constexpr static inline std::string_view Eye{ "\xef\x81\xae" };                                // U+f06e
        constexpr static inline std::string_view EyeDropper{ "\xef\x87\xbb" };                         // U+f1fb
        constexpr static inline std::string_view EyeLowVision{ "\xef\x8a\xa8" };                       // U+f2a8
        constexpr static inline std::string_view EyeSlash{ "\xef\x81\xb0" };                           // U+f070
        constexpr static inline std::string_view F{ "F" };                                             // U+0046
        constexpr static inline std::string_view FaceAngry{ "\xef\x95\x96" };                          // U+f556
        constexpr static inline std::string_view FaceDizzy{ "\xef\x95\xa7" };                          // U+f567
        constexpr static inline std::string_view FaceFlushed{ "\xef\x95\xb9" };                        // U+f579
        constexpr static inline std::string_view FaceFrown{ "\xef\x84\x99" };                          // U+f119
        constexpr static inline std::string_view FaceFrownOpen{ "\xef\x95\xba" };                      // U+f57a
        constexpr static inline std::string_view FaceGrimace{ "\xef\x95\xbf" };                        // U+f57f
        constexpr static inline std::string_view FaceGrin{ "\xef\x96\x80" };                           // U+f580
        constexpr static inline std::string_view FaceGrinBeam{ "\xef\x96\x82" };                       // U+f582
        constexpr static inline std::string_view FaceGrinBeamSweat{ "\xef\x96\x83" };                  // U+f583
        constexpr static inline std::string_view FaceGrinHearts{ "\xef\x96\x84" };                     // U+f584
        constexpr static inline std::string_view FaceGrinSquint{ "\xef\x96\x85" };                     // U+f585
        constexpr static inline std::string_view FaceGrinSquintTears{ "\xef\x96\x86" };                // U+f586
        constexpr static inline std::string_view FaceGrinStars{ "\xef\x96\x87" };                      // U+f587
        constexpr static inline std::string_view FaceGrinTears{ "\xef\x96\x88" };                      // U+f588
        constexpr static inline std::string_view FaceGrinTongue{ "\xef\x96\x89" };                     // U+f589
        constexpr static inline std::string_view FaceGrinTongueSquint{ "\xef\x96\x8a" };               // U+f58a
        constexpr static inline std::string_view FaceGrinTongueWink{ "\xef\x96\x8b" };                 // U+f58b
        constexpr static inline std::string_view FaceGrinWide{ "\xef\x96\x81" };                       // U+f581
        constexpr static inline std::string_view FaceGrinWink{ "\xef\x96\x8c" };                       // U+f58c
        constexpr static inline std::string_view FaceKiss{ "\xef\x96\x96" };                           // U+f596
        constexpr static inline std::string_view FaceKissBeam{ "\xef\x96\x97" };                       // U+f597
        constexpr static inline std::string_view FaceKissWinkHeart{ "\xef\x96\x98" };                  // U+f598
        constexpr static inline std::string_view FaceLaugh{ "\xef\x96\x99" };                          // U+f599
        constexpr static inline std::string_view FaceLaughBeam{ "\xef\x96\x9a" };                      // U+f59a
        constexpr static inline std::string_view FaceLaughSquint{ "\xef\x96\x9b" };                    // U+f59b
        constexpr static inline std::string_view FaceLaughWink{ "\xef\x96\x9c" };                      // U+f59c
        constexpr static inline std::string_view FaceMeh{ "\xef\x84\x9a" };                            // U+f11a
        constexpr static inline std::string_view FaceMehBlank{ "\xef\x96\xa4" };                       // U+f5a4
        constexpr static inline std::string_view FaceRollingEyes{ "\xef\x96\xa5" };                    // U+f5a5
        constexpr static inline std::string_view FaceSadCry{ "\xef\x96\xb3" };                         // U+f5b3
        constexpr static inline std::string_view FaceSadTear{ "\xef\x96\xb4" };                        // U+f5b4
        constexpr static inline std::string_view FaceSmile{ "\xef\x84\x98" };                          // U+f118
        constexpr static inline std::string_view FaceSmileBeam{ "\xef\x96\xb8" };                      // U+f5b8
        constexpr static inline std::string_view FaceSmileWink{ "\xef\x93\x9a" };                      // U+f4da
        constexpr static inline std::string_view FaceSurprise{ "\xef\x97\x82" };                       // U+f5c2
        constexpr static inline std::string_view FaceTired{ "\xef\x97\x88" };                          // U+f5c8
        constexpr static inline std::string_view Fan{ "\xef\xa1\xa3" };                                // U+f863
        constexpr static inline std::string_view Faucet{ "\xee\x80\x85" };                             // U+e005
        constexpr static inline std::string_view FaucetDrip{ "\xee\x80\x86" };                         // U+e006
        constexpr static inline std::string_view Fax{ "\xef\x86\xac" };                                // U+f1ac
        constexpr static inline std::string_view Feather{ "\xef\x94\xad" };                            // U+f52d
        constexpr static inline std::string_view FeatherPointed{ "\xef\x95\xab" };                     // U+f56b
        constexpr static inline std::string_view Ferry{ "\xee\x93\xaa" };                              // U+e4ea
        constexpr static inline std::string_view File{ "\xef\x85\x9b" };                               // U+f15b
        constexpr static inline std::string_view FileArrowDown{ "\xef\x95\xad" };                      // U+f56d
        constexpr static inline std::string_view FileArrowUp{ "\xef\x95\xb4" };                        // U+f574
        constexpr static inline std::string_view FileAudio{ "\xef\x87\x87" };                          // U+f1c7
        constexpr static inline std::string_view FileCircleCheck{ "\xee\x96\xa0" };                    // U+e5a0
        constexpr static inline std::string_view FileCircleExclamation{ "\xee\x93\xab" };              // U+e4eb
        constexpr static inline std::string_view FileCircleMinus{ "\xee\x93\xad" };                    // U+e4ed
        constexpr static inline std::string_view FileCirclePlus{ "\xee\x92\x94" };                     // U+e494
        constexpr static inline std::string_view FileCircleQuestion{ "\xee\x93\xaf" };                 // U+e4ef
        constexpr static inline std::string_view FileCircleXmark{ "\xee\x96\xa1" };                    // U+e5a1
        constexpr static inline std::string_view FileCode{ "\xef\x87\x89" };                           // U+f1c9
        constexpr static inline std::string_view FileContract{ "\xef\x95\xac" };                       // U+f56c
        constexpr static inline std::string_view FileCsv{ "\xef\x9b\x9d" };                            // U+f6dd
        constexpr static inline std::string_view FileExcel{ "\xef\x87\x83" };                          // U+f1c3
        constexpr static inline std::string_view FileExport{ "\xef\x95\xae" };                         // U+f56e
        constexpr static inline std::string_view FileImage{ "\xef\x87\x85" };                          // U+f1c5
        constexpr static inline std::string_view FileImport{ "\xef\x95\xaf" };                         // U+f56f
        constexpr static inline std::string_view FileInvoice{ "\xef\x95\xb0" };                        // U+f570
        constexpr static inline std::string_view FileInvoiceDollar{ "\xef\x95\xb1" };                  // U+f571
        constexpr static inline std::string_view FileLines{ "\xef\x85\x9c" };                          // U+f15c
        constexpr static inline std::string_view FileMedical{ "\xef\x91\xb7" };                        // U+f477
        constexpr static inline std::string_view FilePdf{ "\xef\x87\x81" };                            // U+f1c1
        constexpr static inline std::string_view FilePen{ "\xef\x8c\x9c" };                            // U+f31c
        constexpr static inline std::string_view FilePowerpoint{ "\xef\x87\x84" };                     // U+f1c4
        constexpr static inline std::string_view FilePrescription{ "\xef\x95\xb2" };                   // U+f572
        constexpr static inline std::string_view FileShield{ "\xee\x93\xb0" };                         // U+e4f0
        constexpr static inline std::string_view FileSignature{ "\xef\x95\xb3" };                      // U+f573
        constexpr static inline std::string_view FileVideo{ "\xef\x87\x88" };                          // U+f1c8
        constexpr static inline std::string_view FileWaveform{ "\xef\x91\xb8" };                       // U+f478
        constexpr static inline std::string_view FileWord{ "\xef\x87\x82" };                           // U+f1c2
        constexpr static inline std::string_view FileZipper{ "\xef\x87\x86" };                         // U+f1c6
        constexpr static inline std::string_view Fill{ "\xef\x95\xb5" };                               // U+f575
        constexpr static inline std::string_view FillDrip{ "\xef\x95\xb6" };                           // U+f576
        constexpr static inline std::string_view Film{ "\xef\x80\x88" };                               // U+f008
        constexpr static inline std::string_view Filter{ "\xef\x82\xb0" };                             // U+f0b0
        constexpr static inline std::string_view FilterCircleDollar{ "\xef\x99\xa2" };                 // U+f662
        constexpr static inline std::string_view FilterCircleXmark{ "\xee\x85\xbb" };                  // U+e17b
        constexpr static inline std::string_view Fingerprint{ "\xef\x95\xb7" };                        // U+f577
        constexpr static inline std::string_view Fire{ "\xef\x81\xad" };                               // U+f06d
        constexpr static inline std::string_view FireBurner{ "\xee\x93\xb1" };                         // U+e4f1
        constexpr static inline std::string_view FireExtinguisher{ "\xef\x84\xb4" };                   // U+f134
        constexpr static inline std::string_view FireFlameCurved{ "\xef\x9f\xa4" };                    // U+f7e4
        constexpr static inline std::string_view FireFlameSimple{ "\xef\x91\xaa" };                    // U+f46a
        constexpr static inline std::string_view Fish{ "\xef\x95\xb8" };                               // U+f578
        constexpr static inline std::string_view FishFins{ "\xee\x93\xb2" };                           // U+e4f2
        constexpr static inline std::string_view Flag{ "\xef\x80\xa4" };                               // U+f024
        constexpr static inline std::string_view FlagCheckered{ "\xef\x84\x9e" };                      // U+f11e
        constexpr static inline std::string_view FlagUsa{ "\xef\x9d\x8d" };                            // U+f74d
        constexpr static inline std::string_view Flask{ "\xef\x83\x83" };                              // U+f0c3
        constexpr static inline std::string_view FlaskVial{ "\xee\x93\xb3" };                          // U+e4f3
        constexpr static inline std::string_view FloppyDisk{ "\xef\x83\x87" };                         // U+f0c7
        constexpr static inline std::string_view FlorinSign{ "\xee\x86\x84" };                         // U+e184
        constexpr static inline std::string_view Folder{ "\xef\x81\xbb" };                             // U+f07b
        constexpr static inline std::string_view FolderClosed{ "\xee\x86\x85" };                       // U+e185
        constexpr static inline std::string_view FolderMinus{ "\xef\x99\x9d" };                        // U+f65d
        constexpr static inline std::string_view FolderOpen{ "\xef\x81\xbc" };                         // U+f07c
        constexpr static inline std::string_view FolderPlus{ "\xef\x99\x9e" };                         // U+f65e
        constexpr static inline std::string_view FolderTree{ "\xef\xa0\x82" };                         // U+f802
        constexpr static inline std::string_view Font{ "\xef\x80\xb1" };                               // U+f031
        constexpr static inline std::string_view FontAwesome{ "\xef\x8a\xb4" };                        // U+f2b4
        constexpr static inline std::string_view Football{ "\xef\x91\x8e" };                           // U+f44e
        constexpr static inline std::string_view Forward{ "\xef\x81\x8e" };                            // U+f04e
        constexpr static inline std::string_view ForwardFast{ "\xef\x81\x90" };                        // U+f050
        constexpr static inline std::string_view ForwardStep{ "\xef\x81\x91" };                        // U+f051
        constexpr static inline std::string_view FrancSign{ "\xee\x86\x8f" };                          // U+e18f
        constexpr static inline std::string_view Frog{ "\xef\x94\xae" };                               // U+f52e
        constexpr static inline std::string_view Futbol{ "\xef\x87\xa3" };                             // U+f1e3
        constexpr static inline std::string_view G{ "G" };                                             // U+0047
        constexpr static inline std::string_view Gamepad{ "\xef\x84\x9b" };                            // U+f11b
        constexpr static inline std::string_view GasPump{ "\xef\x94\xaf" };                            // U+f52f
        constexpr static inline std::string_view Gauge{ "\xef\x98\xa4" };                              // U+f624
        constexpr static inline std::string_view GaugeHigh{ "\xef\x98\xa5" };                          // U+f625
        constexpr static inline std::string_view GaugeSimple{ "\xef\x98\xa9" };                        // U+f629
        constexpr static inline std::string_view GaugeSimpleHigh{ "\xef\x98\xaa" };                    // U+f62a
        constexpr static inline std::string_view Gavel{ "\xef\x83\xa3" };                              // U+f0e3
        constexpr static inline std::string_view Gear{ "\xef\x80\x93" };                               // U+f013
        constexpr static inline std::string_view Gears{ "\xef\x82\x85" };                              // U+f085
        constexpr static inline std::string_view Gem{ "\xef\x8e\xa5" };                                // U+f3a5
        constexpr static inline std::string_view Genderless{ "\xef\x88\xad" };                         // U+f22d
        constexpr static inline std::string_view Ghost{ "\xef\x9b\xa2" };                              // U+f6e2
        constexpr static inline std::string_view Gift{ "\xef\x81\xab" };                               // U+f06b
        constexpr static inline std::string_view Gifts{ "\xef\x9e\x9c" };                              // U+f79c
        constexpr static inline std::string_view GlassWater{ "\xee\x93\xb4" };                         // U+e4f4
        constexpr static inline std::string_view GlassWaterDroplet{ "\xee\x93\xb5" };                  // U+e4f5
        constexpr static inline std::string_view Glasses{ "\xef\x94\xb0" };                            // U+f530
        constexpr static inline std::string_view Globe{ "\xef\x82\xac" };                              // U+f0ac
        constexpr static inline std::string_view GolfBallTee{ "\xef\x91\x90" };                        // U+f450
        constexpr static inline std::string_view Gopuram{ "\xef\x99\xa4" };                            // U+f664
        constexpr static inline std::string_view GraduationCap{ "\xef\x86\x9d" };                      // U+f19d
        constexpr static inline std::string_view GreaterThan{ ">" };                                   // U+003e
        constexpr static inline std::string_view GreaterThanEqual{ "\xef\x94\xb2" };                   // U+f532
        constexpr static inline std::string_view Grip{ "\xef\x96\x8d" };                               // U+f58d
        constexpr static inline std::string_view GripLines{ "\xef\x9e\xa4" };                          // U+f7a4
        constexpr static inline std::string_view GripLinesVertical{ "\xef\x9e\xa5" };                  // U+f7a5
        constexpr static inline std::string_view GripVertical{ "\xef\x96\x8e" };                       // U+f58e
        constexpr static inline std::string_view GroupArrowsRotate{ "\xee\x93\xb6" };                  // U+e4f6
        constexpr static inline std::string_view GuaraniSign{ "\xee\x86\x9a" };                        // U+e19a
        constexpr static inline std::string_view Guitar{ "\xef\x9e\xa6" };                             // U+f7a6
        constexpr static inline std::string_view Gun{ "\xee\x86\x9b" };                                // U+e19b
        constexpr static inline std::string_view H{ "H" };                                             // U+0048
        constexpr static inline std::string_view Hammer{ "\xef\x9b\xa3" };                             // U+f6e3
        constexpr static inline std::string_view Hamsa{ "\xef\x99\xa5" };                              // U+f665
        constexpr static inline std::string_view Hand{ "\xef\x89\x96" };                               // U+f256
        constexpr static inline std::string_view HandBackFist{ "\xef\x89\x95" };                       // U+f255
        constexpr static inline std::string_view HandDots{ "\xef\x91\xa1" };                           // U+f461
        constexpr static inline std::string_view HandFist{ "\xef\x9b\x9e" };                           // U+f6de
        constexpr static inline std::string_view HandHolding{ "\xef\x92\xbd" };                        // U+f4bd
        constexpr static inline std::string_view HandHoldingDollar{ "\xef\x93\x80" };                  // U+f4c0
        constexpr static inline std::string_view HandHoldingDroplet{ "\xef\x93\x81" };                 // U+f4c1
        constexpr static inline std::string_view HandHoldingHand{ "\xee\x93\xb7" };                    // U+e4f7
        constexpr static inline std::string_view HandHoldingHeart{ "\xef\x92\xbe" };                   // U+f4be
        constexpr static inline std::string_view HandHoldingMedical{ "\xee\x81\x9c" };                 // U+e05c
        constexpr static inline std::string_view HandLizard{ "\xef\x89\x98" };                         // U+f258
        constexpr static inline std::string_view HandMiddleFinger{ "\xef\xa0\x86" };                   // U+f806
        constexpr static inline std::string_view HandPeace{ "\xef\x89\x9b" };                          // U+f25b
        constexpr static inline std::string_view HandPointDown{ "\xef\x82\xa7" };                      // U+f0a7
        constexpr static inline std::string_view HandPointLeft{ "\xef\x82\xa5" };                      // U+f0a5
        constexpr static inline std::string_view HandPointRight{ "\xef\x82\xa4" };                     // U+f0a4
        constexpr static inline std::string_view HandPointUp{ "\xef\x82\xa6" };                        // U+f0a6
        constexpr static inline std::string_view HandPointer{ "\xef\x89\x9a" };                        // U+f25a
        constexpr static inline std::string_view HandScissors{ "\xef\x89\x97" };                       // U+f257
        constexpr static inline std::string_view HandSparkles{ "\xee\x81\x9d" };                       // U+e05d
        constexpr static inline std::string_view HandSpock{ "\xef\x89\x99" };                          // U+f259
        constexpr static inline std::string_view Handcuffs{ "\xee\x93\xb8" };                          // U+e4f8
        constexpr static inline std::string_view Hands{ "\xef\x8a\xa7" };                              // U+f2a7
        constexpr static inline std::string_view HandsAslInterpreting{ "\xef\x8a\xa3" };               // U+f2a3
        constexpr static inline std::string_view HandsBound{ "\xee\x93\xb9" };                         // U+e4f9
        constexpr static inline std::string_view HandsBubbles{ "\xee\x81\x9e" };                       // U+e05e
        constexpr static inline std::string_view HandsClapping{ "\xee\x86\xa8" };                      // U+e1a8
        constexpr static inline std::string_view HandsHolding{ "\xef\x93\x82" };                       // U+f4c2
        constexpr static inline std::string_view HandsHoldingChild{ "\xee\x93\xba" };                  // U+e4fa
        constexpr static inline std::string_view HandsHoldingCircle{ "\xee\x93\xbb" };                 // U+e4fb
        constexpr static inline std::string_view HandsPraying{ "\xef\x9a\x84" };                       // U+f684
        constexpr static inline std::string_view Handshake{ "\xef\x8a\xb5" };                          // U+f2b5
        constexpr static inline std::string_view HandshakeAngle{ "\xef\x93\x84" };                     // U+f4c4
        constexpr static inline std::string_view HandshakeSimple{ "\xef\x93\x86" };                    // U+f4c6
        constexpr static inline std::string_view HandshakeSimpleSlash{ "\xee\x81\x9f" };               // U+e05f
        constexpr static inline std::string_view HandshakeSlash{ "\xee\x81\xa0" };                     // U+e060
        constexpr static inline std::string_view Hanukiah{ "\xef\x9b\xa6" };                           // U+f6e6
        constexpr static inline std::string_view HardDrive{ "\xef\x82\xa0" };                          // U+f0a0
        constexpr static inline std::string_view Hashtag{ "#" };                                       // U+0023
        constexpr static inline std::string_view HatCowboy{ "\xef\xa3\x80" };                          // U+f8c0
        constexpr static inline std::string_view HatCowboySide{ "\xef\xa3\x81" };                      // U+f8c1
        constexpr static inline std::string_view HatWizard{ "\xef\x9b\xa8" };                          // U+f6e8
        constexpr static inline std::string_view HeadSideCough{ "\xee\x81\xa1" };                      // U+e061
        constexpr static inline std::string_view HeadSideCoughSlash{ "\xee\x81\xa2" };                 // U+e062
        constexpr static inline std::string_view HeadSideMask{ "\xee\x81\xa3" };                       // U+e063
        constexpr static inline std::string_view HeadSideVirus{ "\xee\x81\xa4" };                      // U+e064
        constexpr static inline std::string_view Heading{ "\xef\x87\x9c" };                            // U+f1dc
        constexpr static inline std::string_view Headphones{ "\xef\x80\xa5" };                         // U+f025
        constexpr static inline std::string_view HeadphonesSimple{ "\xef\x96\x8f" };                   // U+f58f
        constexpr static inline std::string_view Headset{ "\xef\x96\x90" };                            // U+f590
        constexpr static inline std::string_view Heart{ "\xef\x80\x84" };                              // U+f004
        constexpr static inline std::string_view HeartCircleBolt{ "\xee\x93\xbc" };                    // U+e4fc
        constexpr static inline std::string_view HeartCircleCheck{ "\xee\x93\xbd" };                   // U+e4fd
        constexpr static inline std::string_view HeartCircleExclamation{ "\xee\x93\xbe" };             // U+e4fe
        constexpr static inline std::string_view HeartCircleMinus{ "\xee\x93\xbf" };                   // U+e4ff
        constexpr static inline std::string_view HeartCirclePlus{ "\xee\x94\x80" };                    // U+e500
        constexpr static inline std::string_view HeartCircleXmark{ "\xee\x94\x81" };                   // U+e501
        constexpr static inline std::string_view HeartCrack{ "\xef\x9e\xa9" };                         // U+f7a9
        constexpr static inline std::string_view HeartPulse{ "\xef\x88\x9e" };                         // U+f21e
        constexpr static inline std::string_view Helicopter{ "\xef\x94\xb3" };                         // U+f533
        constexpr static inline std::string_view HelicopterSymbol{ "\xee\x94\x82" };                   // U+e502
        constexpr static inline std::string_view HelmetSafety{ "\xef\xa0\x87" };                       // U+f807
        constexpr static inline std::string_view HelmetUn{ "\xee\x94\x83" };                           // U+e503
        constexpr static inline std::string_view Highlighter{ "\xef\x96\x91" };                        // U+f591
        constexpr static inline std::string_view HillAvalanche{ "\xee\x94\x87" };                      // U+e507
        constexpr static inline std::string_view HillRockslide{ "\xee\x94\x88" };                      // U+e508
        constexpr static inline std::string_view Hippo{ "\xef\x9b\xad" };                              // U+f6ed
        constexpr static inline std::string_view HockeyPuck{ "\xef\x91\x93" };                         // U+f453
        constexpr static inline std::string_view HollyBerry{ "\xef\x9e\xaa" };                         // U+f7aa
        constexpr static inline std::string_view Horse{ "\xef\x9b\xb0" };                              // U+f6f0
        constexpr static inline std::string_view HorseHead{ "\xef\x9e\xab" };                          // U+f7ab
        constexpr static inline std::string_view Hospital{ "\xef\x83\xb8" };                           // U+f0f8
        constexpr static inline std::string_view HospitalUser{ "\xef\xa0\x8d" };                       // U+f80d
        constexpr static inline std::string_view HotTubPerson{ "\xef\x96\x93" };                       // U+f593
        constexpr static inline std::string_view Hotdog{ "\xef\xa0\x8f" };                             // U+f80f
        constexpr static inline std::string_view Hotel{ "\xef\x96\x94" };                              // U+f594
        constexpr static inline std::string_view Hourglass{ "\xef\x89\x94" };                          // U+f254
        constexpr static inline std::string_view HourglassEnd{ "\xef\x89\x93" };                       // U+f253
        constexpr static inline std::string_view HourglassHalf{ "\xef\x89\x92" };                      // U+f252
        constexpr static inline std::string_view HourglassStart{ "\xef\x89\x91" };                     // U+f251
        constexpr static inline std::string_view House{ "\xef\x80\x95" };                              // U+f015
        constexpr static inline std::string_view HouseChimney{ "\xee\x8e\xaf" };                       // U+e3af
        constexpr static inline std::string_view HouseChimneyCrack{ "\xef\x9b\xb1" };                  // U+f6f1
        constexpr static inline std::string_view HouseChimneyMedical{ "\xef\x9f\xb2" };                // U+f7f2
        constexpr static inline std::string_view HouseChimneyUser{ "\xee\x81\xa5" };                   // U+e065
        constexpr static inline std::string_view HouseChimneyWindow{ "\xee\x80\x8d" };                 // U+e00d
        constexpr static inline std::string_view HouseCircleCheck{ "\xee\x94\x89" };                   // U+e509
        constexpr static inline std::string_view HouseCircleExclamation{ "\xee\x94\x8a" };             // U+e50a
        constexpr static inline std::string_view HouseCircleXmark{ "\xee\x94\x8b" };                   // U+e50b
        constexpr static inline std::string_view HouseCrack{ "\xee\x8e\xb1" };                         // U+e3b1
        constexpr static inline std::string_view HouseFire{ "\xee\x94\x8c" };                          // U+e50c
        constexpr static inline std::string_view HouseFlag{ "\xee\x94\x8d" };                          // U+e50d
        constexpr static inline std::string_view HouseFloodWater{ "\xee\x94\x8e" };                    // U+e50e
        constexpr static inline std::string_view HouseFloodWaterCircleArrowRight{ "\xee\x94\x8f" };    // U+e50f
        constexpr static inline std::string_view HouseLaptop{ "\xee\x81\xa6" };                        // U+e066
        constexpr static inline std::string_view HouseLock{ "\xee\x94\x90" };                          // U+e510
        constexpr static inline std::string_view HouseMedical{ "\xee\x8e\xb2" };                       // U+e3b2
        constexpr static inline std::string_view HouseMedicalCircleCheck{ "\xee\x94\x91" };            // U+e511
        constexpr static inline std::string_view HouseMedicalCircleExclamation{ "\xee\x94\x92" };      // U+e512
        constexpr static inline std::string_view HouseMedicalCircleXmark{ "\xee\x94\x93" };            // U+e513
        constexpr static inline std::string_view HouseMedicalFlag{ "\xee\x94\x94" };                   // U+e514
        constexpr static inline std::string_view HouseSignal{ "\xee\x80\x92" };                        // U+e012
        constexpr static inline std::string_view HouseTsunami{ "\xee\x94\x95" };                       // U+e515
        constexpr static inline std::string_view HouseUser{ "\xee\x86\xb0" };                          // U+e1b0
        constexpr static inline std::string_view HryvniaSign{ "\xef\x9b\xb2" };                        // U+f6f2
        constexpr static inline std::string_view Hurricane{ "\xef\x9d\x91" };                          // U+f751
        constexpr static inline std::string_view I{ "I" };                                             // U+0049
        constexpr static inline std::string_view ICursor{ "\xef\x89\x86" };                            // U+f246
        constexpr static inline std::string_view IceCream{ "\xef\xa0\x90" };                           // U+f810
        constexpr static inline std::string_view Icicles{ "\xef\x9e\xad" };                            // U+f7ad
        constexpr static inline std::string_view Icons{ "\xef\xa1\xad" };                              // U+f86d
        constexpr static inline std::string_view IdBadge{ "\xef\x8b\x81" };                            // U+f2c1
        constexpr static inline std::string_view IdCard{ "\xef\x8b\x82" };                             // U+f2c2
        constexpr static inline std::string_view IdCardClip{ "\xef\x91\xbf" };                         // U+f47f
        constexpr static inline std::string_view Igloo{ "\xef\x9e\xae" };                              // U+f7ae
        constexpr static inline std::string_view Image{ "\xef\x80\xbe" };                              // U+f03e
        constexpr static inline std::string_view ImagePortrait{ "\xef\x8f\xa0" };                      // U+f3e0
        constexpr static inline std::string_view Images{ "\xef\x8c\x82" };                             // U+f302
        constexpr static inline std::string_view Inbox{ "\xef\x80\x9c" };                              // U+f01c
        constexpr static inline std::string_view Indent{ "\xef\x80\xbc" };                             // U+f03c
        constexpr static inline std::string_view IndianRupeeSign{ "\xee\x86\xbc" };                    // U+e1bc
        constexpr static inline std::string_view Industry{ "\xef\x89\xb5" };                           // U+f275
        constexpr static inline std::string_view Infinity{ "\xef\x94\xb4" };                           // U+f534
        constexpr static inline std::string_view Info{ "\xef\x84\xa9" };                               // U+f129
        constexpr static inline std::string_view Italic{ "\xef\x80\xb3" };                             // U+f033
        constexpr static inline std::string_view J{ "J" };                                             // U+004a
        constexpr static inline std::string_view Jar{ "\xee\x94\x96" };                                // U+e516
        constexpr static inline std::string_view JarWheat{ "\xee\x94\x97" };                           // U+e517
        constexpr static inline std::string_view Jedi{ "\xef\x99\xa9" };                               // U+f669
        constexpr static inline std::string_view JetFighter{ "\xef\x83\xbb" };                         // U+f0fb
        constexpr static inline std::string_view JetFighterUp{ "\xee\x94\x98" };                       // U+e518
        constexpr static inline std::string_view Joint{ "\xef\x96\x95" };                              // U+f595
        constexpr static inline std::string_view JugDetergent{ "\xee\x94\x99" };                       // U+e519
        constexpr static inline std::string_view K{ "K" };                                             // U+004b
        constexpr static inline std::string_view Kaaba{ "\xef\x99\xab" };                              // U+f66b
        constexpr static inline std::string_view Key{ "\xef\x82\x84" };                                // U+f084
        constexpr static inline std::string_view Keyboard{ "\xef\x84\x9c" };                           // U+f11c
        constexpr static inline std::string_view Khanda{ "\xef\x99\xad" };                             // U+f66d
        constexpr static inline std::string_view KipSign{ "\xee\x87\x84" };                            // U+e1c4
        constexpr static inline std::string_view KitMedical{ "\xef\x91\xb9" };                         // U+f479
        constexpr static inline std::string_view KitchenSet{ "\xee\x94\x9a" };                         // U+e51a
        constexpr static inline std::string_view KiwiBird{ "\xef\x94\xb5" };                           // U+f535
        constexpr static inline std::string_view L{ "L" };                                             // U+004c
        constexpr static inline std::string_view LandMineOn{ "\xee\x94\x9b" };                         // U+e51b
        constexpr static inline std::string_view Landmark{ "\xef\x99\xaf" };                           // U+f66f
        constexpr static inline std::string_view LandmarkDome{ "\xef\x9d\x92" };                       // U+f752
        constexpr static inline std::string_view LandmarkFlag{ "\xee\x94\x9c" };                       // U+e51c
        constexpr static inline std::string_view Language{ "\xef\x86\xab" };                           // U+f1ab
        constexpr static inline std::string_view Laptop{ "\xef\x84\x89" };                             // U+f109
        constexpr static inline std::string_view LaptopCode{ "\xef\x97\xbc" };                         // U+f5fc
        constexpr static inline std::string_view LaptopFile{ "\xee\x94\x9d" };                         // U+e51d
        constexpr static inline std::string_view LaptopMedical{ "\xef\xa0\x92" };                      // U+f812
        constexpr static inline std::string_view LariSign{ "\xee\x87\x88" };                           // U+e1c8
        constexpr static inline std::string_view LayerGroup{ "\xef\x97\xbd" };                         // U+f5fd
        constexpr static inline std::string_view Leaf{ "\xef\x81\xac" };                               // U+f06c
        constexpr static inline std::string_view LeftLong{ "\xef\x8c\x8a" };                           // U+f30a
        constexpr static inline std::string_view LeftRight{ "\xef\x8c\xb7" };                          // U+f337
        constexpr static inline std::string_view Lemon{ "\xef\x82\x94" };                              // U+f094
        constexpr static inline std::string_view LessThan{ "<" };                                      // U+003c
        constexpr static inline std::string_view LessThanEqual{ "\xef\x94\xb7" };                      // U+f537
        constexpr static inline std::string_view LifeRing{ "\xef\x87\x8d" };                           // U+f1cd
        constexpr static inline std::string_view Lightbulb{ "\xef\x83\xab" };                          // U+f0eb
        constexpr static inline std::string_view LinesLeaning{ "\xee\x94\x9e" };                       // U+e51e
        constexpr static inline std::string_view Link{ "\xef\x83\x81" };                               // U+f0c1
        constexpr static inline std::string_view LinkSlash{ "\xef\x84\xa7" };                          // U+f127
        constexpr static inline std::string_view LiraSign{ "\xef\x86\x95" };                           // U+f195
        constexpr static inline std::string_view List{ "\xef\x80\xba" };                               // U+f03a
        constexpr static inline std::string_view ListCheck{ "\xef\x82\xae" };                          // U+f0ae
        constexpr static inline std::string_view ListOl{ "\xef\x83\x8b" };                             // U+f0cb
        constexpr static inline std::string_view ListUl{ "\xef\x83\x8a" };                             // U+f0ca
        constexpr static inline std::string_view LitecoinSign{ "\xee\x87\x93" };                       // U+e1d3
        constexpr static inline std::string_view LocationArrow{ "\xef\x84\xa4" };                      // U+f124
        constexpr static inline std::string_view LocationCrosshairs{ "\xef\x98\x81" };                 // U+f601
        constexpr static inline std::string_view LocationDot{ "\xef\x8f\x85" };                        // U+f3c5
        constexpr static inline std::string_view LocationPin{ "\xef\x81\x81" };                        // U+f041
        constexpr static inline std::string_view LocationPinLock{ "\xee\x94\x9f" };                    // U+e51f
        constexpr static inline std::string_view Lock{ "\xef\x80\xa3" };                               // U+f023
        constexpr static inline std::string_view LockOpen{ "\xef\x8f\x81" };                           // U+f3c1
        constexpr static inline std::string_view Locust{ "\xee\x94\xa0" };                             // U+e520
        constexpr static inline std::string_view Lungs{ "\xef\x98\x84" };                              // U+f604
        constexpr static inline std::string_view LungsVirus{ "\xee\x81\xa7" };                         // U+e067
        constexpr static inline std::string_view M{ "M" };                                             // U+004d
        constexpr static inline std::string_view Magnet{ "\xef\x81\xb6" };                             // U+f076
        constexpr static inline std::string_view MagnifyingGlass{ "\xef\x80\x82" };                    // U+f002
        constexpr static inline std::string_view MagnifyingGlassArrowRight{ "\xee\x94\xa1" };          // U+e521
        constexpr static inline std::string_view MagnifyingGlassChart{ "\xee\x94\xa2" };               // U+e522
        constexpr static inline std::string_view MagnifyingGlassDollar{ "\xef\x9a\x88" };              // U+f688
        constexpr static inline std::string_view MagnifyingGlassLocation{ "\xef\x9a\x89" };            // U+f689
        constexpr static inline std::string_view MagnifyingGlassMinus{ "\xef\x80\x90" };               // U+f010
        constexpr static inline std::string_view MagnifyingGlassPlus{ "\xef\x80\x8e" };                // U+f00e
        constexpr static inline std::string_view ManatSign{ "\xee\x87\x95" };                          // U+e1d5
        constexpr static inline std::string_view Map{ "\xef\x89\xb9" };                                // U+f279
        constexpr static inline std::string_view MapLocation{ "\xef\x96\x9f" };                        // U+f59f
        constexpr static inline std::string_view MapLocationDot{ "\xef\x96\xa0" };                     // U+f5a0
        constexpr static inline std::string_view MapPin{ "\xef\x89\xb6" };                             // U+f276
        constexpr static inline std::string_view Marker{ "\xef\x96\xa1" };                             // U+f5a1
        constexpr static inline std::string_view Mars{ "\xef\x88\xa2" };                               // U+f222
        constexpr static inline std::string_view MarsAndVenus{ "\xef\x88\xa4" };                       // U+f224
        constexpr static inline std::string_view MarsAndVenusBurst{ "\xee\x94\xa3" };                  // U+e523
        constexpr static inline std::string_view MarsDouble{ "\xef\x88\xa7" };                         // U+f227
        constexpr static inline std::string_view MarsStroke{ "\xef\x88\xa9" };                         // U+f229
        constexpr static inline std::string_view MarsStrokeRight{ "\xef\x88\xab" };                    // U+f22b
        constexpr static inline std::string_view MarsStrokeUp{ "\xef\x88\xaa" };                       // U+f22a
        constexpr static inline std::string_view MartiniGlass{ "\xef\x95\xbb" };                       // U+f57b
        constexpr static inline std::string_view MartiniGlassCitrus{ "\xef\x95\xa1" };                 // U+f561
        constexpr static inline std::string_view MartiniGlassEmpty{ "\xef\x80\x80" };                  // U+f000
        constexpr static inline std::string_view Mask{ "\xef\x9b\xba" };                               // U+f6fa
        constexpr static inline std::string_view MaskFace{ "\xee\x87\x97" };                           // U+e1d7
        constexpr static inline std::string_view MaskVentilator{ "\xee\x94\xa4" };                     // U+e524
        constexpr static inline std::string_view MasksTheater{ "\xef\x98\xb0" };                       // U+f630
        constexpr static inline std::string_view MattressPillow{ "\xee\x94\xa5" };                     // U+e525
        constexpr static inline std::string_view Maximize{ "\xef\x8c\x9e" };                           // U+f31e
        constexpr static inline std::string_view Medal{ "\xef\x96\xa2" };                              // U+f5a2
        constexpr static inline std::string_view Memory{ "\xef\x94\xb8" };                             // U+f538
        constexpr static inline std::string_view Menorah{ "\xef\x99\xb6" };                            // U+f676
        constexpr static inline std::string_view Mercury{ "\xef\x88\xa3" };                            // U+f223
        constexpr static inline std::string_view Message{ "\xef\x89\xba" };                            // U+f27a
        constexpr static inline std::string_view Meteor{ "\xef\x9d\x93" };                             // U+f753
        constexpr static inline std::string_view Microchip{ "\xef\x8b\x9b" };                          // U+f2db
        constexpr static inline std::string_view Microphone{ "\xef\x84\xb0" };                         // U+f130
        constexpr static inline std::string_view MicrophoneLines{ "\xef\x8f\x89" };                    // U+f3c9
        constexpr static inline std::string_view MicrophoneLinesSlash{ "\xef\x94\xb9" };               // U+f539
        constexpr static inline std::string_view MicrophoneSlash{ "\xef\x84\xb1" };                    // U+f131
        constexpr static inline std::string_view Microscope{ "\xef\x98\x90" };                         // U+f610
        constexpr static inline std::string_view MillSign{ "\xee\x87\xad" };                           // U+e1ed
        constexpr static inline std::string_view Minimize{ "\xef\x9e\x8c" };                           // U+f78c
        constexpr static inline std::string_view Minus{ "\xef\x81\xa8" };                              // U+f068
        constexpr static inline std::string_view Mitten{ "\xef\x9e\xb5" };                             // U+f7b5
        constexpr static inline std::string_view Mobile{ "\xef\x8f\x8e" };                             // U+f3ce
        constexpr static inline std::string_view MobileButton{ "\xef\x84\x8b" };                       // U+f10b
        constexpr static inline std::string_view MobileRetro{ "\xee\x94\xa7" };                        // U+e527
        constexpr static inline std::string_view MobileScreen{ "\xef\x8f\x8f" };                       // U+f3cf
        constexpr static inline std::string_view MobileScreenButton{ "\xef\x8f\x8d" };                 // U+f3cd
        constexpr static inline std::string_view MoneyBill{ "\xef\x83\x96" };                          // U+f0d6
        constexpr static inline std::string_view MoneyBill_1{ "\xef\x8f\x91" };                        // U+f3d1
        constexpr static inline std::string_view MoneyBill_1Wave{ "\xef\x94\xbb" };                    // U+f53b
        constexpr static inline std::string_view MoneyBillTransfer{ "\xee\x94\xa8" };                  // U+e528
        constexpr static inline std::string_view MoneyBillTrendUp{ "\xee\x94\xa9" };                   // U+e529
        constexpr static inline std::string_view MoneyBillWave{ "\xef\x94\xba" };                      // U+f53a
        constexpr static inline std::string_view MoneyBillWheat{ "\xee\x94\xaa" };                     // U+e52a
        constexpr static inline std::string_view MoneyBills{ "\xee\x87\xb3" };                         // U+e1f3
        constexpr static inline std::string_view MoneyCheck{ "\xef\x94\xbc" };                         // U+f53c
        constexpr static inline std::string_view MoneyCheckDollar{ "\xef\x94\xbd" };                   // U+f53d
        constexpr static inline std::string_view Monument{ "\xef\x96\xa6" };                           // U+f5a6
        constexpr static inline std::string_view Moon{ "\xef\x86\x86" };                               // U+f186
        constexpr static inline std::string_view MortarPestle{ "\xef\x96\xa7" };                       // U+f5a7
        constexpr static inline std::string_view Mosque{ "\xef\x99\xb8" };                             // U+f678
        constexpr static inline std::string_view Mosquito{ "\xee\x94\xab" };                           // U+e52b
        constexpr static inline std::string_view MosquitoNet{ "\xee\x94\xac" };                        // U+e52c
        constexpr static inline std::string_view Motorcycle{ "\xef\x88\x9c" };                         // U+f21c
        constexpr static inline std::string_view Mound{ "\xee\x94\xad" };                              // U+e52d
        constexpr static inline std::string_view Mountain{ "\xef\x9b\xbc" };                           // U+f6fc
        constexpr static inline std::string_view MountainCity{ "\xee\x94\xae" };                       // U+e52e
        constexpr static inline std::string_view MountainSun{ "\xee\x94\xaf" };                        // U+e52f
        constexpr static inline std::string_view MugHot{ "\xef\x9e\xb6" };                             // U+f7b6
        constexpr static inline std::string_view MugSaucer{ "\xef\x83\xb4" };                          // U+f0f4
        constexpr static inline std::string_view Music{ "\xef\x80\x81" };                              // U+f001
        constexpr static inline std::string_view N{ "N" };                                             // U+004e
        constexpr static inline std::string_view NairaSign{ "\xee\x87\xb6" };                          // U+e1f6
        constexpr static inline std::string_view NetworkWired{ "\xef\x9b\xbf" };                       // U+f6ff
        constexpr static inline std::string_view Neuter{ "\xef\x88\xac" };                             // U+f22c
        constexpr static inline std::string_view Newspaper{ "\xef\x87\xaa" };                          // U+f1ea
        constexpr static inline std::string_view NotEqual{ "\xef\x94\xbe" };                           // U+f53e
        constexpr static inline std::string_view Notdef{ "\xee\x87\xbe" };                             // U+e1fe
        constexpr static inline std::string_view NoteSticky{ "\xef\x89\x89" };                         // U+f249
        constexpr static inline std::string_view NotesMedical{ "\xef\x92\x81" };                       // U+f481
        constexpr static inline std::string_view O{ "O" };                                             // U+004f
        constexpr static inline std::string_view ObjectGroup{ "\xef\x89\x87" };                        // U+f247
        constexpr static inline std::string_view ObjectUngroup{ "\xef\x89\x88" };                      // U+f248
        constexpr static inline std::string_view OilCan{ "\xef\x98\x93" };                             // U+f613
        constexpr static inline std::string_view OilWell{ "\xee\x94\xb2" };                            // U+e532
        constexpr static inline std::string_view Om{ "\xef\x99\xb9" };                                 // U+f679
        constexpr static inline std::string_view Otter{ "\xef\x9c\x80" };                              // U+f700
        constexpr static inline std::string_view Outdent{ "\xef\x80\xbb" };                            // U+f03b
        constexpr static inline std::string_view P{ "P" };                                             // U+0050
        constexpr static inline std::string_view Pager{ "\xef\xa0\x95" };                              // U+f815
        constexpr static inline std::string_view PaintRoller{ "\xef\x96\xaa" };                        // U+f5aa
        constexpr static inline std::string_view Paintbrush{ "\xef\x87\xbc" };                         // U+f1fc
        constexpr static inline std::string_view Palette{ "\xef\x94\xbf" };                            // U+f53f
        constexpr static inline std::string_view Pallet{ "\xef\x92\x82" };                             // U+f482
        constexpr static inline std::string_view Panorama{ "\xee\x88\x89" };                           // U+e209
        constexpr static inline std::string_view PaperPlane{ "\xef\x87\x98" };                         // U+f1d8
        constexpr static inline std::string_view Paperclip{ "\xef\x83\x86" };                          // U+f0c6
        constexpr static inline std::string_view ParachuteBox{ "\xef\x93\x8d" };                       // U+f4cd
        constexpr static inline std::string_view Paragraph{ "\xef\x87\x9d" };                          // U+f1dd
        constexpr static inline std::string_view Passport{ "\xef\x96\xab" };                           // U+f5ab
        constexpr static inline std::string_view Paste{ "\xef\x83\xaa" };                              // U+f0ea
        constexpr static inline std::string_view Pause{ "\xef\x81\x8c" };                              // U+f04c
        constexpr static inline std::string_view Paw{ "\xef\x86\xb0" };                                // U+f1b0
        constexpr static inline std::string_view Peace{ "\xef\x99\xbc" };                              // U+f67c
        constexpr static inline std::string_view Pen{ "\xef\x8c\x84" };                                // U+f304
        constexpr static inline std::string_view PenClip{ "\xef\x8c\x85" };                            // U+f305
        constexpr static inline std::string_view PenFancy{ "\xef\x96\xac" };                           // U+f5ac
        constexpr static inline std::string_view PenNib{ "\xef\x96\xad" };                             // U+f5ad
        constexpr static inline std::string_view PenRuler{ "\xef\x96\xae" };                           // U+f5ae
        constexpr static inline std::string_view PenToSquare{ "\xef\x81\x84" };                        // U+f044
        constexpr static inline std::string_view Pencil{ "\xef\x8c\x83" };                             // U+f303
        constexpr static inline std::string_view PeopleArrows{ "\xee\x81\xa8" };                       // U+e068
        constexpr static inline std::string_view PeopleCarryBox{ "\xef\x93\x8e" };                     // U+f4ce
        constexpr static inline std::string_view PeopleGroup{ "\xee\x94\xb3" };                        // U+e533
        constexpr static inline std::string_view PeopleLine{ "\xee\x94\xb4" };                         // U+e534
        constexpr static inline std::string_view PeoplePulling{ "\xee\x94\xb5" };                      // U+e535
        constexpr static inline std::string_view PeopleRobbery{ "\xee\x94\xb6" };                      // U+e536
        constexpr static inline std::string_view PeopleRoof{ "\xee\x94\xb7" };                         // U+e537
        constexpr static inline std::string_view PepperHot{ "\xef\xa0\x96" };                          // U+f816
        constexpr static inline std::string_view Percent{ "%" };                                       // U+0025
        constexpr static inline std::string_view Person{ "\xef\x86\x83" };                             // U+f183
        constexpr static inline std::string_view PersonArrowDownToLine{ "\xee\x94\xb8" };              // U+e538
        constexpr static inline std::string_view PersonArrowUpFromLine{ "\xee\x94\xb9" };              // U+e539
        constexpr static inline std::string_view PersonBiking{ "\xef\xa1\x8a" };                       // U+f84a
        constexpr static inline std::string_view PersonBooth{ "\xef\x9d\x96" };                        // U+f756
        constexpr static inline std::string_view PersonBreastfeeding{ "\xee\x94\xba" };                // U+e53a
        constexpr static inline std::string_view PersonBurst{ "\xee\x94\xbb" };                        // U+e53b
        constexpr static inline std::string_view PersonCane{ "\xee\x94\xbc" };                         // U+e53c
        constexpr static inline std::string_view PersonChalkboard{ "\xee\x94\xbd" };                   // U+e53d
        constexpr static inline std::string_view PersonCircleCheck{ "\xee\x94\xbe" };                  // U+e53e
        constexpr static inline std::string_view PersonCircleExclamation{ "\xee\x94\xbf" };            // U+e53f
        constexpr static inline std::string_view PersonCircleMinus{ "\xee\x95\x80" };                  // U+e540
        constexpr static inline std::string_view PersonCirclePlus{ "\xee\x95\x81" };                   // U+e541
        constexpr static inline std::string_view PersonCircleQuestion{ "\xee\x95\x82" };               // U+e542
        constexpr static inline std::string_view PersonCircleXmark{ "\xee\x95\x83" };                  // U+e543
        constexpr static inline std::string_view PersonDigging{ "\xef\xa1\x9e" };                      // U+f85e
        constexpr static inline std::string_view PersonDotsFromLine{ "\xef\x91\xb0" };                 // U+f470
        constexpr static inline std::string_view PersonDress{ "\xef\x86\x82" };                        // U+f182
        constexpr static inline std::string_view PersonDressBurst{ "\xee\x95\x84" };                   // U+e544
        constexpr static inline std::string_view PersonDrowning{ "\xee\x95\x85" };                     // U+e545
        constexpr static inline std::string_view PersonFalling{ "\xee\x95\x86" };                      // U+e546
        constexpr static inline std::string_view PersonFallingBurst{ "\xee\x95\x87" };                 // U+e547
        constexpr static inline std::string_view PersonHalfDress{ "\xee\x95\x88" };                    // U+e548
        constexpr static inline std::string_view PersonHarassing{ "\xee\x95\x89" };                    // U+e549
        constexpr static inline std::string_view PersonHiking{ "\xef\x9b\xac" };                       // U+f6ec
        constexpr static inline std::string_view PersonMilitaryPointing{ "\xee\x95\x8a" };             // U+e54a
        constexpr static inline std::string_view PersonMilitaryRifle{ "\xee\x95\x8b" };                // U+e54b
        constexpr static inline std::string_view PersonMilitaryToPerson{ "\xee\x95\x8c" };             // U+e54c
        constexpr static inline std::string_view PersonPraying{ "\xef\x9a\x83" };                      // U+f683
        constexpr static inline std::string_view PersonPregnant{ "\xee\x8c\x9e" };                     // U+e31e
        constexpr static inline std::string_view PersonRays{ "\xee\x95\x8d" };                         // U+e54d
        constexpr static inline std::string_view PersonRifle{ "\xee\x95\x8e" };                        // U+e54e
        constexpr static inline std::string_view PersonRunning{ "\xef\x9c\x8c" };                      // U+f70c
        constexpr static inline std::string_view PersonShelter{ "\xee\x95\x8f" };                      // U+e54f
        constexpr static inline std::string_view PersonSkating{ "\xef\x9f\x85" };                      // U+f7c5
        constexpr static inline std::string_view PersonSkiing{ "\xef\x9f\x89" };                       // U+f7c9
        constexpr static inline std::string_view PersonSkiingNordic{ "\xef\x9f\x8a" };                 // U+f7ca
        constexpr static inline std::string_view PersonSnowboarding{ "\xef\x9f\x8e" };                 // U+f7ce
        constexpr static inline std::string_view PersonSwimming{ "\xef\x97\x84" };                     // U+f5c4
        constexpr static inline std::string_view PersonThroughWindow{ "\xee\x96\xa9" };                // U+e5a9
        constexpr static inline std::string_view PersonWalking{ "\xef\x95\x94" };                      // U+f554
        constexpr static inline std::string_view PersonWalkingArrowLoopLeft{ "\xee\x95\x91" };         // U+e551
        constexpr static inline std::string_view PersonWalkingArrowRight{ "\xee\x95\x92" };            // U+e552
        constexpr static inline std::string_view PersonWalkingDashedLineArrowRight{ "\xee\x95\x93" };  // U+e553
        constexpr static inline std::string_view PersonWalkingLuggage{ "\xee\x95\x94" };               // U+e554
        constexpr static inline std::string_view PersonWalkingWithCane{ "\xef\x8a\x9d" };              // U+f29d
        constexpr static inline std::string_view PesetaSign{ "\xee\x88\xa1" };                         // U+e221
        constexpr static inline std::string_view PesoSign{ "\xee\x88\xa2" };                           // U+e222
        constexpr static inline std::string_view Phone{ "\xef\x82\x95" };                              // U+f095
        constexpr static inline std::string_view PhoneFlip{ "\xef\xa1\xb9" };                          // U+f879
        constexpr static inline std::string_view PhoneSlash{ "\xef\x8f\x9d" };                         // U+f3dd
        constexpr static inline std::string_view PhoneVolume{ "\xef\x8a\xa0" };                        // U+f2a0
        constexpr static inline std::string_view PhotoFilm{ "\xef\xa1\xbc" };                          // U+f87c
        constexpr static inline std::string_view PiggyBank{ "\xef\x93\x93" };                          // U+f4d3
        constexpr static inline std::string_view Pills{ "\xef\x92\x84" };                              // U+f484
        constexpr static inline std::string_view PizzaSlice{ "\xef\xa0\x98" };                         // U+f818
        constexpr static inline std::string_view PlaceOfWorship{ "\xef\x99\xbf" };                     // U+f67f
        constexpr static inline std::string_view Plane{ "\xef\x81\xb2" };                              // U+f072
        constexpr static inline std::string_view PlaneArrival{ "\xef\x96\xaf" };                       // U+f5af
        constexpr static inline std::string_view PlaneCircleCheck{ "\xee\x95\x95" };                   // U+e555
        constexpr static inline std::string_view PlaneCircleExclamation{ "\xee\x95\x96" };             // U+e556
        constexpr static inline std::string_view PlaneCircleXmark{ "\xee\x95\x97" };                   // U+e557
        constexpr static inline std::string_view PlaneDeparture{ "\xef\x96\xb0" };                     // U+f5b0
        constexpr static inline std::string_view PlaneLock{ "\xee\x95\x98" };                          // U+e558
        constexpr static inline std::string_view PlaneSlash{ "\xee\x81\xa9" };                         // U+e069
        constexpr static inline std::string_view PlaneUp{ "\xee\x88\xad" };                            // U+e22d
        constexpr static inline std::string_view PlantWilt{ "\xee\x96\xaa" };                          // U+e5aa
        constexpr static inline std::string_view PlateWheat{ "\xee\x95\x9a" };                         // U+e55a
        constexpr static inline std::string_view Play{ "\xef\x81\x8b" };                               // U+f04b
        constexpr static inline std::string_view Plug{ "\xef\x87\xa6" };                               // U+f1e6
        constexpr static inline std::string_view PlugCircleBolt{ "\xee\x95\x9b" };                     // U+e55b
        constexpr static inline std::string_view PlugCircleCheck{ "\xee\x95\x9c" };                    // U+e55c
        constexpr static inline std::string_view PlugCircleExclamation{ "\xee\x95\x9d" };              // U+e55d
        constexpr static inline std::string_view PlugCircleMinus{ "\xee\x95\x9e" };                    // U+e55e
        constexpr static inline std::string_view PlugCirclePlus{ "\xee\x95\x9f" };                     // U+e55f
        constexpr static inline std::string_view PlugCircleXmark{ "\xee\x95\xa0" };                    // U+e560
        constexpr static inline std::string_view Plus{ "+" };                                          // U+002b
        constexpr static inline std::string_view PlusMinus{ "\xee\x90\xbc" };                          // U+e43c
        constexpr static inline std::string_view Podcast{ "\xef\x8b\x8e" };                            // U+f2ce
        constexpr static inline std::string_view Poo{ "\xef\x8b\xbe" };                                // U+f2fe
        constexpr static inline std::string_view PooStorm{ "\xef\x9d\x9a" };                           // U+f75a
        constexpr static inline std::string_view Poop{ "\xef\x98\x99" };                               // U+f619
        constexpr static inline std::string_view PowerOff{ "\xef\x80\x91" };                           // U+f011
        constexpr static inline std::string_view Prescription{ "\xef\x96\xb1" };                       // U+f5b1
        constexpr static inline std::string_view PrescriptionBottle{ "\xef\x92\x85" };                 // U+f485
        constexpr static inline std::string_view PrescriptionBottleMedical{ "\xef\x92\x86" };          // U+f486
        constexpr static inline std::string_view Print{ "\xef\x80\xaf" };                              // U+f02f
        constexpr static inline std::string_view PumpMedical{ "\xee\x81\xaa" };                        // U+e06a
        constexpr static inline std::string_view PumpSoap{ "\xee\x81\xab" };                           // U+e06b
        constexpr static inline std::string_view PuzzlePiece{ "\xef\x84\xae" };                        // U+f12e
        constexpr static inline std::string_view Q{ "Q" };                                             // U+0051
        constexpr static inline std::string_view Qrcode{ "\xef\x80\xa9" };                             // U+f029
        constexpr static inline std::string_view Question{ "?" };                                      // U+003f
        constexpr static inline std::string_view QuoteLeft{ "\xef\x84\x8d" };                          // U+f10d
        constexpr static inline std::string_view QuoteRight{ "\xef\x84\x8e" };                         // U+f10e
        constexpr static inline std::string_view R{ "R" };                                             // U+0052
        constexpr static inline std::string_view Radiation{ "\xef\x9e\xb9" };                          // U+f7b9
        constexpr static inline std::string_view Radio{ "\xef\xa3\x97" };                              // U+f8d7
        constexpr static inline std::string_view Rainbow{ "\xef\x9d\x9b" };                            // U+f75b
        constexpr static inline std::string_view RankingStar{ "\xee\x95\xa1" };                        // U+e561
        constexpr static inline std::string_view Receipt{ "\xef\x95\x83" };                            // U+f543
        constexpr static inline std::string_view RecordVinyl{ "\xef\xa3\x99" };                        // U+f8d9
        constexpr static inline std::string_view RectangleAd{ "\xef\x99\x81" };                        // U+f641
        constexpr static inline std::string_view RectangleList{ "\xef\x80\xa2" };                      // U+f022
        constexpr static inline std::string_view RectangleXmark{ "\xef\x90\x90" };                     // U+f410
        constexpr static inline std::string_view Recycle{ "\xef\x86\xb8" };                            // U+f1b8
        constexpr static inline std::string_view Registered{ "\xef\x89\x9d" };                         // U+f25d
        constexpr static inline std::string_view Repeat{ "\xef\x8d\xa3" };                             // U+f363
        constexpr static inline std::string_view Reply{ "\xef\x8f\xa5" };                              // U+f3e5
        constexpr static inline std::string_view ReplyAll{ "\xef\x84\xa2" };                           // U+f122
        constexpr static inline std::string_view Republican{ "\xef\x9d\x9e" };                         // U+f75e
        constexpr static inline std::string_view Restroom{ "\xef\x9e\xbd" };                           // U+f7bd
        constexpr static inline std::string_view Retweet{ "\xef\x81\xb9" };                            // U+f079
        constexpr static inline std::string_view Ribbon{ "\xef\x93\x96" };                             // U+f4d6
        constexpr static inline std::string_view RightFromBracket{ "\xef\x8b\xb5" };                   // U+f2f5
        constexpr static inline std::string_view RightLeft{ "\xef\x8d\xa2" };                          // U+f362
        constexpr static inline std::string_view RightLong{ "\xef\x8c\x8b" };                          // U+f30b
        constexpr static inline std::string_view RightToBracket{ "\xef\x8b\xb6" };                     // U+f2f6
        constexpr static inline std::string_view Ring{ "\xef\x9c\x8b" };                               // U+f70b
        constexpr static inline std::string_view Road{ "\xef\x80\x98" };                               // U+f018
        constexpr static inline std::string_view RoadBarrier{ "\xee\x95\xa2" };                        // U+e562
        constexpr static inline std::string_view RoadBridge{ "\xee\x95\xa3" };                         // U+e563
        constexpr static inline std::string_view RoadCircleCheck{ "\xee\x95\xa4" };                    // U+e564
        constexpr static inline std::string_view RoadCircleExclamation{ "\xee\x95\xa5" };              // U+e565
        constexpr static inline std::string_view RoadCircleXmark{ "\xee\x95\xa6" };                    // U+e566
        constexpr static inline std::string_view RoadLock{ "\xee\x95\xa7" };                           // U+e567
        constexpr static inline std::string_view RoadSpikes{ "\xee\x95\xa8" };                         // U+e568
        constexpr static inline std::string_view Robot{ "\xef\x95\x84" };                              // U+f544
        constexpr static inline std::string_view Rocket{ "\xef\x84\xb5" };                             // U+f135
        constexpr static inline std::string_view Rotate{ "\xef\x8b\xb1" };                             // U+f2f1
        constexpr static inline std::string_view RotateLeft{ "\xef\x8b\xaa" };                         // U+f2ea
        constexpr static inline std::string_view RotateRight{ "\xef\x8b\xb9" };                        // U+f2f9
        constexpr static inline std::string_view Route{ "\xef\x93\x97" };                              // U+f4d7
        constexpr static inline std::string_view Rss{ "\xef\x82\x9e" };                                // U+f09e
        constexpr static inline std::string_view RubleSign{ "\xef\x85\x98" };                          // U+f158
        constexpr static inline std::string_view Rug{ "\xee\x95\xa9" };                                // U+e569
        constexpr static inline std::string_view Ruler{ "\xef\x95\x85" };                              // U+f545
        constexpr static inline std::string_view RulerCombined{ "\xef\x95\x86" };                      // U+f546
        constexpr static inline std::string_view RulerHorizontal{ "\xef\x95\x87" };                    // U+f547
        constexpr static inline std::string_view RulerVertical{ "\xef\x95\x88" };                      // U+f548
        constexpr static inline std::string_view RupeeSign{ "\xef\x85\x96" };                          // U+f156
        constexpr static inline std::string_view RupiahSign{ "\xee\x88\xbd" };                         // U+e23d
        constexpr static inline std::string_view S{ "S" };                                             // U+0053
        constexpr static inline std::string_view SackDollar{ "\xef\xa0\x9d" };                         // U+f81d
        constexpr static inline std::string_view SackXmark{ "\xee\x95\xaa" };                          // U+e56a
        constexpr static inline std::string_view Sailboat{ "\xee\x91\x85" };                           // U+e445
        constexpr static inline std::string_view Satellite{ "\xef\x9e\xbf" };                          // U+f7bf
        constexpr static inline std::string_view SatelliteDish{ "\xef\x9f\x80" };                      // U+f7c0
        constexpr static inline std::string_view ScaleBalanced{ "\xef\x89\x8e" };                      // U+f24e
        constexpr static inline std::string_view ScaleUnbalanced{ "\xef\x94\x95" };                    // U+f515
        constexpr static inline std::string_view ScaleUnbalancedFlip{ "\xef\x94\x96" };                // U+f516
        constexpr static inline std::string_view School{ "\xef\x95\x89" };                             // U+f549
        constexpr static inline std::string_view SchoolCircleCheck{ "\xee\x95\xab" };                  // U+e56b
        constexpr static inline std::string_view SchoolCircleExclamation{ "\xee\x95\xac" };            // U+e56c
        constexpr static inline std::string_view SchoolCircleXmark{ "\xee\x95\xad" };                  // U+e56d
        constexpr static inline std::string_view SchoolFlag{ "\xee\x95\xae" };                         // U+e56e
        constexpr static inline std::string_view SchoolLock{ "\xee\x95\xaf" };                         // U+e56f
        constexpr static inline std::string_view Scissors{ "\xef\x83\x84" };                           // U+f0c4
        constexpr static inline std::string_view Screwdriver{ "\xef\x95\x8a" };                        // U+f54a
        constexpr static inline std::string_view ScrewdriverWrench{ "\xef\x9f\x99" };                  // U+f7d9
        constexpr static inline std::string_view Scroll{ "\xef\x9c\x8e" };                             // U+f70e
        constexpr static inline std::string_view ScrollTorah{ "\xef\x9a\xa0" };                        // U+f6a0
        constexpr static inline std::string_view SdCard{ "\xef\x9f\x82" };                             // U+f7c2
        constexpr static inline std::string_view Section{ "\xee\x91\x87" };                            // U+e447
        constexpr static inline std::string_view Seedling{ "\xef\x93\x98" };                           // U+f4d8
        constexpr static inline std::string_view Server{ "\xef\x88\xb3" };                             // U+f233
        constexpr static inline std::string_view Shapes{ "\xef\x98\x9f" };                             // U+f61f
        constexpr static inline std::string_view Share{ "\xef\x81\xa4" };                              // U+f064
        constexpr static inline std::string_view ShareFromSquare{ "\xef\x85\x8d" };                    // U+f14d
        constexpr static inline std::string_view ShareNodes{ "\xef\x87\xa0" };                         // U+f1e0
        constexpr static inline std::string_view SheetPlastic{ "\xee\x95\xb1" };                       // U+e571
        constexpr static inline std::string_view ShekelSign{ "\xef\x88\x8b" };                         // U+f20b
        constexpr static inline std::string_view Shield{ "\xef\x84\xb2" };                             // U+f132
        constexpr static inline std::string_view ShieldCat{ "\xee\x95\xb2" };                          // U+e572
        constexpr static inline std::string_view ShieldDog{ "\xee\x95\xb3" };                          // U+e573
        constexpr static inline std::string_view ShieldHalved{ "\xef\x8f\xad" };                       // U+f3ed
        constexpr static inline std::string_view ShieldHeart{ "\xee\x95\xb4" };                        // U+e574
        constexpr static inline std::string_view ShieldVirus{ "\xee\x81\xac" };                        // U+e06c
        constexpr static inline std::string_view Ship{ "\xef\x88\x9a" };                               // U+f21a
        constexpr static inline std::string_view Shirt{ "\xef\x95\x93" };                              // U+f553
        constexpr static inline std::string_view ShoePrints{ "\xef\x95\x8b" };                         // U+f54b
        constexpr static inline std::string_view Shop{ "\xef\x95\x8f" };                               // U+f54f
        constexpr static inline std::string_view ShopLock{ "\xee\x92\xa5" };                           // U+e4a5
        constexpr static inline std::string_view ShopSlash{ "\xee\x81\xb0" };                          // U+e070
        constexpr static inline std::string_view Shower{ "\xef\x8b\x8c" };                             // U+f2cc
        constexpr static inline std::string_view Shrimp{ "\xee\x91\x88" };                             // U+e448
        constexpr static inline std::string_view Shuffle{ "\xef\x81\xb4" };                            // U+f074
        constexpr static inline std::string_view ShuttleSpace{ "\xef\x86\x97" };                       // U+f197
        constexpr static inline std::string_view SignHanging{ "\xef\x93\x99" };                        // U+f4d9
        constexpr static inline std::string_view Signal{ "\xef\x80\x92" };                             // U+f012
        constexpr static inline std::string_view Signature{ "\xef\x96\xb7" };                          // U+f5b7
        constexpr static inline std::string_view SignsPost{ "\xef\x89\xb7" };                          // U+f277
        constexpr static inline std::string_view SimCard{ "\xef\x9f\x84" };                            // U+f7c4
        constexpr static inline std::string_view Sink{ "\xee\x81\xad" };                               // U+e06d
        constexpr static inline std::string_view Sitemap{ "\xef\x83\xa8" };                            // U+f0e8
        constexpr static inline std::string_view Skull{ "\xef\x95\x8c" };                              // U+f54c
        constexpr static inline std::string_view SkullCrossbones{ "\xef\x9c\x94" };                    // U+f714
        constexpr static inline std::string_view Slash{ "\xef\x9c\x95" };                              // U+f715
        constexpr static inline std::string_view Sleigh{ "\xef\x9f\x8c" };                             // U+f7cc
        constexpr static inline std::string_view Sliders{ "\xef\x87\x9e" };                            // U+f1de
        constexpr static inline std::string_view Smog{ "\xef\x9d\x9f" };                               // U+f75f
        constexpr static inline std::string_view Smoking{ "\xef\x92\x8d" };                            // U+f48d
        constexpr static inline std::string_view Snowflake{ "\xef\x8b\x9c" };                          // U+f2dc
        constexpr static inline std::string_view Snowman{ "\xef\x9f\x90" };                            // U+f7d0
        constexpr static inline std::string_view Snowplow{ "\xef\x9f\x92" };                           // U+f7d2
        constexpr static inline std::string_view Soap{ "\xee\x81\xae" };                               // U+e06e
        constexpr static inline std::string_view Socks{ "\xef\x9a\x96" };                              // U+f696
        constexpr static inline std::string_view SolarPanel{ "\xef\x96\xba" };                         // U+f5ba
        constexpr static inline std::string_view Sort{ "\xef\x83\x9c" };                               // U+f0dc
        constexpr static inline std::string_view SortDown{ "\xef\x83\x9d" };                           // U+f0dd
        constexpr static inline std::string_view SortUp{ "\xef\x83\x9e" };                             // U+f0de
        constexpr static inline std::string_view Spa{ "\xef\x96\xbb" };                                // U+f5bb
        constexpr static inline std::string_view SpaghettiMonsterFlying{ "\xef\x99\xbb" };             // U+f67b
        constexpr static inline std::string_view SpellCheck{ "\xef\xa2\x91" };                         // U+f891
        constexpr static inline std::string_view Spider{ "\xef\x9c\x97" };                             // U+f717
        constexpr static inline std::string_view Spinner{ "\xef\x84\x90" };                            // U+f110
        constexpr static inline std::string_view Splotch{ "\xef\x96\xbc" };                            // U+f5bc
        constexpr static inline std::string_view Spoon{ "\xef\x8b\xa5" };                              // U+f2e5
        constexpr static inline std::string_view SprayCan{ "\xef\x96\xbd" };                           // U+f5bd
        constexpr static inline std::string_view SprayCanSparkles{ "\xef\x97\x90" };                   // U+f5d0
        constexpr static inline std::string_view Square{ "\xef\x83\x88" };                             // U+f0c8
        constexpr static inline std::string_view SquareArrowUpRight{ "\xef\x85\x8c" };                 // U+f14c
        constexpr static inline std::string_view SquareCaretDown{ "\xef\x85\x90" };                    // U+f150
        constexpr static inline std::string_view SquareCaretLeft{ "\xef\x86\x91" };                    // U+f191
        constexpr static inline std::string_view SquareCaretRight{ "\xef\x85\x92" };                   // U+f152
        constexpr static inline std::string_view SquareCaretUp{ "\xef\x85\x91" };                      // U+f151
        constexpr static inline std::string_view SquareCheck{ "\xef\x85\x8a" };                        // U+f14a
        constexpr static inline std::string_view SquareEnvelope{ "\xef\x86\x99" };                     // U+f199
        constexpr static inline std::string_view SquareFull{ "\xef\x91\x9c" };                         // U+f45c
        constexpr static inline std::string_view SquareH{ "\xef\x83\xbd" };                            // U+f0fd
        constexpr static inline std::string_view SquareMinus{ "\xef\x85\x86" };                        // U+f146
        constexpr static inline std::string_view SquareNfi{ "\xee\x95\xb6" };                          // U+e576
        constexpr static inline std::string_view SquareParking{ "\xef\x95\x80" };                      // U+f540
        constexpr static inline std::string_view SquarePen{ "\xef\x85\x8b" };                          // U+f14b
        constexpr static inline std::string_view SquarePersonConfined{ "\xee\x95\xb7" };               // U+e577
        constexpr static inline std::string_view SquarePhone{ "\xef\x82\x98" };                        // U+f098
        constexpr static inline std::string_view SquarePhoneFlip{ "\xef\xa1\xbb" };                    // U+f87b
        constexpr static inline std::string_view SquarePlus{ "\xef\x83\xbe" };                         // U+f0fe
        constexpr static inline std::string_view SquarePollHorizontal{ "\xef\x9a\x82" };               // U+f682
        constexpr static inline std::string_view SquarePollVertical{ "\xef\x9a\x81" };                 // U+f681
        constexpr static inline std::string_view SquareRootVariable{ "\xef\x9a\x98" };                 // U+f698
        constexpr static inline std::string_view SquareRss{ "\xef\x85\x83" };                          // U+f143
        constexpr static inline std::string_view SquareShareNodes{ "\xef\x87\xa1" };                   // U+f1e1
        constexpr static inline std::string_view SquareUpRight{ "\xef\x8d\xa0" };                      // U+f360
        constexpr static inline std::string_view SquareVirus{ "\xee\x95\xb8" };                        // U+e578
        constexpr static inline std::string_view SquareXmark{ "\xef\x8b\x93" };                        // U+f2d3
        constexpr static inline std::string_view StaffSnake{ "\xee\x95\xb9" };                         // U+e579
        constexpr static inline std::string_view Stairs{ "\xee\x8a\x89" };                             // U+e289
        constexpr static inline std::string_view Stamp{ "\xef\x96\xbf" };                              // U+f5bf
        constexpr static inline std::string_view Stapler{ "\xee\x96\xaf" };                            // U+e5af
        constexpr static inline std::string_view Star{ "\xef\x80\x85" };                               // U+f005
        constexpr static inline std::string_view StarAndCrescent{ "\xef\x9a\x99" };                    // U+f699
        constexpr static inline std::string_view StarHalf{ "\xef\x82\x89" };                           // U+f089
        constexpr static inline std::string_view StarHalfStroke{ "\xef\x97\x80" };                     // U+f5c0
        constexpr static inline std::string_view StarOfDavid{ "\xef\x9a\x9a" };                        // U+f69a
        constexpr static inline std::string_view StarOfLife{ "\xef\x98\xa1" };                         // U+f621
        constexpr static inline std::string_view SterlingSign{ "\xef\x85\x94" };                       // U+f154
        constexpr static inline std::string_view Stethoscope{ "\xef\x83\xb1" };                        // U+f0f1
        constexpr static inline std::string_view Stop{ "\xef\x81\x8d" };                               // U+f04d
        constexpr static inline std::string_view Stopwatch{ "\xef\x8b\xb2" };                          // U+f2f2
        constexpr static inline std::string_view Stopwatch_20{ "\xee\x81\xaf" };                       // U+e06f
        constexpr static inline std::string_view Store{ "\xef\x95\x8e" };                              // U+f54e
        constexpr static inline std::string_view StoreSlash{ "\xee\x81\xb1" };                         // U+e071
        constexpr static inline std::string_view StreetView{ "\xef\x88\x9d" };                         // U+f21d
        constexpr static inline std::string_view Strikethrough{ "\xef\x83\x8c" };                      // U+f0cc
        constexpr static inline std::string_view Stroopwafel{ "\xef\x95\x91" };                        // U+f551
        constexpr static inline std::string_view Subscript{ "\xef\x84\xac" };                          // U+f12c
        constexpr static inline std::string_view Suitcase{ "\xef\x83\xb2" };                           // U+f0f2
        constexpr static inline std::string_view SuitcaseMedical{ "\xef\x83\xba" };                    // U+f0fa
        constexpr static inline std::string_view SuitcaseRolling{ "\xef\x97\x81" };                    // U+f5c1
        constexpr static inline std::string_view Sun{ "\xef\x86\x85" };                                // U+f185
        constexpr static inline std::string_view SunPlantWilt{ "\xee\x95\xba" };                       // U+e57a
        constexpr static inline std::string_view Superscript{ "\xef\x84\xab" };                        // U+f12b
        constexpr static inline std::string_view Swatchbook{ "\xef\x97\x83" };                         // U+f5c3
        constexpr static inline std::string_view Synagogue{ "\xef\x9a\x9b" };                          // U+f69b
        constexpr static inline std::string_view Syringe{ "\xef\x92\x8e" };                            // U+f48e
        constexpr static inline std::string_view T{ "T" };                                             // U+0054
        constexpr static inline std::string_view Table{ "\xef\x83\x8e" };                              // U+f0ce
        constexpr static inline std::string_view TableCells{ "\xef\x80\x8a" };                         // U+f00a
        constexpr static inline std::string_view TableCellsColumnLock{ "\xee\x99\xb8" };               // U+e678
        constexpr static inline std::string_view TableCellsLarge{ "\xef\x80\x89" };                    // U+f009
        constexpr static inline std::string_view TableCellsRowLock{ "\xee\x99\xba" };                  // U+e67a
        constexpr static inline std::string_view TableColumns{ "\xef\x83\x9b" };                       // U+f0db
        constexpr static inline std::string_view TableList{ "\xef\x80\x8b" };                          // U+f00b
        constexpr static inline std::string_view TableTennisPaddleBall{ "\xef\x91\x9d" };              // U+f45d
        constexpr static inline std::string_view Tablet{ "\xef\x8f\xbb" };                             // U+f3fb
        constexpr static inline std::string_view TabletButton{ "\xef\x84\x8a" };                       // U+f10a
        constexpr static inline std::string_view TabletScreenButton{ "\xef\x8f\xba" };                 // U+f3fa
        constexpr static inline std::string_view Tablets{ "\xef\x92\x90" };                            // U+f490
        constexpr static inline std::string_view TachographDigital{ "\xef\x95\xa6" };                  // U+f566
        constexpr static inline std::string_view Tag{ "\xef\x80\xab" };                                // U+f02b
        constexpr static inline std::string_view Tags{ "\xef\x80\xac" };                               // U+f02c
        constexpr static inline std::string_view Tape{ "\xef\x93\x9b" };                               // U+f4db
        constexpr static inline std::string_view Tarp{ "\xee\x95\xbb" };                               // U+e57b
        constexpr static inline std::string_view TarpDroplet{ "\xee\x95\xbc" };                        // U+e57c
        constexpr static inline std::string_view Taxi{ "\xef\x86\xba" };                               // U+f1ba
        constexpr static inline std::string_view Teeth{ "\xef\x98\xae" };                              // U+f62e
        constexpr static inline std::string_view TeethOpen{ "\xef\x98\xaf" };                          // U+f62f
        constexpr static inline std::string_view TemperatureArrowDown{ "\xee\x80\xbf" };               // U+e03f
        constexpr static inline std::string_view TemperatureArrowUp{ "\xee\x81\x80" };                 // U+e040
        constexpr static inline std::string_view TemperatureEmpty{ "\xef\x8b\x8b" };                   // U+f2cb
        constexpr static inline std::string_view TemperatureFull{ "\xef\x8b\x87" };                    // U+f2c7
        constexpr static inline std::string_view TemperatureHalf{ "\xef\x8b\x89" };                    // U+f2c9
        constexpr static inline std::string_view TemperatureHigh{ "\xef\x9d\xa9" };                    // U+f769
        constexpr static inline std::string_view TemperatureLow{ "\xef\x9d\xab" };                     // U+f76b
        constexpr static inline std::string_view TemperatureQuarter{ "\xef\x8b\x8a" };                 // U+f2ca
        constexpr static inline std::string_view TemperatureThreeQuarters{ "\xef\x8b\x88" };           // U+f2c8
        constexpr static inline std::string_view TengeSign{ "\xef\x9f\x97" };                          // U+f7d7
        constexpr static inline std::string_view Tent{ "\xee\x95\xbd" };                               // U+e57d
        constexpr static inline std::string_view TentArrowDownToLine{ "\xee\x95\xbe" };                // U+e57e
        constexpr static inline std::string_view TentArrowLeftRight{ "\xee\x95\xbf" };                 // U+e57f
        constexpr static inline std::string_view TentArrowTurnLeft{ "\xee\x96\x80" };                  // U+e580
        constexpr static inline std::string_view TentArrowsDown{ "\xee\x96\x81" };                     // U+e581
        constexpr static inline std::string_view Tents{ "\xee\x96\x82" };                              // U+e582
        constexpr static inline std::string_view Terminal{ "\xef\x84\xa0" };                           // U+f120
        constexpr static inline std::string_view TextHeight{ "\xef\x80\xb4" };                         // U+f034
        constexpr static inline std::string_view TextSlash{ "\xef\xa1\xbd" };                          // U+f87d
        constexpr static inline std::string_view TextWidth{ "\xef\x80\xb5" };                          // U+f035
        constexpr static inline std::string_view Thermometer{ "\xef\x92\x91" };                        // U+f491
        constexpr static inline std::string_view ThumbsDown{ "\xef\x85\xa5" };                         // U+f165
        constexpr static inline std::string_view ThumbsUp{ "\xef\x85\xa4" };                           // U+f164
        constexpr static inline std::string_view Thumbtack{ "\xef\x82\x8d" };                          // U+f08d
        constexpr static inline std::string_view Ticket{ "\xef\x85\x85" };                             // U+f145
        constexpr static inline std::string_view TicketSimple{ "\xef\x8f\xbf" };                       // U+f3ff
        constexpr static inline std::string_view Timeline{ "\xee\x8a\x9c" };                           // U+e29c
        constexpr static inline std::string_view ToggleOff{ "\xef\x88\x84" };                          // U+f204
        constexpr static inline std::string_view ToggleOn{ "\xef\x88\x85" };                           // U+f205
        constexpr static inline std::string_view Toilet{ "\xef\x9f\x98" };                             // U+f7d8
        constexpr static inline std::string_view ToiletPaper{ "\xef\x9c\x9e" };                        // U+f71e
        constexpr static inline std::string_view ToiletPaperSlash{ "\xee\x81\xb2" };                   // U+e072
        constexpr static inline std::string_view ToiletPortable{ "\xee\x96\x83" };                     // U+e583
        constexpr static inline std::string_view ToiletsPortable{ "\xee\x96\x84" };                    // U+e584
        constexpr static inline std::string_view Toolbox{ "\xef\x95\x92" };                            // U+f552
        constexpr static inline std::string_view Tooth{ "\xef\x97\x89" };                              // U+f5c9
        constexpr static inline std::string_view ToriiGate{ "\xef\x9a\xa1" };                          // U+f6a1
        constexpr static inline std::string_view Tornado{ "\xef\x9d\xaf" };                            // U+f76f
        constexpr static inline std::string_view TowerBroadcast{ "\xef\x94\x99" };                     // U+f519
        constexpr static inline std::string_view TowerCell{ "\xee\x96\x85" };                          // U+e585
        constexpr static inline std::string_view TowerObservation{ "\xee\x96\x86" };                   // U+e586
        constexpr static inline std::string_view Tractor{ "\xef\x9c\xa2" };                            // U+f722
        constexpr static inline std::string_view Trademark{ "\xef\x89\x9c" };                          // U+f25c
        constexpr static inline std::string_view TrafficLight{ "\xef\x98\xb7" };                       // U+f637
        constexpr static inline std::string_view Trailer{ "\xee\x81\x81" };                            // U+e041
        constexpr static inline std::string_view Train{ "\xef\x88\xb8" };                              // U+f238
        constexpr static inline std::string_view TrainSubway{ "\xef\x88\xb9" };                        // U+f239
        constexpr static inline std::string_view TrainTram{ "\xee\x96\xb4" };                          // U+e5b4
        constexpr static inline std::string_view Transgender{ "\xef\x88\xa5" };                        // U+f225
        constexpr static inline std::string_view Trash{ "\xef\x87\xb8" };                              // U+f1f8
        constexpr static inline std::string_view TrashArrowUp{ "\xef\xa0\xa9" };                       // U+f829
        constexpr static inline std::string_view TrashCan{ "\xef\x8b\xad" };                           // U+f2ed
        constexpr static inline std::string_view TrashCanArrowUp{ "\xef\xa0\xaa" };                    // U+f82a
        constexpr static inline std::string_view Tree{ "\xef\x86\xbb" };                               // U+f1bb
        constexpr static inline std::string_view TreeCity{ "\xee\x96\x87" };                           // U+e587
        constexpr static inline std::string_view TriangleExclamation{ "\xef\x81\xb1" };                // U+f071
        constexpr static inline std::string_view Trophy{ "\xef\x82\x91" };                             // U+f091
        constexpr static inline std::string_view Trowel{ "\xee\x96\x89" };                             // U+e589
        constexpr static inline std::string_view TrowelBricks{ "\xee\x96\x8a" };                       // U+e58a
        constexpr static inline std::string_view Truck{ "\xef\x83\x91" };                              // U+f0d1
        constexpr static inline std::string_view TruckArrowRight{ "\xee\x96\x8b" };                    // U+e58b
        constexpr static inline std::string_view TruckDroplet{ "\xee\x96\x8c" };                       // U+e58c
        constexpr static inline std::string_view TruckFast{ "\xef\x92\x8b" };                          // U+f48b
        constexpr static inline std::string_view TruckField{ "\xee\x96\x8d" };                         // U+e58d
        constexpr static inline std::string_view TruckFieldUn{ "\xee\x96\x8e" };                       // U+e58e
        constexpr static inline std::string_view TruckFront{ "\xee\x8a\xb7" };                         // U+e2b7
        constexpr static inline std::string_view TruckMedical{ "\xef\x83\xb9" };                       // U+f0f9
        constexpr static inline std::string_view TruckMonster{ "\xef\x98\xbb" };                       // U+f63b
        constexpr static inline std::string_view TruckMoving{ "\xef\x93\x9f" };                        // U+f4df
        constexpr static inline std::string_view TruckPickup{ "\xef\x98\xbc" };                        // U+f63c
        constexpr static inline std::string_view TruckPlane{ "\xee\x96\x8f" };                         // U+e58f
        constexpr static inline std::string_view TruckRampBox{ "\xef\x93\x9e" };                       // U+f4de
        constexpr static inline std::string_view Tty{ "\xef\x87\xa4" };                                // U+f1e4
        constexpr static inline std::string_view TurkishLiraSign{ "\xee\x8a\xbb" };                    // U+e2bb
        constexpr static inline std::string_view TurnDown{ "\xef\x8e\xbe" };                           // U+f3be
        constexpr static inline std::string_view TurnUp{ "\xef\x8e\xbf" };                             // U+f3bf
        constexpr static inline std::string_view Tv{ "\xef\x89\xac" };                                 // U+f26c
        constexpr static inline std::string_view U{ "U" };                                             // U+0055
        constexpr static inline std::string_view Umbrella{ "\xef\x83\xa9" };                           // U+f0e9
        constexpr static inline std::string_view UmbrellaBeach{ "\xef\x97\x8a" };                      // U+f5ca
        constexpr static inline std::string_view Underline{ "\xef\x83\x8d" };                          // U+f0cd
        constexpr static inline std::string_view UniversalAccess{ "\xef\x8a\x9a" };                    // U+f29a
        constexpr static inline std::string_view Unlock{ "\xef\x82\x9c" };                             // U+f09c
        constexpr static inline std::string_view UnlockKeyhole{ "\xef\x84\xbe" };                      // U+f13e
        constexpr static inline std::string_view UpDown{ "\xef\x8c\xb8" };                             // U+f338
        constexpr static inline std::string_view UpDownLeftRight{ "\xef\x82\xb2" };                    // U+f0b2
        constexpr static inline std::string_view UpLong{ "\xef\x8c\x8c" };                             // U+f30c
        constexpr static inline std::string_view UpRightAndDownLeftFromCenter{ "\xef\x90\xa4" };       // U+f424
        constexpr static inline std::string_view UpRightFromSquare{ "\xef\x8d\x9d" };                  // U+f35d
        constexpr static inline std::string_view Upload{ "\xef\x82\x93" };                             // U+f093
        constexpr static inline std::string_view User{ "\xef\x80\x87" };                               // U+f007
        constexpr static inline std::string_view UserAstronaut{ "\xef\x93\xbb" };                      // U+f4fb
        constexpr static inline std::string_view UserCheck{ "\xef\x93\xbc" };                          // U+f4fc
        constexpr static inline std::string_view UserClock{ "\xef\x93\xbd" };                          // U+f4fd
        constexpr static inline std::string_view UserDoctor{ "\xef\x83\xb0" };                         // U+f0f0
        constexpr static inline std::string_view UserGear{ "\xef\x93\xbe" };                           // U+f4fe
        constexpr static inline std::string_view UserGraduate{ "\xef\x94\x81" };                       // U+f501
        constexpr static inline std::string_view UserGroup{ "\xef\x94\x80" };                          // U+f500
        constexpr static inline std::string_view UserInjured{ "\xef\x9c\xa8" };                        // U+f728
        constexpr static inline std::string_view UserLarge{ "\xef\x90\x86" };                          // U+f406
        constexpr static inline std::string_view UserLargeSlash{ "\xef\x93\xba" };                     // U+f4fa
        constexpr static inline std::string_view UserLock{ "\xef\x94\x82" };                           // U+f502
        constexpr static inline std::string_view UserMinus{ "\xef\x94\x83" };                          // U+f503
        constexpr static inline std::string_view UserNinja{ "\xef\x94\x84" };                          // U+f504
        constexpr static inline std::string_view UserNurse{ "\xef\xa0\xaf" };                          // U+f82f
        constexpr static inline std::string_view UserPen{ "\xef\x93\xbf" };                            // U+f4ff
        constexpr static inline std::string_view UserPlus{ "\xef\x88\xb4" };                           // U+f234
        constexpr static inline std::string_view UserSecret{ "\xef\x88\x9b" };                         // U+f21b
        constexpr static inline std::string_view UserShield{ "\xef\x94\x85" };                         // U+f505
        constexpr static inline std::string_view UserSlash{ "\xef\x94\x86" };                          // U+f506
        constexpr static inline std::string_view UserTag{ "\xef\x94\x87" };                            // U+f507
        constexpr static inline std::string_view UserTie{ "\xef\x94\x88" };                            // U+f508
        constexpr static inline std::string_view UserXmark{ "\xef\x88\xb5" };                          // U+f235
        constexpr static inline std::string_view Users{ "\xef\x83\x80" };                              // U+f0c0
        constexpr static inline std::string_view UsersBetweenLines{ "\xee\x96\x91" };                  // U+e591
        constexpr static inline std::string_view UsersGear{ "\xef\x94\x89" };                          // U+f509
        constexpr static inline std::string_view UsersLine{ "\xee\x96\x92" };                          // U+e592
        constexpr static inline std::string_view UsersRays{ "\xee\x96\x93" };                          // U+e593
        constexpr static inline std::string_view UsersRectangle{ "\xee\x96\x94" };                     // U+e594
        constexpr static inline std::string_view UsersSlash{ "\xee\x81\xb3" };                         // U+e073
        constexpr static inline std::string_view UsersViewfinder{ "\xee\x96\x95" };                    // U+e595
        constexpr static inline std::string_view Utensils{ "\xef\x8b\xa7" };                           // U+f2e7
        constexpr static inline std::string_view V{ "V" };                                             // U+0056
        constexpr static inline std::string_view VanShuttle{ "\xef\x96\xb6" };                         // U+f5b6
        constexpr static inline std::string_view Vault{ "\xee\x8b\x85" };                              // U+e2c5
        constexpr static inline std::string_view VectorSquare{ "\xef\x97\x8b" };                       // U+f5cb
        constexpr static inline std::string_view Venus{ "\xef\x88\xa1" };                              // U+f221
        constexpr static inline std::string_view VenusDouble{ "\xef\x88\xa6" };                        // U+f226
        constexpr static inline std::string_view VenusMars{ "\xef\x88\xa8" };                          // U+f228
        constexpr static inline std::string_view Vest{ "\xee\x82\x85" };                               // U+e085
        constexpr static inline std::string_view VestPatches{ "\xee\x82\x86" };                        // U+e086
        constexpr static inline std::string_view Vial{ "\xef\x92\x92" };                               // U+f492
        constexpr static inline std::string_view VialCircleCheck{ "\xee\x96\x96" };                    // U+e596
        constexpr static inline std::string_view VialVirus{ "\xee\x96\x97" };                          // U+e597
        constexpr static inline std::string_view Vials{ "\xef\x92\x93" };                              // U+f493
        constexpr static inline std::string_view Video{ "\xef\x80\xbd" };                              // U+f03d
        constexpr static inline std::string_view VideoSlash{ "\xef\x93\xa2" };                         // U+f4e2
        constexpr static inline std::string_view Vihara{ "\xef\x9a\xa7" };                             // U+f6a7
        constexpr static inline std::string_view Virus{ "\xee\x81\xb4" };                              // U+e074
        constexpr static inline std::string_view VirusCovid{ "\xee\x92\xa8" };                         // U+e4a8
        constexpr static inline std::string_view VirusCovidSlash{ "\xee\x92\xa9" };                    // U+e4a9
        constexpr static inline std::string_view VirusSlash{ "\xee\x81\xb5" };                         // U+e075
        constexpr static inline std::string_view Viruses{ "\xee\x81\xb6" };                            // U+e076
        constexpr static inline std::string_view Voicemail{ "\xef\xa2\x97" };                          // U+f897
        constexpr static inline std::string_view Volcano{ "\xef\x9d\xb0" };                            // U+f770
        constexpr static inline std::string_view Volleyball{ "\xef\x91\x9f" };                         // U+f45f
        constexpr static inline std::string_view VolumeHigh{ "\xef\x80\xa8" };                         // U+f028
        constexpr static inline std::string_view VolumeLow{ "\xef\x80\xa7" };                          // U+f027
        constexpr static inline std::string_view VolumeOff{ "\xef\x80\xa6" };                          // U+f026
        constexpr static inline std::string_view VolumeXmark{ "\xef\x9a\xa9" };                        // U+f6a9
        constexpr static inline std::string_view VrCardboard{ "\xef\x9c\xa9" };                        // U+f729
        constexpr static inline std::string_view W{ "W" };                                             // U+0057
        constexpr static inline std::string_view WalkieTalkie{ "\xef\xa3\xaf" };                       // U+f8ef
        constexpr static inline std::string_view Wallet{ "\xef\x95\x95" };                             // U+f555
        constexpr static inline std::string_view WandMagic{ "\xef\x83\x90" };                          // U+f0d0
        constexpr static inline std::string_view WandMagicSparkles{ "\xee\x8b\x8a" };                  // U+e2ca
        constexpr static inline std::string_view WandSparkles{ "\xef\x9c\xab" };                       // U+f72b
        constexpr static inline std::string_view Warehouse{ "\xef\x92\x94" };                          // U+f494
        constexpr static inline std::string_view Water{ "\xef\x9d\xb3" };                              // U+f773
        constexpr static inline std::string_view WaterLadder{ "\xef\x97\x85" };                        // U+f5c5
        constexpr static inline std::string_view WaveSquare{ "\xef\xa0\xbe" };                         // U+f83e
        constexpr static inline std::string_view WeightHanging{ "\xef\x97\x8d" };                      // U+f5cd
        constexpr static inline std::string_view WeightScale{ "\xef\x92\x96" };                        // U+f496
        constexpr static inline std::string_view WheatAwn{ "\xee\x8b\x8d" };                           // U+e2cd
        constexpr static inline std::string_view WheatAwnCircleExclamation{ "\xee\x96\x98" };          // U+e598
        constexpr static inline std::string_view Wheelchair{ "\xef\x86\x93" };                         // U+f193
        constexpr static inline std::string_view WheelchairMove{ "\xee\x8b\x8e" };                     // U+e2ce
        constexpr static inline std::string_view WhiskeyGlass{ "\xef\x9e\xa0" };                       // U+f7a0
        constexpr static inline std::string_view Wifi{ "\xef\x87\xab" };                               // U+f1eb
        constexpr static inline std::string_view Wind{ "\xef\x9c\xae" };                               // U+f72e
        constexpr static inline std::string_view WindowMaximize{ "\xef\x8b\x90" };                     // U+f2d0
        constexpr static inline std::string_view WindowMinimize{ "\xef\x8b\x91" };                     // U+f2d1
        constexpr static inline std::string_view WindowRestore{ "\xef\x8b\x92" };                      // U+f2d2
        constexpr static inline std::string_view WineBottle{ "\xef\x9c\xaf" };                         // U+f72f
        constexpr static inline std::string_view WineGlass{ "\xef\x93\xa3" };                          // U+f4e3
        constexpr static inline std::string_view WineGlassEmpty{ "\xef\x97\x8e" };                     // U+f5ce
        constexpr static inline std::string_view WonSign{ "\xef\x85\x99" };                            // U+f159
        constexpr static inline std::string_view Worm{ "\xee\x96\x99" };                               // U+e599
        constexpr static inline std::string_view Wrench{ "\xef\x82\xad" };                             // U+f0ad
        constexpr static inline std::string_view X{ "X" };                                             // U+0058
        constexpr static inline std::string_view XRay{ "\xef\x92\x97" };                               // U+f497
        constexpr static inline std::string_view Xmark{ "\xef\x80\x8d" };                              // U+f00d
        constexpr static inline std::string_view XmarksLines{ "\xee\x96\x9a" };                        // U+e59a
        constexpr static inline std::string_view Y{ "Y" };                                             // U+0059
        constexpr static inline std::string_view YenSign{ "\xef\x85\x97" };                            // U+f157
        constexpr static inline std::string_view YinYang{ "\xef\x9a\xad" };                            // U+f6ad
        constexpr static inline std::string_view Z{ "Z" };                                             // U+005a
    };
}
