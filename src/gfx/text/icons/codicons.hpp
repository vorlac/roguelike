#pragma once

#include <string_view>

#include "utils/numeric.hpp"

namespace rl::ui::icon {

    struct Codicon
    {
        constexpr static inline std::string_view FileName{ "codicon.ttf" };

        constexpr static inline u16 IconMin{ 0xea60 };
        constexpr static inline u16 IconMax16{ 0xf101 };
        constexpr static inline u16 IconMax{ 0xf101 };

        constexpr static inline std::string_view Add{ "\xee\xa9\xa0" };                                   // U+ea60
        constexpr static inline std::string_view Plus{ "\xee\xa9\xa0" };                                  // U+ea60
        constexpr static inline std::string_view GistNew{ "\xee\xa9\xa0" };                               // U+ea60
        constexpr static inline std::string_view RepoCreate{ "\xee\xa9\xa0" };                            // U+ea60
        constexpr static inline std::string_view Lightbulb{ "\xee\xa9\xa1" };                             // U+ea61
        constexpr static inline std::string_view LightBulb{ "\xee\xa9\xa1" };                             // U+ea61
        constexpr static inline std::string_view Repo{ "\xee\xa9\xa2" };                                  // U+ea62
        constexpr static inline std::string_view RepoDelete{ "\xee\xa9\xa2" };                            // U+ea62
        constexpr static inline std::string_view GistFork{ "\xee\xa9\xa3" };                              // U+ea63
        constexpr static inline std::string_view RepoForked{ "\xee\xa9\xa3" };                            // U+ea63
        constexpr static inline std::string_view GitPullRequest{ "\xee\xa9\xa4" };                        // U+ea64
        constexpr static inline std::string_view GitPullRequestAbandoned{ "\xee\xa9\xa4" };               // U+ea64
        constexpr static inline std::string_view RecordKeys{ "\xee\xa9\xa5" };                            // U+ea65
        constexpr static inline std::string_view Keyboard{ "\xee\xa9\xa5" };                              // U+ea65
        constexpr static inline std::string_view Tag{ "\xee\xa9\xa6" };                                   // U+ea66
        constexpr static inline std::string_view GitPullRequestLabel{ "\xee\xa9\xa6" };                   // U+ea66
        constexpr static inline std::string_view TagAdd{ "\xee\xa9\xa6" };                                // U+ea66
        constexpr static inline std::string_view TagRemove{ "\xee\xa9\xa6" };                             // U+ea66
        constexpr static inline std::string_view Person{ "\xee\xa9\xa7" };                                // U+ea67
        constexpr static inline std::string_view PersonFollow{ "\xee\xa9\xa7" };                          // U+ea67
        constexpr static inline std::string_view PersonOutline{ "\xee\xa9\xa7" };                         // U+ea67
        constexpr static inline std::string_view PersonFilled{ "\xee\xa9\xa7" };                          // U+ea67
        constexpr static inline std::string_view GitBranch{ "\xee\xa9\xa8" };                             // U+ea68
        constexpr static inline std::string_view GitBranchCreate{ "\xee\xa9\xa8" };                       // U+ea68
        constexpr static inline std::string_view GitBranchDelete{ "\xee\xa9\xa8" };                       // U+ea68
        constexpr static inline std::string_view SourceControl{ "\xee\xa9\xa8" };                         // U+ea68
        constexpr static inline std::string_view Mirror{ "\xee\xa9\xa9" };                                // U+ea69
        constexpr static inline std::string_view MirrorPublic{ "\xee\xa9\xa9" };                          // U+ea69
        constexpr static inline std::string_view Star{ "\xee\xa9\xaa" };                                  // U+ea6a
        constexpr static inline std::string_view StarAdd{ "\xee\xa9\xaa" };                               // U+ea6a
        constexpr static inline std::string_view StarDelete{ "\xee\xa9\xaa" };                            // U+ea6a
        constexpr static inline std::string_view StarEmpty{ "\xee\xa9\xaa" };                             // U+ea6a
        constexpr static inline std::string_view Comment{ "\xee\xa9\xab" };                               // U+ea6b
        constexpr static inline std::string_view CommentAdd{ "\xee\xa9\xab" };                            // U+ea6b
        constexpr static inline std::string_view Alert{ "\xee\xa9\xac" };                                 // U+ea6c
        constexpr static inline std::string_view Warning{ "\xee\xa9\xac" };                               // U+ea6c
        constexpr static inline std::string_view Search{ "\xee\xa9\xad" };                                // U+ea6d
        constexpr static inline std::string_view SearchSave{ "\xee\xa9\xad" };                            // U+ea6d
        constexpr static inline std::string_view LogOut{ "\xee\xa9\xae" };                                // U+ea6e
        constexpr static inline std::string_view SignOut{ "\xee\xa9\xae" };                               // U+ea6e
        constexpr static inline std::string_view LogIn{ "\xee\xa9\xaf" };                                 // U+ea6f
        constexpr static inline std::string_view SignIn{ "\xee\xa9\xaf" };                                // U+ea6f
        constexpr static inline std::string_view Eye{ "\xee\xa9\xb0" };                                   // U+ea70
        constexpr static inline std::string_view EyeUnwatch{ "\xee\xa9\xb0" };                            // U+ea70
        constexpr static inline std::string_view EyeWatch{ "\xee\xa9\xb0" };                              // U+ea70
        constexpr static inline std::string_view CircleFilled{ "\xee\xa9\xb1" };                          // U+ea71
        constexpr static inline std::string_view PrimitiveDot{ "\xee\xa9\xb1" };                          // U+ea71
        constexpr static inline std::string_view CloseDirty{ "\xee\xa9\xb1" };                            // U+ea71
        constexpr static inline std::string_view DebugBreakpoint{ "\xee\xa9\xb1" };                       // U+ea71
        constexpr static inline std::string_view DebugBreakpointDisabled{ "\xee\xa9\xb1" };               // U+ea71
        constexpr static inline std::string_view DebugHint{ "\xee\xa9\xb1" };                             // U+ea71
        constexpr static inline std::string_view TerminalDecorationSuccess{ "\xee\xa9\xb1" };             // U+ea71
        constexpr static inline std::string_view PrimitiveSquare{ "\xee\xa9\xb2" };                       // U+ea72
        constexpr static inline std::string_view Edit{ "\xee\xa9\xb3" };                                  // U+ea73
        constexpr static inline std::string_view Pencil{ "\xee\xa9\xb3" };                                // U+ea73
        constexpr static inline std::string_view Info{ "\xee\xa9\xb4" };                                  // U+ea74
        constexpr static inline std::string_view IssueOpened{ "\xee\xa9\xb4" };                           // U+ea74
        constexpr static inline std::string_view GistPrivate{ "\xee\xa9\xb5" };                           // U+ea75
        constexpr static inline std::string_view GitForkPrivate{ "\xee\xa9\xb5" };                        // U+ea75
        constexpr static inline std::string_view Lock{ "\xee\xa9\xb5" };                                  // U+ea75
        constexpr static inline std::string_view MirrorPrivate{ "\xee\xa9\xb5" };                         // U+ea75
        constexpr static inline std::string_view Close{ "\xee\xa9\xb6" };                                 // U+ea76
        constexpr static inline std::string_view RemoveClose{ "\xee\xa9\xb6" };                           // U+ea76
        constexpr static inline std::string_view X{ "\xee\xa9\xb6" };                                     // U+ea76
        constexpr static inline std::string_view RepoSync{ "\xee\xa9\xb7" };                              // U+ea77
        constexpr static inline std::string_view Sync{ "\xee\xa9\xb7" };                                  // U+ea77
        constexpr static inline std::string_view Clone{ "\xee\xa9\xb8" };                                 // U+ea78
        constexpr static inline std::string_view DesktopDownload{ "\xee\xa9\xb8" };                       // U+ea78
        constexpr static inline std::string_view Beaker{ "\xee\xa9\xb9" };                                // U+ea79
        constexpr static inline std::string_view Microscope{ "\xee\xa9\xb9" };                            // U+ea79
        constexpr static inline std::string_view Vm{ "\xee\xa9\xba" };                                    // U+ea7a
        constexpr static inline std::string_view DeviceDesktop{ "\xee\xa9\xba" };                         // U+ea7a
        constexpr static inline std::string_view File{ "\xee\xa9\xbb" };                                  // U+ea7b
        constexpr static inline std::string_view FileText{ "\xee\xa9\xbb" };                              // U+ea7b
        constexpr static inline std::string_view More{ "\xee\xa9\xbc" };                                  // U+ea7c
        constexpr static inline std::string_view Ellipsis{ "\xee\xa9\xbc" };                              // U+ea7c
        constexpr static inline std::string_view KebabHorizontal{ "\xee\xa9\xbc" };                       // U+ea7c
        constexpr static inline std::string_view MailReply{ "\xee\xa9\xbd" };                             // U+ea7d
        constexpr static inline std::string_view Reply{ "\xee\xa9\xbd" };                                 // U+ea7d
        constexpr static inline std::string_view Organization{ "\xee\xa9\xbe" };                          // U+ea7e
        constexpr static inline std::string_view OrganizationFilled{ "\xee\xa9\xbe" };                    // U+ea7e
        constexpr static inline std::string_view OrganizationOutline{ "\xee\xa9\xbe" };                   // U+ea7e
        constexpr static inline std::string_view NewFile{ "\xee\xa9\xbf" };                               // U+ea7f
        constexpr static inline std::string_view FileAdd{ "\xee\xa9\xbf" };                               // U+ea7f
        constexpr static inline std::string_view NewFolder{ "\xee\xaa\x80" };                             // U+ea80
        constexpr static inline std::string_view FileDirectoryCreate{ "\xee\xaa\x80" };                   // U+ea80
        constexpr static inline std::string_view Trash{ "\xee\xaa\x81" };                                 // U+ea81
        constexpr static inline std::string_view Trashcan{ "\xee\xaa\x81" };                              // U+ea81
        constexpr static inline std::string_view History{ "\xee\xaa\x82" };                               // U+ea82
        constexpr static inline std::string_view Clock{ "\xee\xaa\x82" };                                 // U+ea82
        constexpr static inline std::string_view Folder{ "\xee\xaa\x83" };                                // U+ea83
        constexpr static inline std::string_view FileDirectory{ "\xee\xaa\x83" };                         // U+ea83
        constexpr static inline std::string_view SymbolFolder{ "\xee\xaa\x83" };                          // U+ea83
        constexpr static inline std::string_view LogoGithub{ "\xee\xaa\x84" };                            // U+ea84
        constexpr static inline std::string_view MarkGithub{ "\xee\xaa\x84" };                            // U+ea84
        constexpr static inline std::string_view Github{ "\xee\xaa\x84" };                                // U+ea84
        constexpr static inline std::string_view Terminal{ "\xee\xaa\x85" };                              // U+ea85
        constexpr static inline std::string_view Console{ "\xee\xaa\x85" };                               // U+ea85
        constexpr static inline std::string_view Repl{ "\xee\xaa\x85" };                                  // U+ea85
        constexpr static inline std::string_view Zap{ "\xee\xaa\x86" };                                   // U+ea86
        constexpr static inline std::string_view SymbolEvent{ "\xee\xaa\x86" };                           // U+ea86
        constexpr static inline std::string_view Error{ "\xee\xaa\x87" };                                 // U+ea87
        constexpr static inline std::string_view Stop{ "\xee\xaa\x87" };                                  // U+ea87
        constexpr static inline std::string_view Variable{ "\xee\xaa\x88" };                              // U+ea88
        constexpr static inline std::string_view SymbolVariable{ "\xee\xaa\x88" };                        // U+ea88
        constexpr static inline std::string_view Array{ "\xee\xaa\x8a" };                                 // U+ea8a
        constexpr static inline std::string_view SymbolArray{ "\xee\xaa\x8a" };                           // U+ea8a
        constexpr static inline std::string_view SymbolModule{ "\xee\xaa\x8b" };                          // U+ea8b
        constexpr static inline std::string_view SymbolPackage{ "\xee\xaa\x8b" };                         // U+ea8b
        constexpr static inline std::string_view SymbolNamespace{ "\xee\xaa\x8b" };                       // U+ea8b
        constexpr static inline std::string_view SymbolObject{ "\xee\xaa\x8b" };                          // U+ea8b
        constexpr static inline std::string_view SymbolMethod{ "\xee\xaa\x8c" };                          // U+ea8c
        constexpr static inline std::string_view SymbolFunction{ "\xee\xaa\x8c" };                        // U+ea8c
        constexpr static inline std::string_view SymbolConstructor{ "\xee\xaa\x8c" };                     // U+ea8c
        constexpr static inline std::string_view SymbolBoolean{ "\xee\xaa\x8f" };                         // U+ea8f
        constexpr static inline std::string_view SymbolNull{ "\xee\xaa\x8f" };                            // U+ea8f
        constexpr static inline std::string_view SymbolNumeric{ "\xee\xaa\x90" };                         // U+ea90
        constexpr static inline std::string_view SymbolNumber{ "\xee\xaa\x90" };                          // U+ea90
        constexpr static inline std::string_view SymbolStructure{ "\xee\xaa\x91" };                       // U+ea91
        constexpr static inline std::string_view SymbolStruct{ "\xee\xaa\x91" };                          // U+ea91
        constexpr static inline std::string_view SymbolParameter{ "\xee\xaa\x92" };                       // U+ea92
        constexpr static inline std::string_view SymbolTypeParameter{ "\xee\xaa\x92" };                   // U+ea92
        constexpr static inline std::string_view SymbolKey{ "\xee\xaa\x93" };                             // U+ea93
        constexpr static inline std::string_view SymbolText{ "\xee\xaa\x93" };                            // U+ea93
        constexpr static inline std::string_view SymbolReference{ "\xee\xaa\x94" };                       // U+ea94
        constexpr static inline std::string_view GoToFile{ "\xee\xaa\x94" };                              // U+ea94
        constexpr static inline std::string_view SymbolEnum{ "\xee\xaa\x95" };                            // U+ea95
        constexpr static inline std::string_view SymbolValue{ "\xee\xaa\x95" };                           // U+ea95
        constexpr static inline std::string_view SymbolRuler{ "\xee\xaa\x96" };                           // U+ea96
        constexpr static inline std::string_view SymbolUnit{ "\xee\xaa\x96" };                            // U+ea96
        constexpr static inline std::string_view ActivateBreakpoints{ "\xee\xaa\x97" };                   // U+ea97
        constexpr static inline std::string_view Archive{ "\xee\xaa\x98" };                               // U+ea98
        constexpr static inline std::string_view ArrowBoth{ "\xee\xaa\x99" };                             // U+ea99
        constexpr static inline std::string_view ArrowDown{ "\xee\xaa\x9a" };                             // U+ea9a
        constexpr static inline std::string_view ArrowLeft{ "\xee\xaa\x9b" };                             // U+ea9b
        constexpr static inline std::string_view ArrowRight{ "\xee\xaa\x9c" };                            // U+ea9c
        constexpr static inline std::string_view ArrowSmallDown{ "\xee\xaa\x9d" };                        // U+ea9d
        constexpr static inline std::string_view ArrowSmallLeft{ "\xee\xaa\x9e" };                        // U+ea9e
        constexpr static inline std::string_view ArrowSmallRight{ "\xee\xaa\x9f" };                       // U+ea9f
        constexpr static inline std::string_view ArrowSmallUp{ "\xee\xaa\xa0" };                          // U+eaa0
        constexpr static inline std::string_view ArrowUp{ "\xee\xaa\xa1" };                               // U+eaa1
        constexpr static inline std::string_view Bell{ "\xee\xaa\xa2" };                                  // U+eaa2
        constexpr static inline std::string_view Bold{ "\xee\xaa\xa3" };                                  // U+eaa3
        constexpr static inline std::string_view Book{ "\xee\xaa\xa4" };                                  // U+eaa4
        constexpr static inline std::string_view Bookmark{ "\xee\xaa\xa5" };                              // U+eaa5
        constexpr static inline std::string_view DebugBreakpointConditionalUnverified{ "\xee\xaa\xa6" };  // U+eaa6
        constexpr static inline std::string_view DebugBreakpointConditional{ "\xee\xaa\xa7" };            // U+eaa7
        constexpr static inline std::string_view DebugBreakpointConditionalDisabled{ "\xee\xaa\xa7" };    // U+eaa7
        constexpr static inline std::string_view DebugBreakpointDataUnverified{ "\xee\xaa\xa8" };         // U+eaa8
        constexpr static inline std::string_view DebugBreakpointData{ "\xee\xaa\xa9" };                   // U+eaa9
        constexpr static inline std::string_view DebugBreakpointDataDisabled{ "\xee\xaa\xa9" };           // U+eaa9
        constexpr static inline std::string_view DebugBreakpointLogUnverified{ "\xee\xaa\xaa" };          // U+eaaa
        constexpr static inline std::string_view DebugBreakpointLog{ "\xee\xaa\xab" };                    // U+eaab
        constexpr static inline std::string_view DebugBreakpointLogDisabled{ "\xee\xaa\xab" };            // U+eaab
        constexpr static inline std::string_view Briefcase{ "\xee\xaa\xac" };                             // U+eaac
        constexpr static inline std::string_view Broadcast{ "\xee\xaa\xad" };                             // U+eaad
        constexpr static inline std::string_view Browser{ "\xee\xaa\xae" };                               // U+eaae
        constexpr static inline std::string_view Bug{ "\xee\xaa\xaf" };                                   // U+eaaf
        constexpr static inline std::string_view Calendar{ "\xee\xaa\xb0" };                              // U+eab0
        constexpr static inline std::string_view CaseSensitive{ "\xee\xaa\xb1" };                         // U+eab1
        constexpr static inline std::string_view Check{ "\xee\xaa\xb2" };                                 // U+eab2
        constexpr static inline std::string_view Checklist{ "\xee\xaa\xb3" };                             // U+eab3
        constexpr static inline std::string_view ChevronDown{ "\xee\xaa\xb4" };                           // U+eab4
        constexpr static inline std::string_view ChevronLeft{ "\xee\xaa\xb5" };                           // U+eab5
        constexpr static inline std::string_view ChevronRight{ "\xee\xaa\xb6" };                          // U+eab6
        constexpr static inline std::string_view ChevronUp{ "\xee\xaa\xb7" };                             // U+eab7
        constexpr static inline std::string_view ChromeClose{ "\xee\xaa\xb8" };                           // U+eab8
        constexpr static inline std::string_view ChromeMaximize{ "\xee\xaa\xb9" };                        // U+eab9
        constexpr static inline std::string_view ChromeMinimize{ "\xee\xaa\xba" };                        // U+eaba
        constexpr static inline std::string_view ChromeRestore{ "\xee\xaa\xbb" };                         // U+eabb
        constexpr static inline std::string_view CircleOutline{ "\xee\xaa\xbc" };                         // U+eabc
        constexpr static inline std::string_view Circle{ "\xee\xaa\xbc" };                                // U+eabc
        constexpr static inline std::string_view DebugBreakpointUnverified{ "\xee\xaa\xbc" };             // U+eabc
        constexpr static inline std::string_view TerminalDecorationIncomplete{ "\xee\xaa\xbc" };          // U+eabc
        constexpr static inline std::string_view CircleSlash{ "\xee\xaa\xbd" };                           // U+eabd
        constexpr static inline std::string_view CircuitBoard{ "\xee\xaa\xbe" };                          // U+eabe
        constexpr static inline std::string_view ClearAll{ "\xee\xaa\xbf" };                              // U+eabf
        constexpr static inline std::string_view Clippy{ "\xee\xab\x80" };                                // U+eac0
        constexpr static inline std::string_view CloseAll{ "\xee\xab\x81" };                              // U+eac1
        constexpr static inline std::string_view CloudDownload{ "\xee\xab\x82" };                         // U+eac2
        constexpr static inline std::string_view CloudUpload{ "\xee\xab\x83" };                           // U+eac3
        constexpr static inline std::string_view Code{ "\xee\xab\x84" };                                  // U+eac4
        constexpr static inline std::string_view CollapseAll{ "\xee\xab\x85" };                           // U+eac5
        constexpr static inline std::string_view ColorMode{ "\xee\xab\x86" };                             // U+eac6
        constexpr static inline std::string_view CommentDiscussion{ "\xee\xab\x87" };                     // U+eac7
        constexpr static inline std::string_view CreditCard{ "\xee\xab\x89" };                            // U+eac9
        constexpr static inline std::string_view Dash{ "\xee\xab\x8c" };                                  // U+eacc
        constexpr static inline std::string_view Dashboard{ "\xee\xab\x8d" };                             // U+eacd
        constexpr static inline std::string_view Database{ "\xee\xab\x8e" };                              // U+eace
        constexpr static inline std::string_view DebugContinue{ "\xee\xab\x8f" };                         // U+eacf
        constexpr static inline std::string_view DebugDisconnect{ "\xee\xab\x90" };                       // U+ead0
        constexpr static inline std::string_view DebugPause{ "\xee\xab\x91" };                            // U+ead1
        constexpr static inline std::string_view DebugRestart{ "\xee\xab\x92" };                          // U+ead2
        constexpr static inline std::string_view DebugStart{ "\xee\xab\x93" };                            // U+ead3
        constexpr static inline std::string_view DebugStepInto{ "\xee\xab\x94" };                         // U+ead4
        constexpr static inline std::string_view DebugStepOut{ "\xee\xab\x95" };                          // U+ead5
        constexpr static inline std::string_view DebugStepOver{ "\xee\xab\x96" };                         // U+ead6
        constexpr static inline std::string_view DebugStop{ "\xee\xab\x97" };                             // U+ead7
        constexpr static inline std::string_view Debug{ "\xee\xab\x98" };                                 // U+ead8
        constexpr static inline std::string_view DeviceCameraVideo{ "\xee\xab\x99" };                     // U+ead9
        constexpr static inline std::string_view DeviceCamera{ "\xee\xab\x9a" };                          // U+eada
        constexpr static inline std::string_view DeviceMobile{ "\xee\xab\x9b" };                          // U+eadb
        constexpr static inline std::string_view DiffAdded{ "\xee\xab\x9c" };                             // U+eadc
        constexpr static inline std::string_view DiffIgnored{ "\xee\xab\x9d" };                           // U+eadd
        constexpr static inline std::string_view DiffModified{ "\xee\xab\x9e" };                          // U+eade
        constexpr static inline std::string_view DiffRemoved{ "\xee\xab\x9f" };                           // U+eadf
        constexpr static inline std::string_view DiffRenamed{ "\xee\xab\xa0" };                           // U+eae0
        constexpr static inline std::string_view Diff{ "\xee\xab\xa1" };                                  // U+eae1
        constexpr static inline std::string_view DiffSidebyside{ "\xee\xab\xa1" };                        // U+eae1
        constexpr static inline std::string_view Discard{ "\xee\xab\xa2" };                               // U+eae2
        constexpr static inline std::string_view EditorLayout{ "\xee\xab\xa3" };                          // U+eae3
        constexpr static inline std::string_view EmptyWindow{ "\xee\xab\xa4" };                           // U+eae4
        constexpr static inline std::string_view Exclude{ "\xee\xab\xa5" };                               // U+eae5
        constexpr static inline std::string_view Extensions{ "\xee\xab\xa6" };                            // U+eae6
        constexpr static inline std::string_view EyeClosed{ "\xee\xab\xa7" };                             // U+eae7
        constexpr static inline std::string_view FileBinary{ "\xee\xab\xa8" };                            // U+eae8
        constexpr static inline std::string_view FileCode{ "\xee\xab\xa9" };                              // U+eae9
        constexpr static inline std::string_view FileMedia{ "\xee\xab\xaa" };                             // U+eaea
        constexpr static inline std::string_view FilePdf{ "\xee\xab\xab" };                               // U+eaeb
        constexpr static inline std::string_view FileSubmodule{ "\xee\xab\xac" };                         // U+eaec
        constexpr static inline std::string_view FileSymlinkDirectory{ "\xee\xab\xad" };                  // U+eaed
        constexpr static inline std::string_view FileSymlinkFile{ "\xee\xab\xae" };                       // U+eaee
        constexpr static inline std::string_view FileZip{ "\xee\xab\xaf" };                               // U+eaef
        constexpr static inline std::string_view Files{ "\xee\xab\xb0" };                                 // U+eaf0
        constexpr static inline std::string_view Filter{ "\xee\xab\xb1" };                                // U+eaf1
        constexpr static inline std::string_view Flame{ "\xee\xab\xb2" };                                 // U+eaf2
        constexpr static inline std::string_view FoldDown{ "\xee\xab\xb3" };                              // U+eaf3
        constexpr static inline std::string_view FoldUp{ "\xee\xab\xb4" };                                // U+eaf4
        constexpr static inline std::string_view Fold{ "\xee\xab\xb5" };                                  // U+eaf5
        constexpr static inline std::string_view FolderActive{ "\xee\xab\xb6" };                          // U+eaf6
        constexpr static inline std::string_view FolderOpened{ "\xee\xab\xb7" };                          // U+eaf7
        constexpr static inline std::string_view Gear{ "\xee\xab\xb8" };                                  // U+eaf8
        constexpr static inline std::string_view Gift{ "\xee\xab\xb9" };                                  // U+eaf9
        constexpr static inline std::string_view GistSecret{ "\xee\xab\xba" };                            // U+eafa
        constexpr static inline std::string_view Gist{ "\xee\xab\xbb" };                                  // U+eafb
        constexpr static inline std::string_view GitCommit{ "\xee\xab\xbc" };                             // U+eafc
        constexpr static inline std::string_view GitCompare{ "\xee\xab\xbd" };                            // U+eafd
        constexpr static inline std::string_view CompareChanges{ "\xee\xab\xbd" };                        // U+eafd
        constexpr static inline std::string_view GitMerge{ "\xee\xab\xbe" };                              // U+eafe
        constexpr static inline std::string_view GithubAction{ "\xee\xab\xbf" };                          // U+eaff
        constexpr static inline std::string_view GithubAlt{ "\xee\xac\x80" };                             // U+eb00
        constexpr static inline std::string_view Globe{ "\xee\xac\x81" };                                 // U+eb01
        constexpr static inline std::string_view Grabber{ "\xee\xac\x82" };                               // U+eb02
        constexpr static inline std::string_view Graph{ "\xee\xac\x83" };                                 // U+eb03
        constexpr static inline std::string_view Gripper{ "\xee\xac\x84" };                               // U+eb04
        constexpr static inline std::string_view Heart{ "\xee\xac\x85" };                                 // U+eb05
        constexpr static inline std::string_view Home{ "\xee\xac\x86" };                                  // U+eb06
        constexpr static inline std::string_view HorizontalRule{ "\xee\xac\x87" };                        // U+eb07
        constexpr static inline std::string_view Hubot{ "\xee\xac\x88" };                                 // U+eb08
        constexpr static inline std::string_view Inbox{ "\xee\xac\x89" };                                 // U+eb09
        constexpr static inline std::string_view IssueReopened{ "\xee\xac\x8b" };                         // U+eb0b
        constexpr static inline std::string_view Issues{ "\xee\xac\x8c" };                                // U+eb0c
        constexpr static inline std::string_view Italic{ "\xee\xac\x8d" };                                // U+eb0d
        constexpr static inline std::string_view Jersey{ "\xee\xac\x8e" };                                // U+eb0e
        constexpr static inline std::string_view Json{ "\xee\xac\x8f" };                                  // U+eb0f
        constexpr static inline std::string_view KebabVertical{ "\xee\xac\x90" };                         // U+eb10
        constexpr static inline std::string_view Key{ "\xee\xac\x91" };                                   // U+eb11
        constexpr static inline std::string_view Law{ "\xee\xac\x92" };                                   // U+eb12
        constexpr static inline std::string_view LightbulbAutofix{ "\xee\xac\x93" };                      // U+eb13
        constexpr static inline std::string_view LinkExternal{ "\xee\xac\x94" };                          // U+eb14
        constexpr static inline std::string_view Link{ "\xee\xac\x95" };                                  // U+eb15
        constexpr static inline std::string_view ListOrdered{ "\xee\xac\x96" };                           // U+eb16
        constexpr static inline std::string_view ListUnordered{ "\xee\xac\x97" };                         // U+eb17
        constexpr static inline std::string_view LiveShare{ "\xee\xac\x98" };                             // U+eb18
        constexpr static inline std::string_view Loading{ "\xee\xac\x99" };                               // U+eb19
        constexpr static inline std::string_view Location{ "\xee\xac\x9a" };                              // U+eb1a
        constexpr static inline std::string_view MailRead{ "\xee\xac\x9b" };                              // U+eb1b
        constexpr static inline std::string_view Mail{ "\xee\xac\x9c" };                                  // U+eb1c
        constexpr static inline std::string_view Markdown{ "\xee\xac\x9d" };                              // U+eb1d
        constexpr static inline std::string_view Megaphone{ "\xee\xac\x9e" };                             // U+eb1e
        constexpr static inline std::string_view Mention{ "\xee\xac\x9f" };                               // U+eb1f
        constexpr static inline std::string_view Milestone{ "\xee\xac\xa0" };                             // U+eb20
        constexpr static inline std::string_view GitPullRequestMilestone{ "\xee\xac\xa0" };               // U+eb20
        constexpr static inline std::string_view MortarBoard{ "\xee\xac\xa1" };                           // U+eb21
        constexpr static inline std::string_view Move{ "\xee\xac\xa2" };                                  // U+eb22
        constexpr static inline std::string_view MultipleWindows{ "\xee\xac\xa3" };                       // U+eb23
        constexpr static inline std::string_view Mute{ "\xee\xac\xa4" };                                  // U+eb24
        constexpr static inline std::string_view NoNewline{ "\xee\xac\xa5" };                             // U+eb25
        constexpr static inline std::string_view Note{ "\xee\xac\xa6" };                                  // U+eb26
        constexpr static inline std::string_view Octoface{ "\xee\xac\xa7" };                              // U+eb27
        constexpr static inline std::string_view OpenPreview{ "\xee\xac\xa8" };                           // U+eb28
        constexpr static inline std::string_view Package{ "\xee\xac\xa9" };                               // U+eb29
        constexpr static inline std::string_view Paintcan{ "\xee\xac\xaa" };                              // U+eb2a
        constexpr static inline std::string_view Pin{ "\xee\xac\xab" };                                   // U+eb2b
        constexpr static inline std::string_view Play{ "\xee\xac\xac" };                                  // U+eb2c
        constexpr static inline std::string_view Run{ "\xee\xac\xac" };                                   // U+eb2c
        constexpr static inline std::string_view Plug{ "\xee\xac\xad" };                                  // U+eb2d
        constexpr static inline std::string_view PreserveCase{ "\xee\xac\xae" };                          // U+eb2e
        constexpr static inline std::string_view Preview{ "\xee\xac\xaf" };                               // U+eb2f
        constexpr static inline std::string_view Project{ "\xee\xac\xb0" };                               // U+eb30
        constexpr static inline std::string_view Pulse{ "\xee\xac\xb1" };                                 // U+eb31
        constexpr static inline std::string_view Question{ "\xee\xac\xb2" };                              // U+eb32
        constexpr static inline std::string_view Quote{ "\xee\xac\xb3" };                                 // U+eb33
        constexpr static inline std::string_view RadioTower{ "\xee\xac\xb4" };                            // U+eb34
        constexpr static inline std::string_view Reactions{ "\xee\xac\xb5" };                             // U+eb35
        constexpr static inline std::string_view References{ "\xee\xac\xb6" };                            // U+eb36
        constexpr static inline std::string_view Refresh{ "\xee\xac\xb7" };                               // U+eb37
        constexpr static inline std::string_view Regex{ "\xee\xac\xb8" };                                 // U+eb38
        constexpr static inline std::string_view RemoteExplorer{ "\xee\xac\xb9" };                        // U+eb39
        constexpr static inline std::string_view Remote{ "\xee\xac\xba" };                                // U+eb3a
        constexpr static inline std::string_view Remove{ "\xee\xac\xbb" };                                // U+eb3b
        constexpr static inline std::string_view ReplaceAll{ "\xee\xac\xbc" };                            // U+eb3c
        constexpr static inline std::string_view Replace{ "\xee\xac\xbd" };                               // U+eb3d
        constexpr static inline std::string_view RepoClone{ "\xee\xac\xbe" };                             // U+eb3e
        constexpr static inline std::string_view RepoForcePush{ "\xee\xac\xbf" };                         // U+eb3f
        constexpr static inline std::string_view RepoPull{ "\xee\xad\x80" };                              // U+eb40
        constexpr static inline std::string_view RepoPush{ "\xee\xad\x81" };                              // U+eb41
        constexpr static inline std::string_view Report{ "\xee\xad\x82" };                                // U+eb42
        constexpr static inline std::string_view RequestChanges{ "\xee\xad\x83" };                        // U+eb43
        constexpr static inline std::string_view Rocket{ "\xee\xad\x84" };                                // U+eb44
        constexpr static inline std::string_view RootFolderOpened{ "\xee\xad\x85" };                      // U+eb45
        constexpr static inline std::string_view RootFolder{ "\xee\xad\x86" };                            // U+eb46
        constexpr static inline std::string_view Rss{ "\xee\xad\x87" };                                   // U+eb47
        constexpr static inline std::string_view Ruby{ "\xee\xad\x88" };                                  // U+eb48
        constexpr static inline std::string_view SaveAll{ "\xee\xad\x89" };                               // U+eb49
        constexpr static inline std::string_view SaveAs{ "\xee\xad\x8a" };                                // U+eb4a
        constexpr static inline std::string_view Save{ "\xee\xad\x8b" };                                  // U+eb4b
        constexpr static inline std::string_view ScreenFull{ "\xee\xad\x8c" };                            // U+eb4c
        constexpr static inline std::string_view ScreenNormal{ "\xee\xad\x8d" };                          // U+eb4d
        constexpr static inline std::string_view SearchStop{ "\xee\xad\x8e" };                            // U+eb4e
        constexpr static inline std::string_view Server{ "\xee\xad\x90" };                                // U+eb50
        constexpr static inline std::string_view SettingsGear{ "\xee\xad\x91" };                          // U+eb51
        constexpr static inline std::string_view Settings{ "\xee\xad\x92" };                              // U+eb52
        constexpr static inline std::string_view Shield{ "\xee\xad\x93" };                                // U+eb53
        constexpr static inline std::string_view Smiley{ "\xee\xad\x94" };                                // U+eb54
        constexpr static inline std::string_view SortPrecedence{ "\xee\xad\x95" };                        // U+eb55
        constexpr static inline std::string_view SplitHorizontal{ "\xee\xad\x96" };                       // U+eb56
        constexpr static inline std::string_view SplitVertical{ "\xee\xad\x97" };                         // U+eb57
        constexpr static inline std::string_view Squirrel{ "\xee\xad\x98" };                              // U+eb58
        constexpr static inline std::string_view StarFull{ "\xee\xad\x99" };                              // U+eb59
        constexpr static inline std::string_view StarHalf{ "\xee\xad\x9a" };                              // U+eb5a
        constexpr static inline std::string_view SymbolClass{ "\xee\xad\x9b" };                           // U+eb5b
        constexpr static inline std::string_view SymbolColor{ "\xee\xad\x9c" };                           // U+eb5c
        constexpr static inline std::string_view SymbolConstant{ "\xee\xad\x9d" };                        // U+eb5d
        constexpr static inline std::string_view SymbolEnumMember{ "\xee\xad\x9e" };                      // U+eb5e
        constexpr static inline std::string_view SymbolField{ "\xee\xad\x9f" };                           // U+eb5f
        constexpr static inline std::string_view SymbolFile{ "\xee\xad\xa0" };                            // U+eb60
        constexpr static inline std::string_view SymbolInterface{ "\xee\xad\xa1" };                       // U+eb61
        constexpr static inline std::string_view SymbolKeyword{ "\xee\xad\xa2" };                         // U+eb62
        constexpr static inline std::string_view SymbolMisc{ "\xee\xad\xa3" };                            // U+eb63
        constexpr static inline std::string_view SymbolOperator{ "\xee\xad\xa4" };                        // U+eb64
        constexpr static inline std::string_view SymbolProperty{ "\xee\xad\xa5" };                        // U+eb65
        constexpr static inline std::string_view Wrench{ "\xee\xad\xa5" };                                // U+eb65
        constexpr static inline std::string_view WrenchSubaction{ "\xee\xad\xa5" };                       // U+eb65
        constexpr static inline std::string_view SymbolSnippet{ "\xee\xad\xa6" };                         // U+eb66
        constexpr static inline std::string_view Tasklist{ "\xee\xad\xa7" };                              // U+eb67
        constexpr static inline std::string_view Telescope{ "\xee\xad\xa8" };                             // U+eb68
        constexpr static inline std::string_view TextSize{ "\xee\xad\xa9" };                              // U+eb69
        constexpr static inline std::string_view ThreeBars{ "\xee\xad\xaa" };                             // U+eb6a
        constexpr static inline std::string_view Thumbsdown{ "\xee\xad\xab" };                            // U+eb6b
        constexpr static inline std::string_view Thumbsup{ "\xee\xad\xac" };                              // U+eb6c
        constexpr static inline std::string_view Tools{ "\xee\xad\xad" };                                 // U+eb6d
        constexpr static inline std::string_view TriangleDown{ "\xee\xad\xae" };                          // U+eb6e
        constexpr static inline std::string_view TriangleLeft{ "\xee\xad\xaf" };                          // U+eb6f
        constexpr static inline std::string_view TriangleRight{ "\xee\xad\xb0" };                         // U+eb70
        constexpr static inline std::string_view TriangleUp{ "\xee\xad\xb1" };                            // U+eb71
        constexpr static inline std::string_view Twitter{ "\xee\xad\xb2" };                               // U+eb72
        constexpr static inline std::string_view Unfold{ "\xee\xad\xb3" };                                // U+eb73
        constexpr static inline std::string_view Unlock{ "\xee\xad\xb4" };                                // U+eb74
        constexpr static inline std::string_view Unmute{ "\xee\xad\xb5" };                                // U+eb75
        constexpr static inline std::string_view Unverified{ "\xee\xad\xb6" };                            // U+eb76
        constexpr static inline std::string_view Verified{ "\xee\xad\xb7" };                              // U+eb77
        constexpr static inline std::string_view Versions{ "\xee\xad\xb8" };                              // U+eb78
        constexpr static inline std::string_view VmActive{ "\xee\xad\xb9" };                              // U+eb79
        constexpr static inline std::string_view VmOutline{ "\xee\xad\xba" };                             // U+eb7a
        constexpr static inline std::string_view VmRunning{ "\xee\xad\xbb" };                             // U+eb7b
        constexpr static inline std::string_view Watch{ "\xee\xad\xbc" };                                 // U+eb7c
        constexpr static inline std::string_view Whitespace{ "\xee\xad\xbd" };                            // U+eb7d
        constexpr static inline std::string_view WholeWord{ "\xee\xad\xbe" };                             // U+eb7e
        constexpr static inline std::string_view Window{ "\xee\xad\xbf" };                                // U+eb7f
        constexpr static inline std::string_view WordWrap{ "\xee\xae\x80" };                              // U+eb80
        constexpr static inline std::string_view ZoomIn{ "\xee\xae\x81" };                                // U+eb81
        constexpr static inline std::string_view ZoomOut{ "\xee\xae\x82" };                               // U+eb82
        constexpr static inline std::string_view ListFilter{ "\xee\xae\x83" };                            // U+eb83
        constexpr static inline std::string_view ListFlat{ "\xee\xae\x84" };                              // U+eb84
        constexpr static inline std::string_view ListSelection{ "\xee\xae\x85" };                         // U+eb85
        constexpr static inline std::string_view Selection{ "\xee\xae\x85" };                             // U+eb85
        constexpr static inline std::string_view ListTree{ "\xee\xae\x86" };                              // U+eb86
        constexpr static inline std::string_view DebugBreakpointFunctionUnverified{ "\xee\xae\x87" };     // U+eb87
        constexpr static inline std::string_view DebugBreakpointFunction{ "\xee\xae\x88" };               // U+eb88
        constexpr static inline std::string_view DebugBreakpointFunctionDisabled{ "\xee\xae\x88" };       // U+eb88
        constexpr static inline std::string_view DebugStackframeActive{ "\xee\xae\x89" };                 // U+eb89
        constexpr static inline std::string_view CircleSmallFilled{ "\xee\xae\x8a" };                     // U+eb8a
        constexpr static inline std::string_view DebugStackframeDot{ "\xee\xae\x8a" };                    // U+eb8a
        constexpr static inline std::string_view TerminalDecorationMark{ "\xee\xae\x8a" };                // U+eb8a
        constexpr static inline std::string_view DebugStackframe{ "\xee\xae\x8b" };                       // U+eb8b
        constexpr static inline std::string_view DebugStackframeFocused{ "\xee\xae\x8b" };                // U+eb8b
        constexpr static inline std::string_view DebugBreakpointUnsupported{ "\xee\xae\x8c" };            // U+eb8c
        constexpr static inline std::string_view SymbolString{ "\xee\xae\x8d" };                          // U+eb8d
        constexpr static inline std::string_view DebugReverseContinue{ "\xee\xae\x8e" };                  // U+eb8e
        constexpr static inline std::string_view DebugStepBack{ "\xee\xae\x8f" };                         // U+eb8f
        constexpr static inline std::string_view DebugRestartFrame{ "\xee\xae\x90" };                     // U+eb90
        constexpr static inline std::string_view DebugAlt{ "\xee\xae\x91" };                              // U+eb91
        constexpr static inline std::string_view CallIncoming{ "\xee\xae\x92" };                          // U+eb92
        constexpr static inline std::string_view CallOutgoing{ "\xee\xae\x93" };                          // U+eb93
        constexpr static inline std::string_view Menu{ "\xee\xae\x94" };                                  // U+eb94
        constexpr static inline std::string_view ExpandAll{ "\xee\xae\x95" };                             // U+eb95
        constexpr static inline std::string_view Feedback{ "\xee\xae\x96" };                              // U+eb96
        constexpr static inline std::string_view GitPullRequestReviewer{ "\xee\xae\x96" };                // U+eb96
        constexpr static inline std::string_view GroupByRefType{ "\xee\xae\x97" };                        // U+eb97
        constexpr static inline std::string_view UngroupByRefType{ "\xee\xae\x98" };                      // U+eb98
        constexpr static inline std::string_view Account{ "\xee\xae\x99" };                               // U+eb99
        constexpr static inline std::string_view GitPullRequestAssignee{ "\xee\xae\x99" };                // U+eb99
        constexpr static inline std::string_view BellDot{ "\xee\xae\x9a" };                               // U+eb9a
        constexpr static inline std::string_view DebugConsole{ "\xee\xae\x9b" };                          // U+eb9b
        constexpr static inline std::string_view Library{ "\xee\xae\x9c" };                               // U+eb9c
        constexpr static inline std::string_view Output{ "\xee\xae\x9d" };                                // U+eb9d
        constexpr static inline std::string_view RunAll{ "\xee\xae\x9e" };                                // U+eb9e
        constexpr static inline std::string_view SyncIgnored{ "\xee\xae\x9f" };                           // U+eb9f
        constexpr static inline std::string_view Pinned{ "\xee\xae\xa0" };                                // U+eba0
        constexpr static inline std::string_view GithubInverted{ "\xee\xae\xa1" };                        // U+eba1
        constexpr static inline std::string_view ServerProcess{ "\xee\xae\xa2" };                         // U+eba2
        constexpr static inline std::string_view ServerEnvironment{ "\xee\xae\xa3" };                     // U+eba3
        constexpr static inline std::string_view Pass{ "\xee\xae\xa4" };                                  // U+eba4
        constexpr static inline std::string_view IssueClosed{ "\xee\xae\xa4" };                           // U+eba4
        constexpr static inline std::string_view StopCircle{ "\xee\xae\xa5" };                            // U+eba5
        constexpr static inline std::string_view PlayCircle{ "\xee\xae\xa6" };                            // U+eba6
        constexpr static inline std::string_view Record{ "\xee\xae\xa7" };                                // U+eba7
        constexpr static inline std::string_view DebugAltSmall{ "\xee\xae\xa8" };                         // U+eba8
        constexpr static inline std::string_view VmConnect{ "\xee\xae\xa9" };                             // U+eba9
        constexpr static inline std::string_view Cloud{ "\xee\xae\xaa" };                                 // U+ebaa
        constexpr static inline std::string_view Merge{ "\xee\xae\xab" };                                 // U+ebab
        constexpr static inline std::string_view Export{ "\xee\xae\xac" };                                // U+ebac
        constexpr static inline std::string_view GraphLeft{ "\xee\xae\xad" };                             // U+ebad
        constexpr static inline std::string_view Magnet{ "\xee\xae\xae" };                                // U+ebae
        constexpr static inline std::string_view Notebook{ "\xee\xae\xaf" };                              // U+ebaf
        constexpr static inline std::string_view Redo{ "\xee\xae\xb0" };                                  // U+ebb0
        constexpr static inline std::string_view CheckAll{ "\xee\xae\xb1" };                              // U+ebb1
        constexpr static inline std::string_view PinnedDirty{ "\xee\xae\xb2" };                           // U+ebb2
        constexpr static inline std::string_view PassFilled{ "\xee\xae\xb3" };                            // U+ebb3
        constexpr static inline std::string_view CircleLargeFilled{ "\xee\xae\xb4" };                     // U+ebb4
        constexpr static inline std::string_view CircleLarge{ "\xee\xae\xb5" };                           // U+ebb5
        constexpr static inline std::string_view CircleLargeOutline{ "\xee\xae\xb5" };                    // U+ebb5
        constexpr static inline std::string_view Combine{ "\xee\xae\xb6" };                               // U+ebb6
        constexpr static inline std::string_view Gather{ "\xee\xae\xb6" };                                // U+ebb6
        constexpr static inline std::string_view Table{ "\xee\xae\xb7" };                                 // U+ebb7
        constexpr static inline std::string_view VariableGroup{ "\xee\xae\xb8" };                         // U+ebb8
        constexpr static inline std::string_view TypeHierarchy{ "\xee\xae\xb9" };                         // U+ebb9
        constexpr static inline std::string_view TypeHierarchySub{ "\xee\xae\xba" };                      // U+ebba
        constexpr static inline std::string_view TypeHierarchySuper{ "\xee\xae\xbb" };                    // U+ebbb
        constexpr static inline std::string_view GitPullRequestCreate{ "\xee\xae\xbc" };                  // U+ebbc
        constexpr static inline std::string_view RunAbove{ "\xee\xae\xbd" };                              // U+ebbd
        constexpr static inline std::string_view RunBelow{ "\xee\xae\xbe" };                              // U+ebbe
        constexpr static inline std::string_view NotebookTemplate{ "\xee\xae\xbf" };                      // U+ebbf
        constexpr static inline std::string_view DebugRerun{ "\xee\xaf\x80" };                            // U+ebc0
        constexpr static inline std::string_view WorkspaceTrusted{ "\xee\xaf\x81" };                      // U+ebc1
        constexpr static inline std::string_view WorkspaceUntrusted{ "\xee\xaf\x82" };                    // U+ebc2
        constexpr static inline std::string_view WorkspaceUnknown{ "\xee\xaf\x83" };                      // U+ebc3
        constexpr static inline std::string_view TerminalCmd{ "\xee\xaf\x84" };                           // U+ebc4
        constexpr static inline std::string_view TerminalDebian{ "\xee\xaf\x85" };                        // U+ebc5
        constexpr static inline std::string_view TerminalLinux{ "\xee\xaf\x86" };                         // U+ebc6
        constexpr static inline std::string_view TerminalPowershell{ "\xee\xaf\x87" };                    // U+ebc7
        constexpr static inline std::string_view TerminalTmux{ "\xee\xaf\x88" };                          // U+ebc8
        constexpr static inline std::string_view TerminalUbuntu{ "\xee\xaf\x89" };                        // U+ebc9
        constexpr static inline std::string_view TerminalBash{ "\xee\xaf\x8a" };                          // U+ebca
        constexpr static inline std::string_view ArrowSwap{ "\xee\xaf\x8b" };                             // U+ebcb
        constexpr static inline std::string_view Copy{ "\xee\xaf\x8c" };                                  // U+ebcc
        constexpr static inline std::string_view PersonAdd{ "\xee\xaf\x8d" };                             // U+ebcd
        constexpr static inline std::string_view FilterFilled{ "\xee\xaf\x8e" };                          // U+ebce
        constexpr static inline std::string_view Wand{ "\xee\xaf\x8f" };                                  // U+ebcf
        constexpr static inline std::string_view DebugLineByLine{ "\xee\xaf\x90" };                       // U+ebd0
        constexpr static inline std::string_view Inspect{ "\xee\xaf\x91" };                               // U+ebd1
        constexpr static inline std::string_view Layers{ "\xee\xaf\x92" };                                // U+ebd2
        constexpr static inline std::string_view LayersDot{ "\xee\xaf\x93" };                             // U+ebd3
        constexpr static inline std::string_view LayersActive{ "\xee\xaf\x94" };                          // U+ebd4
        constexpr static inline std::string_view Compass{ "\xee\xaf\x95" };                               // U+ebd5
        constexpr static inline std::string_view CompassDot{ "\xee\xaf\x96" };                            // U+ebd6
        constexpr static inline std::string_view CompassActive{ "\xee\xaf\x97" };                         // U+ebd7
        constexpr static inline std::string_view Azure{ "\xee\xaf\x98" };                                 // U+ebd8
        constexpr static inline std::string_view IssueDraft{ "\xee\xaf\x99" };                            // U+ebd9
        constexpr static inline std::string_view GitPullRequestClosed{ "\xee\xaf\x9a" };                  // U+ebda
        constexpr static inline std::string_view GitPullRequestDraft{ "\xee\xaf\x9b" };                   // U+ebdb
        constexpr static inline std::string_view DebugAll{ "\xee\xaf\x9c" };                              // U+ebdc
        constexpr static inline std::string_view DebugCoverage{ "\xee\xaf\x9d" };                         // U+ebdd
        constexpr static inline std::string_view RunErrors{ "\xee\xaf\x9e" };                             // U+ebde
        constexpr static inline std::string_view FolderLibrary{ "\xee\xaf\x9f" };                         // U+ebdf
        constexpr static inline std::string_view DebugContinueSmall{ "\xee\xaf\xa0" };                    // U+ebe0
        constexpr static inline std::string_view BeakerStop{ "\xee\xaf\xa1" };                            // U+ebe1
        constexpr static inline std::string_view GraphLine{ "\xee\xaf\xa2" };                             // U+ebe2
        constexpr static inline std::string_view GraphScatter{ "\xee\xaf\xa3" };                          // U+ebe3
        constexpr static inline std::string_view PieChart{ "\xee\xaf\xa4" };                              // U+ebe4
        constexpr static inline std::string_view Bracket{ "\xee\xac\x8f" };                               // U+eb0f
        constexpr static inline std::string_view BracketDot{ "\xee\xaf\xa5" };                            // U+ebe5
        constexpr static inline std::string_view BracketError{ "\xee\xaf\xa6" };                          // U+ebe6
        constexpr static inline std::string_view LockSmall{ "\xee\xaf\xa7" };                             // U+ebe7
        constexpr static inline std::string_view AzureDevops{ "\xee\xaf\xa8" };                           // U+ebe8
        constexpr static inline std::string_view VerifiedFilled{ "\xee\xaf\xa9" };                        // U+ebe9
        constexpr static inline std::string_view Newline{ "\xee\xaf\xaa" };                               // U+ebea
        constexpr static inline std::string_view Layout{ "\xee\xaf\xab" };                                // U+ebeb
        constexpr static inline std::string_view LayoutActivitybarLeft{ "\xee\xaf\xac" };                 // U+ebec
        constexpr static inline std::string_view LayoutActivitybarRight{ "\xee\xaf\xad" };                // U+ebed
        constexpr static inline std::string_view LayoutPanelLeft{ "\xee\xaf\xae" };                       // U+ebee
        constexpr static inline std::string_view LayoutPanelCenter{ "\xee\xaf\xaf" };                     // U+ebef
        constexpr static inline std::string_view LayoutPanelJustify{ "\xee\xaf\xb0" };                    // U+ebf0
        constexpr static inline std::string_view LayoutPanelRight{ "\xee\xaf\xb1" };                      // U+ebf1
        constexpr static inline std::string_view LayoutPanel{ "\xee\xaf\xb2" };                           // U+ebf2
        constexpr static inline std::string_view LayoutSidebarLeft{ "\xee\xaf\xb3" };                     // U+ebf3
        constexpr static inline std::string_view LayoutSidebarRight{ "\xee\xaf\xb4" };                    // U+ebf4
        constexpr static inline std::string_view LayoutStatusbar{ "\xee\xaf\xb5" };                       // U+ebf5
        constexpr static inline std::string_view LayoutMenubar{ "\xee\xaf\xb6" };                         // U+ebf6
        constexpr static inline std::string_view LayoutCentered{ "\xee\xaf\xb7" };                        // U+ebf7
        constexpr static inline std::string_view Target{ "\xee\xaf\xb8" };                                // U+ebf8
        constexpr static inline std::string_view Indent{ "\xee\xaf\xb9" };                                // U+ebf9
        constexpr static inline std::string_view RecordSmall{ "\xee\xaf\xba" };                           // U+ebfa
        constexpr static inline std::string_view ErrorSmall{ "\xee\xaf\xbb" };                            // U+ebfb
        constexpr static inline std::string_view TerminalDecorationError{ "\xee\xaf\xbb" };               // U+ebfb
        constexpr static inline std::string_view ArrowCircleDown{ "\xee\xaf\xbc" };                       // U+ebfc
        constexpr static inline std::string_view ArrowCircleLeft{ "\xee\xaf\xbd" };                       // U+ebfd
        constexpr static inline std::string_view ArrowCircleRight{ "\xee\xaf\xbe" };                      // U+ebfe
        constexpr static inline std::string_view ArrowCircleUp{ "\xee\xaf\xbf" };                         // U+ebff
        constexpr static inline std::string_view LayoutSidebarRightOff{ "\xee\xb0\x80" };                 // U+ec00
        constexpr static inline std::string_view LayoutPanelOff{ "\xee\xb0\x81" };                        // U+ec01
        constexpr static inline std::string_view LayoutSidebarLeftOff{ "\xee\xb0\x82" };                  // U+ec02
        constexpr static inline std::string_view Blank{ "\xee\xb0\x83" };                                 // U+ec03
        constexpr static inline std::string_view HeartFilled{ "\xee\xb0\x84" };                           // U+ec04
        constexpr static inline std::string_view Map{ "\xee\xb0\x85" };                                   // U+ec05
        constexpr static inline std::string_view MapHorizontal{ "\xee\xb0\x85" };                         // U+ec05
        constexpr static inline std::string_view FoldHorizontal{ "\xee\xb0\x85" };                        // U+ec05
        constexpr static inline std::string_view MapFilled{ "\xee\xb0\x86" };                             // U+ec06
        constexpr static inline std::string_view MapHorizontalFilled{ "\xee\xb0\x86" };                   // U+ec06
        constexpr static inline std::string_view FoldHorizontalFilled{ "\xee\xb0\x86" };                  // U+ec06
        constexpr static inline std::string_view CircleSmall{ "\xee\xb0\x87" };                           // U+ec07
        constexpr static inline std::string_view BellSlash{ "\xee\xb0\x88" };                             // U+ec08
        constexpr static inline std::string_view BellSlashDot{ "\xee\xb0\x89" };                          // U+ec09
        constexpr static inline std::string_view CommentUnresolved{ "\xee\xb0\x8a" };                     // U+ec0a
        constexpr static inline std::string_view GitPullRequestGoToChanges{ "\xee\xb0\x8b" };             // U+ec0b
        constexpr static inline std::string_view GitPullRequestNewChanges{ "\xee\xb0\x8c" };              // U+ec0c
        constexpr static inline std::string_view SearchFuzzy{ "\xee\xb0\x8d" };                           // U+ec0d
        constexpr static inline std::string_view CommentDraft{ "\xee\xb0\x8e" };                          // U+ec0e
        constexpr static inline std::string_view Send{ "\xee\xb0\x8f" };                                  // U+ec0f
        constexpr static inline std::string_view Sparkle{ "\xee\xb0\x90" };                               // U+ec10
        constexpr static inline std::string_view Insert{ "\xee\xb0\x91" };                                // U+ec11
        constexpr static inline std::string_view Mic{ "\xee\xb0\x92" };                                   // U+ec12
        constexpr static inline std::string_view ThumbsdownFilled{ "\xee\xb0\x93" };                      // U+ec13
        constexpr static inline std::string_view ThumbsupFilled{ "\xee\xb0\x94" };                        // U+ec14
        constexpr static inline std::string_view Coffee{ "\xee\xb0\x95" };                                // U+ec15
        constexpr static inline std::string_view Snake{ "\xee\xb0\x96" };                                 // U+ec16
        constexpr static inline std::string_view Game{ "\xee\xb0\x97" };                                  // U+ec17
        constexpr static inline std::string_view Vr{ "\xee\xb0\x98" };                                    // U+ec18
        constexpr static inline std::string_view Chip{ "\xee\xb0\x99" };                                  // U+ec19
        constexpr static inline std::string_view Piano{ "\xee\xb0\x9a" };                                 // U+ec1a
        constexpr static inline std::string_view Music{ "\xee\xb0\x9b" };                                 // U+ec1b
        constexpr static inline std::string_view MicFilled{ "\xee\xb0\x9c" };                             // U+ec1c
        constexpr static inline std::string_view RepoFetch{ "\xee\xb0\x9d" };                             // U+ec1d
        constexpr static inline std::string_view Copilot{ "\xee\xb0\x9e" };                               // U+ec1e
        constexpr static inline std::string_view LightbulbSparkle{ "\xee\xb0\x9f" };                      // U+ec1f
        constexpr static inline std::string_view Robot{ "\xee\xb0\xa0" };                                 // U+ec20
        constexpr static inline std::string_view SparkleFilled{ "\xee\xb0\xa1" };                         // U+ec21
        constexpr static inline std::string_view DiffSingle{ "\xee\xb0\xa2" };                            // U+ec22
        constexpr static inline std::string_view DiffMultiple{ "\xee\xb0\xa3" };                          // U+ec23
        constexpr static inline std::string_view SurroundWith{ "\xee\xb0\xa4" };                          // U+ec24
        constexpr static inline std::string_view Share{ "\xee\xb0\xa5" };                                 // U+ec25
        constexpr static inline std::string_view GitStash{ "\xee\xb0\xa6" };                              // U+ec26
        constexpr static inline std::string_view GitStashApply{ "\xee\xb0\xa7" };                         // U+ec27
        constexpr static inline std::string_view GitStashPop{ "\xee\xb0\xa8" };                           // U+ec28
        constexpr static inline std::string_view Vscode{ "\xee\xb0\xa9" };                                // U+ec29
        constexpr static inline std::string_view VscodeInsiders{ "\xee\xb0\xaa" };                        // U+ec2a
        constexpr static inline std::string_view CodeOss{ "\xee\xb0\xab" };                               // U+ec2b
        constexpr static inline std::string_view RunCoverage{ "\xee\xb0\xac" };                           // U+ec2c
        constexpr static inline std::string_view RunAllCoverage{ "\xee\xb0\xad" };                        // U+ec2d
        constexpr static inline std::string_view Coverage{ "\xee\xb0\xae" };                              // U+ec2e
        constexpr static inline std::string_view GithubProject{ "\xee\xb0\xaf" };                         // U+ec2f
        constexpr static inline std::string_view MapVertical{ "\xee\xb0\xb0" };                           // U+ec30
        constexpr static inline std::string_view FoldVertical{ "\xee\xb0\xb0" };                          // U+ec30
        constexpr static inline std::string_view MapVerticalFilled{ "\xee\xb0\xb1" };                     // U+ec31
        constexpr static inline std::string_view FoldVerticalFilled{ "\xee\xb0\xb1" };                    // U+ec31
        constexpr static inline std::string_view GoToSearch{ "\xee\xb0\xb2" };                            // U+ec32
        constexpr static inline std::string_view Percentage{ "\xee\xb0\xb3" };                            // U+ec33
        constexpr static inline std::string_view SortPercentage{ "\xee\xb0\xb3" };                        // U+ec33
        constexpr static inline std::string_view GitFetch{ "\xef\x84\x81" };                              // U+f101
    };
}
